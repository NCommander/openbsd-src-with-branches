.\"
.\" Copyright (c) 1994-1996, 1998-2005, 2007-2012
.\" Todd C. Miller <Todd.Miller@courtesan.com>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\" ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" Sponsored in part by the Defense Advanced Research Projects
.\" Agency (DARPA) and Air Force Research Laboratory, Air Force
.\" Materiel Command, USAF, under agreement number F39502-99-1-0512.
.\"
.Dd $Mdocdate: September 23 2013 $
.Dt SUDOERS @mansectform@
.Os
.Sh NAME
.Nm sudoers
.Nd list of which users may execute what
.Sh DESCRIPTION
The
.Em sudoers
file is composed of two types of entries: aliases
(basically variables) and user specifications (which specify who
may run what).
.Pp
When multiple entries match for a user, they are applied in order.
Where there are multiple matches, the last match is used (which is
not necessarily the most specific match).
.Pp
The
.Em sudoers
grammar will be described below in Extended Backus-Naur
Form (EBNF).
Don't despair if you are unfamiliar with EBNF; it is fairly simple,
and the definitions below are annotated.
.Ss Quick guide to EBNF
EBNF is a concise and exact way of describing the grammar of a language.
Each EBNF definition is made up of
.Em production rules .
E.g.,
.Pp
.Li  symbol ::= definition | alternate1 | alternate2 ...
.Pp
Each
.Em production rule
references others and thus makes up a
grammar for the language.
EBNF also contains the following
operators, which many readers will recognize from regular
expressions.
Do not, however, confuse them with
.Dq wildcard
characters, which have different meanings.
.Bl -tag -width 4n
.It Li \&?
Means that the preceding symbol (or group of symbols) is optional.
That is, it may appear once or not at all.
.It Li *
Means that the preceding symbol (or group of symbols) may appear
zero or more times.
.It Li +
Means that the preceding symbol (or group of symbols) may appear
one or more times.
.El
.Pp
Parentheses may be used to group symbols together.
For clarity,
we will use single quotes
.Pq ''
to designate what is a verbatim character string (as opposed to a symbol name).
.Ss Aliases
There are four kinds of aliases:
.Li User_Alias ,
.Li Runas_Alias ,
.Li Host_Alias
and
.Li Cmnd_Alias .
.Bd -literal
Alias ::= 'User_Alias'  User_Alias (':' User_Alias)* |
          'Runas_Alias' Runas_Alias (':' Runas_Alias)* |
          'Host_Alias'  Host_Alias (':' Host_Alias)* |
          'Cmnd_Alias'  Cmnd_Alias (':' Cmnd_Alias)*

User_Alias ::= NAME '=' User_List

Runas_Alias ::= NAME '=' Runas_List

Host_Alias ::= NAME '=' Host_List

Cmnd_Alias ::= NAME '=' Cmnd_List

NAME ::= [A-Z]([A-Z][0-9]_)*
.Ed
.Pp
Each
.Em alias
definition is of the form
.Bd -literal
Alias_Type NAME = item1, item2, ...
.Ed
.Pp
where
.Em Alias_Type
is one of
.Li User_Alias ,
.Li Runas_Alias ,
.Li Host_Alias ,
or
.Li Cmnd_Alias .
A
.Li NAME
is a string of uppercase letters, numbers,
and underscore characters
.Pq Ql _ .
A
.Li NAME
.Sy must
start with an
uppercase letter.
It is possible to put several alias definitions
of the same type on a single line, joined by a colon
.Pq Ql :\& .
E.g.,
.Bd -literal
Alias_Type NAME = item1, item2, item3 : NAME = item4, item5
.Ed
.Pp
The definitions of what constitutes a valid
.Em alias
member follow.
.Bd -literal
User_List ::= User |
              User ',' User_List

User ::= '!'* user name |
         '!'* #uid |
         '!'* %group |
         '!'* %#gid |
         '!'* +netgroup |
         '!'* %:nonunix_group |
         '!'* %:#nonunix_gid |
         '!'* User_Alias
.Ed
.Pp
A
.Li User_List
is made up of one or more user names, user ids
(prefixed with
.Ql # ) ,
system group names and ids (prefixed with
.Ql %
and
.Ql %#
respectively), netgroups (prefixed with
.Ql + ) ,
non-Unix group names and IDs (prefixed with
.Ql %:
and
.Ql %:#
respectively) and
.Li User_Alias Ns No es.
Each list item may be prefixed with zero or more
.Ql \&!
operators.
An odd number of
.Ql \&!
operators negate the value of
the item; an even number just cancel each other out.
.Pp
A
.Li user name ,
.Li uid ,
.Li group ,
.Li gid ,
.Li netgroup ,
.Li nonunix_group
or
.Li nonunix_gid
may be enclosed in double quotes to avoid the
need for escaping special characters.
Alternately, special characters
may be specified in escaped hex mode, e.g.\& \ex20 for space.
When
using double quotes, any prefix characters must be included inside
the quotes.
.Pp
The actual
.Li nonunix_group
and
.Li nonunix_gid
syntax depends on
the underlying implementation.
For instance, the QAS AD backend supports the following formats:
.Bl -bullet -width 4n
.It
Group in the same domain: "%:Group Name"
.It
Group in any domain: "%:Group Name@FULLY.QUALIFIED.DOMAIN"
.It
Group SID: "%:S-1-2-34-5678901234-5678901234-5678901234-567"
.El
.Pp
Note that quotes around group names are optional.
Unquoted strings must use a backslash
.Pq Ql \e
to escape spaces and special characters.
See
.Sx Other special characters and reserved words
for a list of
characters that need to be escaped.
.Bd -literal
Runas_List ::= Runas_Member |
               Runas_Member ',' Runas_List

Runas_Member ::= '!'* user name |
                 '!'* #uid |
                 '!'* %group |
                 '!'* %#gid |
                 '!'* %:nonunix_group |
                 '!'* %:#nonunix_gid |
                 '!'* +netgroup |
                 '!'* Runas_Alias
.Ed
.Pp
A
.Li Runas_List
is similar to a
.Li User_List
except that instead
of
.Li User_Alias Ns No es
it can contain
.Li Runas_Alias Ns No es .
Note that
user names and groups are matched as strings.
In other words, two
users (groups) with the same uid (gid) are considered to be distinct.
If you wish to match all user names with the same uid (e.g.\&
root and toor), you can use a uid instead (#0 in the example given).
.Bd -literal
Host_List ::= Host |
              Host ',' Host_List

Host ::= '!'* host name |
         '!'* ip_addr |
         '!'* network(/netmask)? |
         '!'* +netgroup |
         '!'* Host_Alias
.Ed
.Pp
A
.Li Host_List
is made up of one or more host names, IP addresses,
network numbers, netgroups (prefixed with
.Ql + )
and other aliases.
Again, the value of an item may be negated with the
.Ql \&!
operator.
If you do not specify a netmask along with the network number,
.Nm sudo
will query each of the local host's network interfaces and,
if the network number corresponds to one of the hosts's network
interfaces, the corresponding netmask will be used.
The netmask
may be specified either in standard IP address notation
(e.g.\& 255.255.255.0 or ffff:ffff:ffff:ffff::),
or CIDR notation (number of bits, e.g.\& 24 or 64).
A host name may include shell-style wildcards (see the
.Sx Wildcards
section below),
but unless the
.Li host name
command on your machine returns the fully
qualified host name, you'll need to use the
.Em fqdn
option for wildcards to be useful.
Note that
.Nm sudo
only inspects actual network interfaces; this means that IP address
127.0.0.1 (localhost) will never match.
Also, the host name
.Dq localhost
will only match if that is the actual host name, which is usually
only the case for non-networked systems.
.Bd -literal
Cmnd_List ::= Cmnd |
              Cmnd ',' Cmnd_List

command name ::= file name |
                 file name args |
                 file name '""'

Cmnd ::= '!'* command name |
         '!'* directory |
         '!'* "sudoedit" |
         '!'* Cmnd_Alias
.Ed
.Pp
A
.Li Cmnd_List
is a list of one or more command names, directories, and other aliases.
A command name is a fully qualified file name which may include
shell-style wildcards (see the
.Sx Wildcards
section below).
A simple file name allows the user to run the command with any
arguments he/she wishes.
However, you may also specify command line arguments (including
wildcards).
Alternately, you can specify
.Li \&""
to indicate that the command
may only be run
.Sy without
command line arguments.
A directory is a
fully qualified path name ending in a
.Ql / .
When you specify a directory in a
.Li Cmnd_List ,
the user will be able to run any file within that directory
(but not in any sub-directories therein).
.Pp
If a
.Li Cmnd
has associated command line arguments, then the arguments
in the
.Li Cmnd
must match exactly those given by the user on the command line
(or match the wildcards if there are any).
Note that the following characters must be escaped with a
.Ql \e
if they are used in command arguments:
.Ql ,\& ,
.Ql :\& ,
.Ql =\& ,
.Ql \e .
The special command
.Dq Li sudoedit
is used to permit a user to run
.Nm sudo
with the
.Fl e
option (or as
.Nm sudoedit ) .
It may take command line arguments just as a normal command does.
.Ss Defaults
Certain configuration options may be changed from their default
values at run-time via one or more
.Li Default_Entry
lines.
These may affect all users on any host, all users on a specific host, a
specific user, a specific command, or commands being run as a specific user.
Note that per-command entries may not include command line arguments.
If you need to specify arguments, define a
.Li Cmnd_Alias
and reference
that instead.
.Bd -literal
Default_Type ::= 'Defaults' |
                 'Defaults' '@' Host_List |
                 'Defaults' ':' User_List |
                 'Defaults' '!' Cmnd_List |
                 'Defaults' '>' Runas_List

Default_Entry ::= Default_Type Parameter_List

Parameter_List ::= Parameter |
                   Parameter ',' Parameter_List

Parameter ::= Parameter '=' Value |
              Parameter '+=' Value |
              Parameter '-=' Value |
              '!'* Parameter
.Ed
.Pp
Parameters may be
.Sy flags ,
.Sy integer
values,
.Sy strings ,
or
.Sy lists .
Flags are implicitly boolean and can be turned off via the
.Ql \&!
operator.
Some integer, string and list parameters may also be
used in a boolean context to disable them.
Values may be enclosed
in double quotes
.Pq \&""
when they contain multiple words.
Special characters may be escaped with a backslash
.Pq Ql \e .
.Pp
Lists have two additional assignment operators,
.Li +=
and
.Li -= .
These operators are used to add to and delete from a list respectively.
It is not an error to use the
.Li -=
operator to remove an element
that does not exist in a list.
.Pp
Defaults entries are parsed in the following order: generic, host
and user Defaults first, then runas Defaults and finally command
defaults.
.Pp
See
.Sx SUDOERS OPTIONS
for a list of supported Defaults parameters.
.Ss User Specification
.Bd -literal
User_Spec ::= User_List Host_List '=' Cmnd_Spec_List \e
              (':' Host_List '=' Cmnd_Spec_List)*

Cmnd_Spec_List ::= Cmnd_Spec |
                   Cmnd_Spec ',' Cmnd_Spec_List

Cmnd_Spec ::= Runas_Spec? Tag_Spec* Cmnd

Runas_Spec ::= '(' Runas_List? (':' Runas_List)? ')'

Tag_Spec ::= ('NOPASSWD:' | 'PASSWD:' | 'NOEXEC:' | 'EXEC:' |
              'SETENV:' | 'NOSETENV:')
.Ed
.Pp
A
.Sy user specification
determines which commands a user may run
(and as what user) on specified hosts.
By default, commands are
run as
.Sy root ,
but this can be changed on a per-command basis.
.Pp
The basic structure of a user specification is
.Dq who where = (as_whom) what .
Let's break that down into its constituent parts:
.Ss Runas_Spec
A
.Li Runas_Spec
determines the user and/or the group that a command
may be run as.
A fully-specified
.Li Runas_Spec
consists of two
.Li Runas_List Ns No s
(as defined above) separated by a colon
.Pq Ql :\&
and enclosed in a set of parentheses.
The first
.Li Runas_List
indicates
which users the command may be run as via
.Nm sudo Ns No 's
.Fl u
option.
The second defines a list of groups that can be specified via
.Nm sudo Ns No 's
.Fl g
option.
If both
.Li Runas_List Ns No s
are specified, the command may be run with any combination of users
and groups listed in their respective
.Li Runas_List Ns No s.
If only the first is specified, the command may be run as any user
in the list but no
.Fl g
option
may be specified.
If the first
.Li Runas_List
is empty but the
second is specified, the command may be run as the invoking user
with the group set to any listed in the
.Li Runas_List .
If no
.Li Runas_Spec
is specified the command may be run as
.Sy root
and
no group may be specified.
.Pp
A
.Li Runas_Spec
sets the default for the commands that follow it.
What this means is that for the entry:
.Bd -literal
dgb	boulder = (operator) /bin/ls, /bin/kill, /usr/bin/lprm
.Ed
.Pp
The user
.Sy dgb
may run
.Pa /bin/ls ,
.Pa /bin/kill ,
and
.Pa /usr/bin/lprm Ns No \(em Ns but
only as
.Sy operator .
E.g.,
.Bd -literal
$ sudo -u operator /bin/ls
.Ed
.Pp
It is also possible to override a
.Li Runas_Spec
later on in an entry.
If we modify the entry like so:
.Bd -literal
dgb	boulder = (operator) /bin/ls, (root) /bin/kill, /usr/bin/lprm
.Ed
.Pp
Then user
.Sy dgb
is now allowed to run
.Pa /bin/ls
as
.Sy operator ,
but
.Pa /bin/kill
and
.Pa /usr/bin/lprm
as
.Sy root .
.Pp
We can extend this to allow
.Sy dgb
to run
.Li /bin/ls
with either
the user or group set to
.Sy operator :
.Bd -literal
dgb	boulder = (operator : operator) /bin/ls, (root) /bin/kill,\e
	/usr/bin/lprm
.Ed
.Pp
Note that while the group portion of the
.Li Runas_Spec
permits the
user to run as command with that group, it does not force the user
to do so.
If no group is specified on the command line, the command
will run with the group listed in the target user's password database
entry.
The following would all be permitted by the sudoers entry above:
.Bd -literal
$ sudo -u operator /bin/ls
$ sudo -u operator -g operator /bin/ls
$ sudo -g operator /bin/ls
.Ed
.Pp
In the following example, user
.Sy tcm
may run commands that access
a modem device file with the dialer group.
.Bd -literal
tcm	boulder = (:dialer) /usr/bin/tip, /usr/bin/cu,\e
	/usr/local/bin/minicom
.Ed
.Pp
Note that in this example only the group will be set, the command
still runs as user
.Sy tcm .
E.g.\&
.Bd -literal
$ sudo -g dialer /usr/bin/cu
.Ed
.Pp
Multiple users and groups may be present in a
.Li Runas_Spec ,
in which case the user may select any combination of users and groups via the
.Fl u
and
.Fl g
options.
In this example:
.Bd -literal
alan	ALL = (root, bin : operator, system) ALL
.Ed
.Pp
user
.Sy alan
may run any command as either user root or bin,
optionally setting the group to operator or system.
.Ss Tag_Spec
A command may have zero or more tags associated with it.
There are
six possible tag values:
.Li NOPASSWD ,
.Li PASSWD ,
.Li NOEXEC ,
.Li EXEC ,
.Li SETENV ,
and
.Li NOSETENV .
Once a tag is set on a
.Li Cmnd ,
subsequent
.Li Cmnd Ns No s
in the
.Li Cmnd_Spec_List ,
inherit the tag unless it is overridden by the opposite tag (in other words,
.Li PASSWD
overrides
.Li NOPASSWD
and
.Li NOEXEC
overrides
.Li EXEC ) .
.Pp
.Em NOPASSWD and PASSWD
.Pp
By default,
.Nm sudo
requires that a user authenticate him or herself
before running a command.
This behavior can be modified via the
.Li NOPASSWD
tag.
Like a
.Li Runas_Spec ,
the
.Li NOPASSWD
tag sets
a default for the commands that follow it in the
.Li Cmnd_Spec_List .
Conversely, the
.Li PASSWD
tag can be used to reverse things.
For example:
.Bd -literal
ray	rushmore = NOPASSWD: /bin/kill, /bin/ls, /usr/bin/lprm
.Ed
.Pp
would allow the user
.Sy ray
to run
.Pa /bin/kill ,
.Pa /bin/ls ,
and
.Pa /usr/bin/lprm
as
.Sy root
on the machine rushmore without authenticating himself.
If we only want
.Sy ray
to be able to
run
.Pa /bin/kill
without a password the entry would be:
.Bd -literal
ray	rushmore = NOPASSWD: /bin/kill, PASSWD: /bin/ls, /usr/bin/lprm
.Ed
.Pp
Note, however, that the
.Li PASSWD
tag has no effect on users who are in the group specified by the
.Em exempt_group
option.
.Pp
By default, if the
.Li NOPASSWD
tag is applied to any of the entries for a user on the current host,
he or she will be able to run
.Dq Li sudo -l
without a password.
Additionally, a user may only run
.Dq Li sudo -v
without a password if the
.Li NOPASSWD
tag is present for all a user's entries that pertain to the current host.
This behavior may be overridden via the
.Em verifypw
and
.Em listpw
options.
.Pp
.Em NOEXEC and EXEC
.Pp
If
.Nm sudo
has been compiled with
.Em noexec
support and the underlying operating system supports it, the
.Li NOEXEC
tag can be used to prevent a dynamically-linked executable from
running further commands itself.
.Pp
In the following example, user
.Sy aaron
may run
.Pa /usr/bin/more
and
.Pa /usr/bin/vi
but shell escapes will be disabled.
.Bd -literal
aaron	shanty = NOEXEC: /usr/bin/more, /usr/bin/vi
.Ed
.Pp
See the
.Sx Preventing Shell Escapes
section below for more details on how
.Li NOEXEC
works and whether or not it will work on your system.
.Pp
.Em SETENV and NOSETENV
.Pp
These tags override the value of the
.Em setenv
option on a per-command basis.
Note that if
.Li SETENV
has been set for a command, the user may disable the
.Em env_reset
option from the command line via the
.Fl E
option.
Additionally, environment variables set on the command
line are not subject to the restrictions imposed by
.Em env_check ,
.Em env_delete ,
or
.Em env_keep .
As such, only trusted users should be allowed to set variables in this manner.
If the command matched is
.Sy ALL ,
the
.Li SETENV
tag is implied for that command; this default may be overridden by use of the
.Li NOSETENV
tag.
.Ss Wildcards
.Nm sudo
allows shell-style
.Em wildcards
(aka meta or glob characters)
to be used in host names, path names and command line arguments in the
.Em sudoers
file.
Wildcard matching is done via the
.Sy POSIX
.Xr glob 3
and
.Xr fnmatch 3
routines.
Note that these are
.Em not
regular expressions.
.Bl -tag -width 8n
.It Li *
Matches any set of zero or more characters.
.It Li \&?
Matches any single character.
.It Li [...]
Matches any character in the specified range.
.It Li [!...]
Matches any character
.Sy not
in the specified range.
.It Li \ex
For any character
.Sq x ,
evaluates to
.Sq x .
This is used to escape special characters such as:
.Ql * ,
.Ql \&? ,
.Ql [\& ,
and
.Ql ]\& .
.El
.Pp
POSIX character classes may also be used if your system's
.Xr glob 3
and
.Xr fnmatch 3
functions support them.
However, because the
.Ql :\&
character has special meaning in
.Em sudoers ,
it must be
escaped.
For example:
.Bd -literal -offset 4n
/bin/ls [[\:alpha\:]]*
.Ed
.Pp
Would match any file name beginning with a letter.
.Pp
Note that a forward slash
.Pq Ql /
will
.Sy not
be matched by
wildcards used in the path name.
This is to make a path like:
.Bd -literal -offset 4n
/usr/bin/*
.Ed
.Pp
match
.Pa /usr/bin/who
but not
.Pa /usr/bin/X11/xterm .
.Pp
When matching the command line arguments, however, a slash
.Sy does
get matched by wildcards since command line arguments may contain
arbitrary strings and not just path names.
.Pp
Wildcards in command line arguments should be used with care.
Because command line arguments are matched as a single, concatenated
string, a wildcard such as
.Ql \&?
or
.Ql *
can match multiple words.
For example, while a sudoers entry like:
.Bd -literal -offset 4n
%operator ALL = /bin/cat /var/log/messages*
.Ed
.Pp
will allow command like:
.Bd -literal -offset 4n
$ sudo cat /var/log/messages.1
.Ed
.Pp
It will also allow:
.Bd -literal -offset 4n
$ sudo cat /var/log/messages /etc/shadow
.Ed
.Pp
which is probably not what was intended.
.Ss Exceptions to wildcard rules
The following exceptions apply to the above rules:
.Bl -tag -width 8n
.It Li \&""
If the empty string
.Li \&""
is the only command line argument in the
.Em sudoers
entry it means that command is not allowed to be run with
.Sy any
arguments.
.It sudoedit
Command line arguments to the
.Em sudoedit
built-in command should always be path names, so a forward slash
.Pq Ql /
will not be matched by a wildcard.
.El
.Ss Including other files from within sudoers
It is possible to include other
.Em sudoers
files from within the
.Em sudoers
file currently being parsed using the
.Li #include
and
.Li #includedir
directives.
.Pp
This can be used, for example, to keep a site-wide
.Em sudoers
file in addition to a local, per-machine file.
For the sake of this example the site-wide
.Em sudoers
will be
.Pa /etc/sudoers
and the per-machine one will be
.Pa /etc/sudoers.local .
To include
.Pa /etc/sudoers.local
from within
.Pa /etc/sudoers
we would use the
following line in
.Pa /etc/sudoers :
.Bd -literal -offset 4n
#include /etc/sudoers.local
.Ed
.Pp
When
.Nm sudo
reaches this line it will suspend processing of the current file
.Pq Pa /etc/sudoers
and switch to
.Pa /etc/sudoers.local .
Upon reaching the end of
.Pa /etc/sudoers.local ,
the rest of
.Pa /etc/sudoers
will be processed.
Files that are included may themselves include other files.
A hard limit of 128 nested include files is enforced to prevent include
file loops.
.Pp
If the path to the include file is not fully-qualified (does not
begin with a
.Ql / ,
it must be located in the same directory as the sudoers file it was
included from.
For example, if
.Pa /etc/sudoers
contains the line:
.Bd -literal -offset 4n
.Li #include sudoers.local
.Ed
.Pp
the file that will be included is
.Pa /etc/sudoers.local .
.Pp
The file name may also include the
.Li %h
escape, signifying the short form of the host name.
In other words, if the machine's host name is
.Dq xerxes ,
then
.Bd -literal -offset 4n
#include /etc/sudoers.%h
.Ed
.Pp
will cause
.Nm sudo
to include the file
.Pa /etc/sudoers.xerxes .
.Pp
The
.Li #includedir
directive can be used to create a
.Pa sudo.d
directory that the system package manager can drop
.Em sudoers
rules
into as part of package installation.
For example, given:
.Bd -literal -offset 4n
#includedir /etc/sudoers.d
.Ed
.Pp
.Nm sudo
will read each file in
.Pa /etc/sudoers.d ,
skipping file names that end in
.Ql ~
or contain a
.Ql .\&
character to avoid causing problems with package manager or editor
temporary/backup files.
Files are parsed in sorted lexical order.
That is,
.Pa /etc/sudoers.d/01_first
will be parsed before
.Pa /etc/sudoers.d/10_second .
Be aware that because the sorting is lexical, not numeric,
.Pa /etc/sudoers.d/1_whoops
would be loaded
.Sy after
.Pa /etc/sudoers.d/10_second .
Using a consistent number of leading zeroes in the file names can be used
to avoid such problems.
.Pp
Note that unlike files included via
.Li #include ,
.Nm visudo
will not edit the files in a
.Li #includedir
directory unless one of them contains a syntax error.
It is still possible to run
.Nm visudo
with the
.Fl f
flag to edit the files directly.
.Ss Other special characters and reserved words
The pound sign
.Pq Ql #
is used to indicate a comment (unless it is part of a #include
directive or unless it occurs in the context of a user name and is
followed by one or more digits, in which case it is treated as a
uid).
Both the comment character and any text after it, up to the end of
the line, are ignored.
.Pp
The reserved word
.Sy ALL
is a built-in
.Em alias
that always causes a match to succeed.
It can be used wherever one might otherwise use a
.Li Cmnd_Alias ,
.Li User_Alias ,
.Li Runas_Alias ,
or
.Li Host_Alias .
You should not try to define your own
.Em alias
called
.Sy ALL
as the built-in alias will be used in preference to your own.
Please note that using
.Sy ALL
can be dangerous since in a command context, it allows the user to run
.Sy any
command on the system.
.Pp
An exclamation point
.Pq Ql \&!
can be used as a logical
.Em not
operator both in an
.Em alias
and in front of a
.Li Cmnd .
This allows one to exclude certain values.
Note, however, that using a
.Ql \&!
in conjunction with the built-in
.Sy ALL
alias to allow a user to run
.Dq all but a few
commands rarely works as intended (see
.Sx SECURITY NOTES
below).
.Pp
Long lines can be continued with a backslash
.Pq Ql \e
as the last character on the line.
.Pp
White space between elements in a list as well as special syntactic
characters in a
.Em User Specification
.Po
.Ql =\& ,
.Ql :\& ,
.Ql (\& ,
.Ql )\&
.Pc
is optional.
.Pp
The following characters must be escaped with a backslash
.Pq Ql \e
when used as part of a word (e.g.\& a user name or host name):
.Ql \&! ,
.Ql =\& ,
.Ql :\& ,
.Ql ,\& ,
.Ql (\& ,
.Ql )\& ,
.Ql \e .
.Sh SUDOERS OPTIONS
.Nm sudo Ns No 's
behavior can be modified by
.Li Default_Entry
lines, as explained earlier.
A list of all supported Defaults parameters, grouped by type, are listed below.
.Pp
.Sy Boolean Flags :
.Bl -tag -width 16n
.It always_set_home
If enabled,
.Nm sudo
will set the
.Ev HOME
environment variable to the home directory of the target user
(which is root unless the
.Fl u
option is used).
This effectively means that the
.Fl H
option is always implied.
This flag is
.Em off
by default.
.It authenticate
If set, users must authenticate themselves via a password (or other
means of authentication) before they may run commands.
This default may be overridden via the
.Li PASSWD
and
.Li NOPASSWD
tags.
This flag is
.Em on
by default.
.It closefrom_override
If set, the user may use
.Nm sudo Ns No 's
.Fl C
option which overrides the default starting point at which
.Nm sudo
begins closing open file descriptors.
This flag is
.Em off
by default.
.It env_editor
If set,
.Nm visudo
will use the value of the
.Ev EDITOR
or
.Ev VISUAL
environment variables before falling back on the default editor list.
Note that this may create a security hole as it allows the user to
run any arbitrary command as root without logging.
A safer alternative is to place a colon-separated list of editors
in the
.Li editor
variable.
.Nm visudo
will then only use the
.Ev EDITOR
or
.Ev VISUAL
if they match a value specified in
.Li editor .
This flag is
.Em @env_editor@
by
default.
.It env_reset
If set,
.Nm sudo
will run the command in a minimal environment containing the
.Ev TERM ,
.Ev PATH ,
.Ev HOME ,
.Ev MAIL ,
.Ev SHELL ,
.Ev LOGNAME ,
.Ev USER ,
.Ev USERNAME
and
.Ev SUDO_*
variables.
Any
variables in the caller's environment that match the
.Li env_keep
and
.Li env_check
lists are then added, followed by any variables present in the file
specified by the
.Em env_file
option (if any).
The default contents of the
.Li env_keep
and
.Li env_check
lists are displayed when
.Nm sudo
is run by root with the
.Fl V
option.
If the
.Em secure_path
option is set, its value will be used for the
.Ev PATH
environment variable.
This flag is
.Em @env_reset@
by default.
.It fast_glob
Normally,
.Nm sudo
uses the
.Xr glob 3
function to do shell-style globbing when matching path names.
However, since it accesses the file system,
.Xr glob 3
can take a long time to complete for some patterns, especially
when the pattern references a network file system that is mounted
on demand (auto mounted).
The
.Em fast_glob
option causes
.Nm sudo
to use the
.Xr fnmatch 3
function, which does not access the file system to do its matching.
The disadvantage of
.Em fast_glob
is that it is unable to match relative path names such as
.Pa ./ls
or
.Pa ../bin/ls .
This has security implications when path names that include globbing
characters are used with the negation operator,
.Ql !\& ,
as such rules can be trivially bypassed.
As such, this option should not be used when
.Em sudoers
contains rules that contain negated path names which include globbing
characters.
This flag is
.Em off
by default.
.It fqdn
Set this flag if you want to put fully qualified host names in the
.Em sudoers
file when the local host name (as returned by the
.Li hostname
command) does not contain the domain name.
In other words, instead of myhost you would use myhost.mydomain.edu.
You may still use the short form if you wish (and even mix the two).
This option is only effective when the
.Dq canonical
host name, as returned by the
.Fn getaddrinfo
or
.Fn gethostbyname
function, is a fully-qualified domain name.
This is usually the case when the system is configured to use DNS
for host name resolution.
.Pp
If the system is configured to use the
.Pa /etc/hosts
file in preference to DNS, the
.Dq canonical
host name may not be fully-qualified.
The order that sources are queried for hosts name resolution
is specified in the
.Pa /etc/resolv.conf
file.
In the
.Pa /etc/hosts
file, the first host name of the entry is considered to be the
.Dq canonical
name; subsequent names are aliases that are not used by
.Nm sudoers .
For example, the following hosts file line for the machine
.Dq xyzzy
has the fully-qualified domain name as the
.Dq canonical
host name, and the short version as an alias.
.sp
.Dl 192.168.1.1	xyzzy.sudo.ws xyzzy
.sp
If the machine's hosts file entry is not formatted properly, the
.Em fqdn
option will not be effective if it is queried before DNS.
.Pp
Beware that when using DNS for host name resolution, turning on
.Em fqdn
requires
.Nm sudoers
to make DNS lookups which renders
.Nm sudo
unusable if DNS stops working (for example if the machine is disconnected
from the network).
Also note that just like with the hosts file, you must use the
.Dq canonical
name as DNS knows it.
That is, you may not use a host alias
.Po
.Li CNAME
entry
.Pc
due to performance issues and the fact that there is no way to get all
aliases from DNS.
.Pp
This flag is
.Em @fqdn@
by default.
.It ignore_dot
If set,
.Nm sudo
will ignore "." or "" (both denoting current directory) in the
.Ev PATH
environment variable; the
.Ev PATH
itself is not modified.
This flag is
.Em @ignore_dot@
by default.
.It ignore_local_sudoers
If set via LDAP, parsing of
.Pa @sysconfdir@/sudoers
will be skipped.
This is intended for Enterprises that wish to prevent the usage of local
sudoers files so that only LDAP is used.
This thwarts the efforts of rogue operators who would attempt to add roles to
.Pa @sysconfdir@/sudoers .
When this option is present,
.Pa @sysconfdir@/sudoers
does not even need to exist.
Since this option tells
.Nm sudo
how to behave when no specific LDAP entries have been matched, this
sudoOption is only meaningful for the
.Li cn=defaults
section.
This flag is
.Em off
by default.
.It insults
If set,
.Nm sudo
will insult users when they enter an incorrect password.
This flag is
.Em @insults@
by default.
.It log_host
If set, the host name will be logged in the (non-syslog)
.Nm sudo
log file.
This flag is
.Em off
by default.
.It log_year
If set, the four-digit year will be logged in the (non-syslog)
.Nm sudo
log file.
This flag is
.Em off
by default.
.It long_otp_prompt
When validating with a One Time Password (OTP) scheme such as
.Sy S/Key
or
.Sy OPIE ,
a two-line prompt is used to make it easier
to cut and paste the challenge to a local window.
It's not as pretty as the default but some people find it more convenient.
This flag is
.Em @long_otp_prompt@
by default.
.It mail_always
Send mail to the
.Em mailto
user every time a users runs
.Nm sudo .
This flag is
.Em off
by default.
.It mail_badpass
Send mail to the
.Em mailto
user if the user running
.Nm sudo
does not enter the correct password.
If the command the user is attempting to run is not permitted by
.Em sudoers
and one of the
.Em mail_always ,
.Em mail_no_host ,
.Em mail_no_perms
or
.Em mail_no_user
flags are set, this flag will have no effect.
This flag is
.Em off
by default.
.It mail_no_host
If set, mail will be sent to the
.Em mailto
user if the invoking user exists in the
.Em sudoers
file, but is not allowed to run commands on the current host.
This flag is
.Em @mail_no_host@
by default.
.It mail_no_perms
If set, mail will be sent to the
.Em mailto
user if the invoking user is allowed to use
.Nm sudo
but the command they are trying is not listed in their
.Em sudoers
file entry or is explicitly denied.
This flag is
.Em @mail_no_perms@
by default.
.It mail_no_user
If set, mail will be sent to the
.Em mailto
user if the invoking user is not in the
.Em sudoers
file.
This flag is
.Em @mail_no_user@
by default.
.It noexec
If set, all commands run via
.Nm sudo
will behave as if the
.Li NOEXEC
tag has been set, unless overridden by a
.Li EXEC
tag.
See the description of
.Em NOEXEC and EXEC
below as well as the
.Sx Preventing Shell Escapes
section at the end of this manual.
This flag is
.Em off
by default.
.It path_info
Normally,
.Nm sudo
will tell the user when a command could not be
found in their
.Ev PATH
environment variable.
Some sites may wish to disable this as it could be used to gather
information on the location of executables that the normal user does
not have access to.
The disadvantage is that if the executable is simply not in the user's
.Ev PATH ,
.Nm sudo
will tell the user that they are not allowed to run it, which can be confusing.
This flag is
.Em @path_info@
by default.
.It passprompt_override
The password prompt specified by
.Em passprompt
will normally only be used if the password prompt provided by systems
such as PAM matches the string
.Dq Password: .
If
.Em passprompt_override
is set,
.Em passprompt
will always be used.
This flag is
.Em off
by default.
.It preserve_groups
By default,
.Nm sudo
will initialize the group vector to the list of groups the target user is in.
When
.Em preserve_groups
is set, the user's existing group vector is left unaltered.
The real and effective group IDs, however, are still set to match the
target user.
This flag is
.Em off
by default.
.It pwfeedback
By default,
.Nm sudo
reads the password like most other Unix programs,
by turning off echo until the user hits the return (or enter) key.
Some users become confused by this as it appears to them that
.Nm sudo
has hung at this point.
When
.Em pwfeedback
is set,
.Nm sudo
will provide visual feedback when the user presses a key.
Note that this does have a security impact as an onlooker may be able to
determine the length of the password being entered.
This flag is
.Em off
by default.
.It requiretty
If set,
.Nm sudo
will only run when the user is logged in to a real tty.
When this flag is set,
.Nm sudo
can only be run from a login session and not via other means such as
.Xr cron @mansectsu@
or cgi-bin scripts.
This flag is
.Em off
by default.
.It root_sudo
If set, root is allowed to run
.Nm sudo
too.
Disabling this prevents users from
.Dq chaining
.Nm sudo
commands to get a root shell by doing something like
.Dq Li sudo sudo /bin/sh .
Note, however, that turning off
.Em root_sudo
will also prevent root from running
.Nm sudoedit .
Disabling
.Em root_sudo
provides no real additional security; it exists purely for historical reasons.
This flag is
.Em @root_sudo@
by default.
.It rootpw
If set,
.Nm sudo
will prompt for the root password instead of the password of the invoking user.
This flag is
.Em off
by default.
.It runaspw
If set,
.Nm sudo
will prompt for the password of the user defined by the
.Em runas_default
option (defaults to
.Li @runas_default@ )
instead of the password of the invoking user.
This flag is
.Em off
by default.
.It set_home
If enabled and
.Nm sudo
is invoked with the
.Fl s
option the
.Ev HOME
environment variable will be set to the home directory of the target
user (which is root unless the
.Fl u
option is used).
This effectively makes the
.Fl s
option imply
.Fl H .
This flag is
.Em off
by default.
.It set_logname
Normally,
.Nm sudo
will set the
.Ev LOGNAME ,
.Ev USER
and
.Ev USERNAME
environment variables to the name of the target user (usually root unless the
.Fl u
option is given).
However, since some programs (including the RCS revision control system) use
.Ev LOGNAME
to determine the real identity of the user, it may be desirable to
change this behavior.
This can be done by negating the set_logname option.
Note that if the
.Em env_reset
option has not been disabled, entries in the
.Em env_keep
list will override the value of
.Em set_logname .
This flag is
.Em on
by default.
.It setenv
Allow the user to disable the
.Em env_reset
option from the command line via the
.Fl E
option.
Additionally, environment variables set via the command line are
not subject to the restrictions imposed by
.Em env_check ,
.Em env_delete ,
or
.Em env_keep .
As such, only trusted users should be allowed to set variables in this manner.
This flag is
.Em off
by default.
.It shell_noargs
If set and
.Nm sudo
is invoked with no arguments it acts as if the
.Fl s
option had been given.
That is, it runs a shell as root (the shell is determined by the
.Ev SHELL
environment variable if it is set, falling back on the shell listed
in the invoking user's /etc/passwd entry if not).
This flag is
.Em off
by default.
.It stay_setuid
Normally, when
.Nm sudo
executes a command the real and effective UIDs are set to the target
user (root by default).
This option changes that behavior such that the real UID is left
as the invoking user's UID.
In other words, this makes
.Nm sudo
act as a setuid wrapper.
This can be useful on systems that disable some potentially
dangerous functionality when a program is run setuid.
This option is only effective on systems that support either the
.Xr setreuid 2
or
.Xr setresuid 2
system call.
This flag is
.Em off
by default.
.It targetpw
If set,
.Nm sudo
will prompt for the password of the user specified
by the
.Fl u
option (defaults to
.Li root )
instead of the password of the invoking user.
In addition, the time stamp file name will include the target user's name.
Note that this flag precludes the use of a uid not listed in the passwd
database as an argument to the
.Fl u
option.
This flag is
.Em off
by default.
.It tty_tickets
If set, users must authenticate on a per-tty basis.
With this flag enabled,
.Nm sudo
will use a file named for the tty the user is
logged in on in the user's time stamp directory.
If disabled, the time stamp of the directory is used instead.
This flag is
.Em @tty_tickets@
by default.
.It umask_override
If set,
.Nm sudo
will set the umask as specified by
.Em sudoers
without modification.
This makes it possible to specify a more permissive umask in
.Em sudoers
than the user's own umask and matches historical behavior.
If
.Em umask_override
is not set,
.Nm sudo
will set the umask to be the union of the user's umask and what is specified in
.Em sudoers .
This flag is
.Em @umask_override@
by default.
.It use_loginclass
If set,
.Nm sudo
will apply the defaults specified for the target user's login class
if one exists.
Only available if
.Nm sudo
is configured with the
.Li --with-logincap
option.
This flag is
.Em off
by default.
.It use_pty
If set,
.Nm sudo
will run the command in a pseudo-pty even if no I/O logging is being gone.
A malicious program run under
.Nm sudo
could conceivably fork a background process that retains to the user's
terminal device after the main program has finished executing.
Use of this option will make that impossible.
This flag is
.Em off
by default.
.It visiblepw
By default,
.Nm sudo
will refuse to run if the user must enter a password but it is not
possible to disable echo on the terminal.
If the
.Em visiblepw
flag is set,
.Nm sudo
will prompt for a password even when it would be visible on the screen.
This makes it possible to run things like
.Dq Li ssh somehost sudo ls
since by default,
.Xr ssh 1
does
not allocate a tty when running a command.
This flag is
.Em off
by default.
.El
.Pp
.Sy Integers :
.Bl -tag -width 16n
.It closefrom
Before it executes a command,
.Nm sudo
will close all open file descriptors other than standard input,
standard output and standard error (ie: file descriptors 0-2).
The
.Em closefrom
option can be used to specify a different file descriptor at which
to start closing.
The default is
.Li 3 .
.It passwd_tries
The number of tries a user gets to enter his/her password before
.Nm sudo
logs the failure and exits.
The default is
.Li @passwd_tries@ .
.El
.Pp
.Sy Integers that can be used in a boolean context :
.Bl -tag -width 16n
.It loglinelen
Number of characters per line for the file log.
This value is used to decide when to wrap lines for nicer log files.
This has no effect on the syslog log file, only the file log.
The default is
.Li @loglen@
(use 0 or negate the option to disable word wrap).
.It passwd_timeout
Number of minutes before the
.Nm sudo
password prompt times out, or
.Li 0
for no timeout.
The timeout may include a fractional component
if minute granularity is insufficient, for example
.Li 2.5 .
The
default is
.Li @password_timeout@ .
.It timestamp_timeout
Number of minutes that can elapse before
.Nm sudo
will ask for a passwd again.
The timeout may include a fractional component if
minute granularity is insufficient, for example
.Li 2.5 .
The default is
.Li @timeout@ .
Set this to
.Li 0
to always prompt for a password.
If set to a value less than
.Li 0
the user's time stamp will never expire.
This can be used to allow users to create or delete their own time stamps via
.Dq Li sudo -v
and
.Dq Li sudo -k
respectively.
.It umask
Umask to use when running the command.
Negate this option or set it to 0777 to preserve the user's umask.
The actual umask that is used will be the union of the user's umask
and the value of the
.Em umask
option, which defaults to
.Li @sudo_umask@ .
This guarantees
that
.Nm sudo
never lowers the umask when running a command.
Note: on systems that use PAM, the default PAM configuration may specify
its own umask which will override the value set in
.Em sudoers .
.El
.Pp
.Sy Strings :
.Bl -tag -width 16n
.It badpass_message
Message that is displayed if a user enters an incorrect password.
The default is
.Li @badpass_message@
unless insults are enabled.
.It editor
A colon
.Pq Ql :\&
separated list of editors allowed to be used with
.Nm visudo .
.Nm visudo
will choose the editor that matches the user's
.Ev EDITOR
environment variable if possible, or the first editor in the
list that exists and is executable.
The default is
.Pa @editor@ .
.It mailsub
Subject of the mail sent to the
.Em mailto
user.
The escape
.Li %h
will expand to the host name of the machine.
Default is
.Dq Li @mailsub@ .
.It noexec_file
The
.Em noexec
option specifies the the fully-qualified path to a shared library
containing dummy versions of the
.Fn execv ,
.Fn execve
and
.Fn fexecve
library functions that just return an error.
This is used to implement the
.Em noexec
functionality on systems that support
.Ev LD_PRELOAD
or its equivalent.
Defaults to
.Pa @noexec_file@ .
.It passprompt
The default prompt to use when asking for a password; can be overridden via the
.Fl p
option or the
.Ev SUDO_PROMPT
environment variable.
The following percent
.Pq Ql %
escape sequences are supported:
.Bl -tag -width 4n
.It Li %H
expanded to the local host name including the domain name
(only if the machine's host name is fully qualified or the
.Em fqdn
option is set)
.It Li %h
expanded to the local host name without the domain name
.It Li %p
expanded to the user whose password is being asked for (respects the
.Em rootpw ,
.Em targetpw
and
.Em runaspw
flags in
.Em sudoers )
.It Li \&%U
expanded to the login name of the user the command will
be run as (defaults to root)
.It Li %u
expanded to the invoking user's login name
.It Li %%
two consecutive
.Li %
characters are collapsed into a single
.Li %
character
.El
.Pp
The default value is
.Dq Li @passprompt@ .
.It runas_default
The default user to run commands as if the
.Fl u
option is not specified on the command line.
This defaults to
.Li @runas_default@ .
.It syslog_badpri
Syslog priority to use when user authenticates unsuccessfully.
Defaults to
.Li @badpri@ .
.Pp
The following syslog priorities are supported:
.Sy alert ,
.Sy crit ,
.Sy debug ,
.Sy emerg ,
.Sy err ,
.Sy info ,
.Sy notice ,
and
.Sy warning .
.It syslog_goodpri
Syslog priority to use when user authenticates successfully.
Defaults to
.Li @goodpri@ .
.Pp
See
.Sx syslog_badpri
for the list of supported syslog priorities.
.It sudoers_locale
Locale to use when parsing the sudoers file, logging commands, and
sending email.
Note that changing the locale may affect how sudoers is interpreted.
Defaults to
.Dq Li C .
.It timestampdir
The directory in which
.Nm sudo
stores its time stamp files.
The default is
.Pa @timedir@ .
.It timestampowner
The owner of the time stamp directory and the time stamps stored therein.
The default is
.Li root .
.It askpass
The
.Em askpass
option specifies the fully qualified path to a helper program used
to read the user's password when no terminal is available.
This may be the case when
.Nm sudo
is executed from a graphical (as opposed to text-based) application.
The program specified by
.Em askpass
should display the argument passed to it as the prompt and write
the user's password to the standard output.
The value of
.Em askpass
may be overridden by the
.Ev SUDO_ASKPASS
environment variable.
.It env_file
The
.Em env_file
option specifies the fully qualified path to a file containing variables
to be set in the environment of the program being run.
Entries in this file should either be of the form
.Dq Li VARIABLE=value
or
.Dq Li export VARIABLE=value .
The value may optionally be surrounded by single or double quotes.
Variables in this file are subject to other
.Nm sudo
environment settings such as
.Em env_keep
and
.Em env_check .
.It exempt_group
Users in this group are exempt from password and PATH requirements.
The group name specified should not include a
.Li %
prefix.
This is not set by default.
.It lecture
This option controls when a short lecture will be printed along with
the password prompt.
It has the following possible values:
.Bl -tag -width 6n
.It always
Always lecture the user.
.It never
Never lecture the user.
.It once
Only lecture the user the first time they run
.Nm sudo .
.El
.Pp
If no value is specified, a value of
.Em once
is implied.
Negating the option results in a value of
.Em never
being used.
The default value is
.Em @lecture@ .
.It lecture_file
Path to a file containing an alternate
.Nm sudo
lecture that will be used in place of the standard lecture if the named
file exists.
By default,
.Nm sudo
uses a built-in lecture.
.It listpw
This option controls when a password will be required when a user runs
.Nm sudo
with the
.Fl l
option.
It has the following possible values:
.Bl -tag -width 8n
.It all
All the user's
.Em sudoers
entries for the current host must have
the
.Li NOPASSWD
flag set to avoid entering a password.
.It always
The user must always enter a password to use the
.Fl l
option.
.It any
At least one of the user's
.Em sudoers
entries for the current host
must have the
.Li NOPASSWD
flag set to avoid entering a password.
.It never
The user need never enter a password to use the
.Fl l
option.
.El
.Pp
If no value is specified, a value of
.Em any
is implied.
Negating the option results in a value of
.Em never
being used.
The default value is
.Em any .
.It logfile
Path to the
.Nm sudo
log file (not the syslog log file).
Setting a path turns on logging to a file;
negating this option turns it off.
By default,
.Nm sudo
logs via syslog.
.It mailerflags
Flags to use when invoking mailer. Defaults to
.Fl t .
.It mailerpath
Path to mail program used to send warning mail.
Defaults to the path to sendmail found at configure time.
.It mailfrom
Address to use for the
.Dq from
address when sending warning and error mail.
The address should be enclosed in double quotes
.Pq \&""
to protect against
.Nm sudo
interpreting the
.Li @
sign.
Defaults to the name of the user running
.Nm sudo .
.It mailto
Address to send warning and error mail to.
The address should be enclosed in double quotes
.Pq \&""
to protect against
.Nm sudo
interpreting the
.Li @
sign.
Defaults to
.Li @mailto@ .
.It secure_path
Path used for every command run from
.Nm sudo .
If you don't trust the
people running
.Nm sudo
to have a sane
.Ev PATH
environment variable you may want to use this.
Another use is if you want to have the
.Dq root path
be separate from the
.Dq user path .
Users in the group specified by the
.Em exempt_group
option are not affected by
.Em secure_path .
This option is @secure_path@ by default.
.It syslog
Syslog facility if syslog is being used for logging (negate to
disable syslog logging).
Defaults to
.Li @logfac@ .
.Pp
The following syslog facilities are supported:
.Sy authpriv
(if your
OS supports it),
.Sy auth ,
.Sy daemon ,
.Sy user ,
.Sy local0 ,
.Sy local1 ,
.Sy local2 ,
.Sy local3 ,
.Sy local4 ,
.Sy local5 ,
.Sy local6 ,
and
.Sy local7 .
.It verifypw
This option controls when a password will be required when a user runs
.Nm sudo
with the
.Fl v
option.
It has the following possible values:
.Bl -tag -width 6n
.It all
All the user's
.Em sudoers
entries for the current host must have the
.Li NOPASSWD
flag set to avoid entering a password.
.It always
The user must always enter a password to use the
.Fl v
option.
.It any
At least one of the user's
.Em sudoers
entries for the current host must have the
.Li NOPASSWD
flag set to avoid entering a password.
.It never
The user need never enter a password to use the
.Fl v
option.
.El
.Pp
If no value is specified, a value of
.Em all
is implied.
Negating the option results in a value of
.Em never
being used.
The default value is
.Em all .
.El
.Pp
.Sy Lists that can be used in a boolean context :
.Bl -tag -width 16n
.It env_check
Environment variables to be removed from the user's environment if
the variable's value contains
.Ql %
or
.Ql /
characters.
This can be used to guard against printf-style format vulnerabilities
in poorly-written programs.
The argument may be a double-quoted, space-separated list or a
single value without double-quotes.
The list can be replaced, added to, deleted from, or disabled by using
the
.Li = ,
.Li += ,
.Li -= ,
and
.Li \&!
operators respectively.
Regardless of whether the
.Li env_reset
option is enabled or disabled, variables specified by
.Li env_check
will be preserved in the environment if they pass the aforementioned check.
The default list of environment variables to check is displayed when
.Nm sudo
is run by root with
the
.Fl V
option.
.It env_delete
Environment variables to be removed from the user's environment when the
.Em env_reset
option is not in effect.
The argument may be a double-quoted, space-separated list or a
single value without double-quotes.
The list can be replaced, added to, deleted from, or disabled by using the
.Li = ,
.Li += ,
.Li -= ,
and
.Li \&!
operators respectively.
The default list of environment variables to remove is displayed when
.Nm sudo
is run by root with the
.Fl V
option.
Note that many operating systems will remove potentially dangerous
variables from the environment of any setuid process (such as
.Nm sudo ) .
.It env_keep
Environment variables to be preserved in the user's environment when the
.Em env_reset
option is in effect.
This allows fine-grained control over the environment
.Nm sudo Ns No -spawned
processes will receive.
The argument may be a double-quoted, space-separated list or a
single value without double-quotes.
The list can be replaced, added to, deleted from, or disabled by using the
.Li = ,
.Li += ,
.Li -= ,
and
.Li \&!
operators respectively.
The default list of variables to keep
is displayed when
.Nm sudo
is run by root with the
.Fl V
option.
.El
.Sh FILES
.Bl -tag -width 24n
.It Pa @sysconfdir@/sudoers
List of who can run what
.It Pa /etc/group
Local groups file
.It Pa /etc/netgroup
List of network groups
.El
.Sh EXAMPLES
Below are example
.Em sudoers
entries.
Admittedly, some of these are a bit contrived.
First, we allow a few environment variables to pass and then define our
.Em aliases :
.Bd -literal
# Run X applications through sudo; HOME is used to find the
# .Xauthority file.  Note that other programs use HOME to find
# configuration files and this may lead to privilege escalation!
Defaults env_keep += "DISPLAY HOME"

# User alias specification
User_Alias	FULLTIMERS = millert, mikef, dowdy
User_Alias	PARTTIMERS = bostley, jwfox, crawl
User_Alias	WEBMASTERS = will, wendy, wim

# Runas alias specification
Runas_Alias	OP = root, operator
Runas_Alias	DB = oracle, sybase
Runas_Alias	ADMINGRP = adm, oper

# Host alias specification
Host_Alias	SPARC = bigtime, eclipse, moet, anchor :\e
		SGI = grolsch, dandelion, black :\e
		ALPHA = widget, thalamus, foobar :\e
		HPPA = boa, nag, python
Host_Alias	CUNETS = 128.138.0.0/255.255.0.0
Host_Alias	CSNETS = 128.138.243.0, 128.138.204.0/24, 128.138.242.0
Host_Alias	SERVERS = master, mail, www, ns
Host_Alias	CDROM = orion, perseus, hercules

# Cmnd alias specification
Cmnd_Alias	DUMPS = /usr/bin/mt, /usr/sbin/dump, /usr/sbin/rdump,\e
			/usr/sbin/restore, /usr/sbin/rrestore
Cmnd_Alias	KILL = /usr/bin/kill
Cmnd_Alias	PRINTING = /usr/sbin/lpc, /usr/bin/lprm
Cmnd_Alias	SHUTDOWN = /usr/sbin/shutdown
Cmnd_Alias	HALT = /usr/sbin/halt
Cmnd_Alias	REBOOT = /usr/sbin/reboot
Cmnd_Alias	SHELLS = /usr/bin/sh, /usr/bin/csh, /usr/bin/ksh,\e
			 /usr/local/bin/tcsh, /usr/bin/rsh,\e
			 /usr/local/bin/zsh
Cmnd_Alias	SU = /usr/bin/su
Cmnd_Alias	PAGERS = /usr/bin/more, /usr/bin/pg, /usr/bin/less
.Ed
.Pp
Here we override some of the compiled in default values.
We want
.Nm sudo
to log via
.Xr syslog 3
using the
.Em auth
facility in all cases.
We don't want to subject the full time staff to the
.Nm sudo
lecture, user
.Sy millert
need not give a password, and we don't want to reset the
.Ev LOGNAME ,
.Ev USER
or
.Ev USERNAME
environment variables when running commands as root.
Additionally, on the machines in the
.Em SERVERS
.Li Host_Alias ,
we keep an additional local log file and make sure we log the year
in each log line since the log entries will be kept around for several years.
Lastly, we disable shell escapes for the commands in the PAGERS
.Li Cmnd_Alias
.Po
.Pa /usr/bin/more ,
.Pa /usr/bin/pg
and
.Pa /usr/bin/less
.Pc .
.Bd -literal
# Override built-in defaults
Defaults		syslog=auth
Defaults>root		!set_logname
Defaults:FULLTIMERS	!lecture
Defaults:millert	!authenticate
Defaults@SERVERS	log_year, logfile=/var/log/sudo.log
Defaults!PAGERS		noexec
.Ed
.Pp
The
.Em User specification
is the part that actually determines who may run what.
.Bd -literal
root		ALL = (ALL) ALL
%wheel		ALL = (ALL) ALL
.Ed
.Pp
We let
.Sy root
and any user in group
.Sy wheel
run any command on any host as any user.
.Bd -literal
FULLTIMERS	ALL = NOPASSWD: ALL
.Ed
.Pp
Full time sysadmins
.Po
.Sy millert ,
.Sy mikef ,
and
.Sy dowdy
.Pc
may run any command on any host without authenticating themselves.
.Bd -literal
PARTTIMERS	ALL = ALL
.Ed
.Pp
Part time sysadmins
.Sy bostley ,
.Sy jwfox ,
and
.Sy crawl )
may run any command on any host but they must authenticate themselves
first (since the entry lacks the
.Li NOPASSWD
tag).
.Bd -literal
jack		CSNETS = ALL
.Ed
.Pp
The user
.Sy jack
may run any command on the machines in the
.Em CSNETS
alias (the networks
.Li 128.138.243.0 ,
.Li 128.138.204.0 ,
and
.Li 128.138.242.0 ) .
Of those networks, only
.Li 128.138.204.0
has an explicit netmask (in CIDR notation) indicating it is a class C network.
For the other networks in
.Em CSNETS ,
the local machine's netmask will be used during matching.
.Bd -literal
lisa		CUNETS = ALL
.Ed
.Pp
The user
.Sy lisa
may run any command on any host in the
.Em CUNETS
alias (the class B network
.Li 128.138.0.0 ) .
.Bd -literal
operator	ALL = DUMPS, KILL, SHUTDOWN, HALT, REBOOT, PRINTING,\e
		sudoedit /etc/printcap, /usr/oper/bin/
.Ed
.Pp
The
.Sy operator
user may run commands limited to simple maintenance.
Here, those are commands related to backups, killing processes, the
printing system, shutting down the system, and any commands in the
directory
.Pa /usr/oper/bin/ .
.Bd -literal
joe		ALL = /usr/bin/su operator
.Ed
.Pp
The user
.Sy joe
may only
.Xr su 1
to operator.
.Bd -literal
pete		HPPA = /usr/bin/passwd [A-Za-z]*, !/usr/bin/passwd root

%opers		ALL = (: ADMINGRP) /usr/sbin/
.Ed
.Pp
Users in the
.Sy opers
group may run commands in
.Pa /usr/sbin/
as themselves
with any group in the
.Em ADMINGRP
.Li Runas_Alias
(the
.Sy adm
and
.Sy oper
groups).
.Pp
The user
.Sy pete
is allowed to change anyone's password except for
root on the
.Em HPPA
machines.
Note that this assumes
.Xr passwd 1
does not take multiple user names on the command line.
.Bd -literal
bob		SPARC = (OP) ALL : SGI = (OP) ALL
.Ed
.Pp
The user
.Sy bob
may run anything on the
.Em SPARC
and
.Em SGI
machines as any user listed in the
.Em OP
.Li Runas_Alias
.Po
.Sy root
and
.Sy operator .
.Pc
.Bd -literal
jim		+biglab = ALL
.Ed
.Pp
The user
.Sy jim
may run any command on machines in the
.Em biglab
netgroup.
.Nm sudo
knows that
.Dq biglab
is a netgroup due to the
.Ql +
prefix.
.Bd -literal
+secretaries	ALL = PRINTING, /usr/bin/adduser, /usr/bin/rmuser
.Ed
.Pp
Users in the
.Sy secretaries
netgroup need to help manage the printers as well as add and remove users,
so they are allowed to run those commands on all machines.
.Bd -literal
fred		ALL = (DB) NOPASSWD: ALL
.Ed
.Pp
The user
.Sy fred
can run commands as any user in the
.Em DB
.Li Runas_Alias
.Po
.Sy oracle
or
.Sy sybase
.Pc
without giving a password.
.Bd -literal
john		ALPHA = /usr/bin/su [!-]*, !/usr/bin/su *root*
.Ed
.Pp
On the
.Em ALPHA
machines, user
.Sy john
may su to anyone except root but he is not allowed to specify any options
to the
.Xr su 1
command.
.Bd -literal
jen		ALL, !SERVERS = ALL
.Ed
.Pp
The user
.Sy jen
may run any command on any machine except for those in the
.Em SERVERS
.Li Host_Alias
(master, mail, www and ns).
.Bd -literal
jill		SERVERS = /usr/bin/, !SU, !SHELLS
.Ed
.Pp
For any machine in the
.Em SERVERS
.Li Host_Alias ,
.Sy jill
may run
any commands in the directory
.Pa /usr/bin/
except for those commands
belonging to the
.Em SU
and
.Em SHELLS
.Li Cmnd_Aliases .
.Bd -literal
steve		CSNETS = (operator) /usr/local/op_commands/
.Ed
.Pp
The user
.Sy steve
may run any command in the directory /usr/local/op_commands/
but only as user operator.
.Bd -literal
matt		valkyrie = KILL
.Ed
.Pp
On his personal workstation, valkyrie,
.Sy matt
needs to be able to kill hung processes.
.Bd -literal
WEBMASTERS	www = (www) ALL, (root) /usr/bin/su www
.Ed
.Pp
On the host www, any user in the
.Em WEBMASTERS
.Li User_Alias
(will, wendy, and wim), may run any command as user www (which owns the
web pages) or simply
.Xr su 1
to www.
.Bd -literal
ALL		CDROM = NOPASSWD: /sbin/umount /CDROM,\e
		/sbin/mount -o nosuid\,nodev /dev/cd0a /CDROM
.Ed
.Pp
Any user may mount or unmount a CD-ROM on the machines in the CDROM
.Li Host_Alias
(orion, perseus, hercules) without entering a password.
This is a bit tedious for users to type, so it is a prime candidate
for encapsulating in a shell script.
.Sh SECURITY NOTES
.Ss Limitations of the So !\& Sc operator
It is generally not effective to
.Dq subtract
commands from
.Sy ALL
using the
.Ql !\&
operator.
A user can trivially circumvent this by copying the desired command
to a different name and then executing that.
For example:
.Bd -literal
bill	ALL = ALL, !SU, !SHELLS
.Ed
.Pp
Doesn't really prevent
.Sy bill
from running the commands listed in
.Em SU
or
.Em SHELLS
since he can simply copy those commands to a different name, or use
a shell escape from an editor or other program.
Therefore, these kind of restrictions should be considered
advisory at best (and reinforced by policy).
.Pp
In general, if a user has sudo
.Sy ALL
there is nothing to prevent them from creating their own program that gives
them a root shell (or making their own copy of a shell) regardless of any
.Ql !\&
elements in the user specification.
.Ss Security implications of Em fast_glob
If the
.Em fast_glob
option is in use, it is not possible to reliably negate commands where the
path name includes globbing (aka wildcard) characters.
This is because the C library's
.Xr fnmatch 3
function cannot resolve relative paths.
While this is typically only an inconvenience for rules that grant privileges,
it can result in a security issue for rules that subtract or revoke privileges.
.Pp
For example, given the following
.Em sudoers
entry:
.Bd -literal
john	ALL = /usr/bin/passwd [a-zA-Z0-9]*, /usr/bin/chsh [a-zA-Z0-9]*,\e
              /usr/bin/chfn [a-zA-Z0-9]*, !/usr/bin/* root
.Ed
.Pp
User
.Sy john
can still run
.Li /usr/bin/passwd root
if
.Em fast_glob
is enabled by changing to
.Pa /usr/bin
and running
.Li ./passwd root
instead.
.Ss Preventing Shell Escapes
Once
.Nm sudo
executes a program, that program is free to do whatever
it pleases, including run other programs.
This can be a security issue since it is not uncommon for a program to
allow shell escapes, which lets a user bypass
.Nm sudo Ns No 's
access control and logging.
Common programs that permit shell escapes include shells (obviously),
editors, paginators, mail and terminal programs.
.Pp
There are two basic approaches to this problem:
.Bl -tag -width 8n
.It restrict
Avoid giving users access to commands that allow the user to run
arbitrary commands.
Many editors have a restricted mode where shell
escapes are disabled, though
.Nm sudoedit
is a better solution to
running editors via
.Nm sudo .
Due to the large number of programs that
offer shell escapes, restricting users to the set of programs that
do not is often unworkable.
.It noexec
Many systems that support shared libraries have the ability to
override default library functions by pointing an environment
variable (usually
.Ev LD_PRELOAD )
to an alternate shared library.
On such systems,
.Nm sudo Ns No 's
.Em noexec
functionality can be used to prevent a program run by
.Nm sudo
from executing any other programs.
Note, however, that this applies only to native dynamically-linked
executables.
Statically-linked executables and foreign executables
running under binary emulation are not affected.
.Pp
The
.Em noexec
feature is known to work on SunOS, Solaris, *BSD,
Linux, IRIX, Tru64 UNIX, MacOS X, HP-UX 11.x and AIX 5.3 and above.
It should be supported on most operating systems that support the
.Ev LD_PRELOAD
environment variable.
Check your operating system's manual pages for the dynamic linker
(usually ld.so, ld.so.1, dyld, dld.sl, rld, or loader) to see if
.Ev LD_PRELOAD
is supported.
.Pp
To enable
.Em noexec
for a command, use the
.Li NOEXEC
tag as documented
in the User Specification section above.
Here is that example again:
.Bd -literal
aaron	shanty = NOEXEC: /usr/bin/more, /usr/bin/vi
.Ed
.Pp
This allows user
.Sy aaron
to run
.Pa /usr/bin/more
and
.Pa /usr/bin/vi
with
.Em noexec
enabled.
This will prevent those two commands from
executing other commands (such as a shell).
If you are unsure whether or not your system is capable of supporting
.Em noexec
you can always just try it out and check whether shell escapes work when
.Em noexec
is enabled.
.El
.Pp
Note that restricting shell escapes is not a panacea.
Programs running as root are still capable of many potentially hazardous
operations (such as changing or overwriting files) that could lead
to unintended privilege escalation.
In the specific case of an editor, a safer approach is to give the
user permission to run
.Nm sudoedit .
.Sh SEE ALSO
.Xr ssh 1 ,
.Xr su 1 ,
.Xr fnmatch 3 ,
.Xr glob 3 ,
.Xr mktemp 3 ,
.Xr strftime 3 ,
.Xr sudoers.ldap @mansectform@ ,
.Xr sudo @mansectsu@ ,
.Xr visudo @mansectsu@
.Sh CAVEATS
The
.Em sudoers
file should
.Sy always
be edited by the
.Nm visudo
command which locks the file and does grammatical checking.
It is
imperative that
.Em sudoers
be free of syntax errors since
.Nm sudo
will not run with a syntactically incorrect
.Em sudoers
file.
.Pp
When using netgroups of machines (as opposed to users), if you
store fully qualified host name in the netgroup (as is usually the
case), you either need to have the machine's host name be fully qualified
as returned by the
.Li hostname
command or use the
.Em fqdn
option in
.Em sudoers .
.Sh BUGS
If you feel you have found a bug in
.Nm sudo ,
please submit a bug report at http://www.sudo.ws/sudo/bugs/
.Sh SUPPORT
Limited free support is available via the sudo-users mailing list,
see http://www.sudo.ws/mailman/listinfo/sudo-users to subscribe or
search the archives.
.Sh DISCLAIMER
.Nm sudo
is provided
.Dq AS IS
and any express or implied warranties, including, but not limited
to, the implied warranties of merchantability and fitness for a
particular purpose are disclaimed.
See the LICENSE file distributed with
.Nm sudo
or http://www.sudo.ws/sudo/license.html for complete details.
