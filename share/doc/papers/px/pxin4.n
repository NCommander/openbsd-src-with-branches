.\" Copyright (c) 1979 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)pxin4.n	5.2 (Berkeley) 4/17/91
.\"
.if !\n(xx .so tmac.p
.nr H1 3
.if n .ND
.NH
Conclusions
.PP
It is appropriate to consider,
given the amount of time invested in rewriting the interpreter,
whether the time was well spent, or whether a code-generator
could have been written with an equivalent amount of effort.
The Berkeley Pascal system is being modified to interface
to the code generator of the portable C compiler with
not much more work than was involved in rewritting
.I px .
However this compiler will probably not supercede the interpreter
in an instructional environment as the
necessary loading and assembly processes will slow the
compilation process to a noticeable degree.
This effect will be further exaggerated because
student users spend more time in compilation than in execution.
Measurements over the course of a quarter at Berkeley with a mixture
of students from beginning programming to upper division compiler
construction show that the amount of time in compilation exceeds the amount
of time spent in the interpreter, the ratio being approximately 60/40.
.PP
A more promising approach might have been a throw-away code generator
such as was done for the
.SM
WATFIV
.NL
system.
However the addition of high-quality post-mortem and interactive
debugging facilities become much more difficult to provide than
in the interpreter environment.
