.\"	$OpenBSD: an.4,v 1.30 2006/01/09 21:19:48 jsg Exp $
.\"
.\" Copyright (c) 1997, 1998, 1999
.\"	Bill Paul <wpaul@ee.columbia.edu>. All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by Bill Paul.
.\" 4. Neither the name of the author nor the names of any co-contributors
.\"    may be used to endorse or promote products derived from this software
.\"   without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY Bill Paul AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL Bill Paul OR THE VOICES IN HIS HEAD
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
.\" THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" $FreeBSD: src/share/man/man4/an.4,v 1.5 2000/03/02 14:53:45 sheldonh Exp $
.\"
.Dd September 10, 1999
.Dt AN 4
.Os
.Sh NAME
.Nm an
.Nd Aironet Communications 4500/4800 IEEE 802.11FH/b wireless network driver
.Sh SYNOPSIS
.Cd "an* at pcmcia?"
.Cd "an* at pci?"
.Cd "an* at isapnp?"
.Sh DESCRIPTION
The
.Nm
driver provides support for the Aironet Communications 4500, 4800
(aka Cisco 340), and Cisco 350
IEEE 802.11 wireless network adapters.
This includes the ISA, PCI, and PCMCIA varieties.
The 4500 series adapters operate at 1 and 2Mbps (FH) while
the 4800 and 350 series can operate at 1, 2, 5.5, and 11Mbps (DS).
The ISA, PCI,
and PCMCIA devices are all based on the same core PCMCIA modules
and all have the same programming interface.
However, unlike the
Lucent WaveLAN/IEEE cards, the ISA and PCI cards appear to the
host as normal ISA and PCI devices and do not require any PCMCIA
support.
.Pp
ISA cards can either be configured to use ISA Plug and Play
or to use a particular I/O address and IRQ
by properly setting the DIP switches on the board.
(The default switch setting is for plug and play.)
The
.Nm
driver has Plug and Play support and will work in either configuration,
however when using a hard-wired I/O address and IRQ, the driver
configuration and the NIC's switch settings must agree.
PCI cards
require no switch settings of any kind and will be automatically
probed and attached.
.Pp
All host/device interaction with the Aironet cards is via programmed I/O.
The
.Nm
driver encapsulates all IP and ARP traffic as 802.11 frames, though
it can receive either 802.11 or 802.3 frames.
.Pp
These are the modes the
.Nm
driver can operate in:
.Bl -tag -width "IBSS-masterXX"
.It BSS mode
Also known as
.Em infrastructure
mode, this is used when associating with an access point, through
which all traffic passes.
This mode is the default.
.It IBSS mode
Also known as
.Em IEEE ad-hoc
mode or
.Em peer-to-peer
mode.
This is the standardized method of operating without an access point.
Stations associate with a service set.
However, actual connections between stations are peer-to-peer.
.It monitor mode
In this mode the driver is able to receive packets without
associating with an access point.
This disables the internal receive filter and enables the card to
capture packets from networks which it wouldn't normally have access to,
or to scan for access points.
.El
.Pp
.Nm
supports hardware WEP.
Wired Equivalent Privacy (WEP) is the de facto encryption standard
for wireless networks.
It can be typically configured in one of three modes:
no encryption; 40-bit encryption; or 104-bit encryption.
Unfortunately, due to serious weaknesses in WEP protocol
it is strongly recommended that it not be used as the
sole mechanism to secure wireless communication.
WEP is not enabled by default.
.Sh CONFIGURATION
The
.Nm
driver can be configured at runtime with
.Xr ifconfig 8
or on boot with
.Xr hostname.if 5
using the following parameters:
.Bl -tag -width Ds
.It Cm bssid Ar bssid
Set the desired BSSID.
.It Fl bssid
Unset the desired BSSID.
The interface will automatically select a BSSID in this mode, which is
the default.
.It Cm chan Ar n
Set the channel (radio frequency) to be used by the driver based on
the given channel ID
.Ar n .
.It Fl chan
Unset the desired channel to be used by the driver.
The driver will automatically select a channel in this mode, which is
the default.
.It Cm media Ar media
The
.Nm
driver supports the following
.Ar media
types:
.Pp
.Bl -tag -width autoselect -compact
.It Cm autoselect
Enable autoselection of the media type and options.
.It Cm DS1
Set 802.11b DS 1Mbps operation.
.It Cm DS2
Set 802.11b DS 2Mbps operation.
.It Cm DS5
Set 802.11b DS 5.5Mbps operation.
.It Cm DS11
Set 802.11b DS 11Mbps operation.
.El
.It Cm mediaopt Ar opts
The
.Nm
driver supports the following media options:
.Pp
.Bl -tag -width monitor -compact
.It Cm ibss
Select IBSS operation.
.It Cm monitor
Select monitor mode.
.El
.It Fl mediaopt Ar opts
Disable the specified media options on the driver and return it to the
default mode of operation (BSS).
.It Cm nwid Ar id
Set the network ID.
The
.Ar id
can either be any text string up to 32 characters in length,
or a series of hexadecimal digits up to 64 digits.
An empty
.Ar id
string allows the interface to connect to any available access points.
By default the
.Nm
driver uses an empty string.
Note that network ID is synonymous with Extended Service Set ID (ESSID).
.It Cm nwkey Ar key
Enable WEP encryption using the specified
.Ar key .
The
.Ar key
can either be a string, a series of hexadecimal digits (preceded by
.Sq 0x ) ,
or a set of keys of the form
.Dq n:k1,k2,k3,k4 ,
where
.Sq n
specifies which of the keys will be used for transmitted packets,
and the four keys,
.Dq k1
through
.Dq k4 ,
are configured as WEP keys.
If a set of keys is specified, a comma
.Pq Sq \&,
within the key must be escaped with a backslash.
Note that if multiple keys are used, their order must be the same within
the network.
.Nm
is capable of using both 40-bit (5 characters or 10 hexadecimal digits)
or 104-bit (13 characters or 26 hexadecimal digits) keys.
.It Fl nwkey
Disable WEP encryption.
This is the default mode of operation.
.It Cm nwkey persist
Enable WEP encryption with the persistent key stored in the network card.
.El
.Sh EXAMPLES
The following
.Xr hostname.if 5
example configures an0 to join whatever network is available on boot,
using WEP key
.Dq 0x1deadbeef1 ,
channel 11, obtaining an IP address using DHCP:
.Bd -literal -offset indent
dhcp NONE NONE NONE nwkey 0x1deadbeef1 chan 11
.Ed
.Pp
Configure an0 for WEP, using hex key
.Dq 0x1deadbeef1 :
.Bd -literal -offset indent
# ifconfig an0 nwkey 0x1deadbeef1
.Ed
.Pp
Return an0 to its default settings:
.Bd -literal -offset indent
# ifconfig an0 -bssid -chan media autoselect \e
	nwid "" -nwkey
.Ed
.Pp
Join an existing BSS network,
.Dq my_net :
.Bd -literal -offset indent
# ifconfig an0 192.168.1.1 netmask 0xffffff00 nwid my_net
.Ed
.Sh DIAGNOSTICS
.Bl -diag
.It "an%d: failed to allocate %d bytes on NIC"
The driver was unable to allocate memory for transmit frames in the
NIC's on-board RAM.
.It "an%d: device timeout"
The Aironet card failed to generate an interrupt to acknowledge a transmit
command.
.El
.Sh SEE ALSO
.Xr arp 4 ,
.Xr ifmedia 4 ,
.Xr intro 4 ,
.Xr isapnp 4 ,
.Xr netintro 4 ,
.Xr pci 4 ,
.Xr pcmcia 4 ,
.Xr hostname.if 5 ,
.Xr ifconfig 8
.Sh HISTORY
The
.Nm
device driver first appeared in
.Fx 4.0 .
.Ox
support was added in
.Ox 2.7 .
A version of the driver based on the one in
.Nx
was added in
.Ox 3.9 .
.Sh AUTHORS
.An -nosplit
The
.Nm
driver was written by
.An Bill Paul Aq wpaul@ee.columbia.edu
and ported to
.Ox
by
.An Michael Shalayeff Aq mickey@openbsd.org .
Later the
.Nx
version of the driver by
.An Atsushi Onoe
was subsequently ported to
.Ox
by
.An Jonathan Gray Aq jsg@openbsd.org .
.Sh CAVEATS
Scanning for access points is not currently supported.
