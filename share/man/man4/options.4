.\"	$OpenBSD: options.4,v 1.81 2001/08/12 19:35:36 heko Exp $
.\"	$NetBSD: options.4,v 1.21 1997/06/25 03:13:00 thorpej Exp $
.\"
.\" Copyright (c) 1998 Theo de Raadt
.\" Copyright (c) 1998 Todd Miller
.\" Copyright (c) 1998 Gene Skonicki
.\" Copyright (c) 1996
.\" 	Perry E. Metzger.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgment:
.\"	This product includes software developed for the NetBSD Project
.\"	by Perry E. Metzger.
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\"
.Dd August 17, 1997
.Dt OPTIONS 4
.Os
.Sh NAME
.Nm options
.Nd miscellaneous kernel configuration options
.Sh SYNOPSIS
.Cd option ...
.Sh DESCRIPTION
This manual page describes a number of miscellaneous kernel
configuration options that may be specified in a kernel config file.
See
.Xr config 8
for information on how to configure and build kernels.
.Em Note:
options are passed to the compile process as
.Fl D
flags to the C compiler.
.Ss Compatibility Options
.Bl -ohang
.It Cd option COMPAT_23
Enables compatibility with
.Ox 2.3 .
This makes it possible to run binaries that use old versions of the
.Xr msgctl 2 ,
.Xr shmctl 2
and
.Xr __semctl
system calls which changed semantics in
.Ox 2.4 .
.It Cd option COMPAT_25
Enables compatibility with
.Ox 2.5 .
This makes it possible to run binaries that use old versions of the
.Xr statfs 2 ,
.Xr fstatfs 2
and
.Xr getfsstat 2
system calls which were replaced in
.Ox 2.6
when
.Li struct stat
was expanded.
.It Cd option COMPAT_SVR4
On those architectures that support it, this enables binary
compatibility with
.At V.4
binaries built for the same architecture.
This currently includes the sparc and i386.
Possibly the most widely known operating system
based on this binary architecture is Sun's Solaris 2.x.
See
.Xr compat_svr4 8 .
.It Cd option COMPAT_BSDOS
On those architectures that support it, this enables binary
compatibility with
.Em BSD/OS
applications.
This option is supported on the i386 architecture.
See
.Xr compat_bsdos 8 .
Requires
.Cm option COMPAT_43
also be used for proper operation.
.It Cd option COMPAT_LINUX
On those architectures that support it, this enables binary
compatibility with
.Em Linux
ELF and a.out
applications built for the same architecture.
This option is supported on the i386 architecture.
See
.Xr compat_linux 8 .
.It Cd option COMPAT_SUNOS
On those architectures that support it, this enables binary
compatibility with
.Em SunOS 4.x
applications built for the same architecture.
This option is supported on the sparc and most m68k platforms.
See
.Xr compat_sunos 8 .
.It Cd option COMPAT_ULTRIX
On those architectures that support it, this enables binary
compatibility with
.Tn Ultrix
applications built for the same architecture.
This option is available on the little-endian MIPS platforms like the
pmax and arc.
See
.Xr compat_ultrix 8 .
.It Cd option COMPAT_FREEBSD
On those architectures that support it, this enables binary
compatibility with
.Em FreeBSD
applications built for the same architecture.
This option is available on the i386 architecture.
See
.Xr compat_freebsd 8 .
.It Cd option COMPAT_HPUX
On those architectures that support it, this enables binary
compatibility with
.Em HP/UX
applications built for the same architecture.
This option is available on some m68k architectures.
See
.Xr compat_hpux 8 .
.It Cd option COMPAT_IBCS2
On those architectures that support it, this enables binary
compatibility with
.Em iBCS2
applications built for the same architecture.
This option is available on the i386 architecture.
See
.Xr compat_ibcs2 8 .
.It Cd option COMPAT_NETBSD
On those architectures that support it, this enables binary
compatibility with
.Em NetBSD
applications built for the same architecture.
See
.Xr compat_freebsd 8 .
.It Cd option COMPAT_OSF1
On those architectures that support it, this enables binary
compatibility with
.Em Digital UNIX
(formerly
.Em OSF/1 )
applications built for the same architecture.
This option is available on the alpha architecture.
See
.Xr compat_osf1 8 .
.It Cd option COMPAT_NOMID
Enables compatibility with a.out executables that lack a machine ID.
On the i386, this includes
.Nx
0.8's ZMAGIC format, 386BSD and BSDI's
QMAGIC, NMAGIC, and OMAGIC a.out formats.
On the hp300 and other m68k architectures this permits certain old
.Bx 4.3
binaries to work, though its use is discouraged now.
.It Cd option COMPAT_43
Use of this option is discouraged.
It enables compatibility with
.Bx 4.3 .
It adds an old syscall for
.Fn lseek
as well as ioctls for
.Dv TIOCGETP
and
.Dv TIOCSETP .
The return values for the
.Xr getpid 2 ,
.Xr getgid 2 ,
and
.Xr getuid 2
system calls are modified as well, to return the parent's PID and UID as well
as the current process's.
It also enables the deprecated
.Dv NTTYDISC
terminal line discipline.
It provides backwards compatibility with the
.Dq old
SIOC[GS]IF{ADDR,DSTADDR,BRDADDR,NETMASK} interface ioctls, including
binary compatibility for code written before the introduction of the
.Li sa_len
field in sockaddrs.
It also enables support for some older pre BSD 4.4 socket calls.
.El
.Ss Debugging Options
.Bl -ohang
.It Cd option DDB
Compiles in a kernel debugger for diagnosing kernel problems.
See
.Xr ddb 4
for details.
.Em Note:
not available on all architectures.
.It Cd option DDB_SAFE_CONSOLE
Allows a break into the kernel debugger during boot.
Useful when debugging problems that can cause init(8) to fail.
.It Cd option KGDB
Compiles in a remote kernel debugger stub for diagnosing kernel problems
using the
.Dq remote target
feature of gdb.
See
.Xr kgdb 7
for details.
.Em Note:
not available on all architectures.
.It Cd makeoptions DEBUG="-g"
The
.Fl g
flag causes
.Pa bsd.gdb
to be built in addition to
.Pa bsd .
.Pa bsd.gdb
is useful for debugging kernels and their crashdumps with gdb.
Note that
.Xr gdb Ns 's
.Fl k
flag
is obsolete and should not be used.
Instead, a crashdump can be debugged by starting
.Xr gdb
with the kernel name as an argument (no core file) and then use the
.Xr gdb
command
.Dq target kcore COREFILE .
.It Cd option DEBUG
Turns on miscellaneous kernel debugging.
Since options are turned into preprocessor defines (see above),
.Cm option DEBUG
is equivalent to doing a
.Em #define DEBUG
throughout the kernel.
Much of the kernel has
.Em #ifdef DEBUG
conditional debugging code.
Note that many parts of the kernel (typically device drivers) include their own
.Em #ifdef XXX_DEBUG
conditionals instead.
This option also turns on certain other options, notably
.Cm option KMEMSTATS ,
which may decrease system performance.
.It Cd option DIAGNOSTIC
Adds code to the kernel that does internal consistency checks.
This code will cause the kernel to panic if corruption of internal data
structures is detected.
.It Cd option SMALL_KERNEL
Removes some optimizations from the kernel to reduce the size of the
resulting kernel binary.
This option can decrease system performance.
.It Cd option GPROF
Adds code to the kernel for kernel profiling with
.Xr kgmon 8 .
.It Cd makeoptions PROF="-pg"
The
.Fl pg
flag causes the kernel to be compiled with support for profiling.
The
.Cm option GPROF
is required for the kernel compile to succeed.
.It Cd option KTRACE
Adds hooks for the system call tracing facility, which allows users to
watch the system call invocation behavior of processes.
See
.Xr ktrace 1
for details.
.El
.Ss File Systems
.Bl -ohang
.It Cd option FFS
Includes code implementing the Berkeley Fast File System
.Em ( FFS ) .
Most machines need this if they are not running diskless.
.It Cd option ADOSFS
Includes code implementing the AmigaDOS Fast File System
.Em ( ADOSFS ) .
Note that the Professional and Smart File Systems are 
.Em not
supported. See
.Xr mount_ados 8
for details.
.It Cd option EXT2FS
Includes code implementing the Second Extended File System
.Em ( EXT2FS ) .
This is the most commonly used file system on the Linux operating system,
and is provided here for compatibility.
Some specific features of
.Em EXT2FS
like the "behavior on errors" are not implemented.
This file system
can't be used with
.Li uid_t
or
.Li gid_t
values greater than 65535.
Also, the filesystem will not function correctly on architectures with
differing byte-orders.
That is, a big-endian machine will not be able to read an
ext2fs filesystem created on an i386 or other little-endian machine.
See
.Xr mount_ext2fs 8
for details.
.It Cd option MFS
Include the memory file system
.Em ( MFS ) .
This file system stores files in swappable memory, and produces
notable performance improvements when it is used as the file store
for
.Pa /tmp
or similar mount points.
See
.Xr mount_mfs 8
for details.
.It Cd option NFSCLIENT
Include the client side of the
.Em NFS
(Network File System) remote file sharing protocol.
Although the bulk of the code implementing
.Em NFS
is kernel based, several user level daemons are needed for it to work.
See
.Xr mount_nfs 8
for details on NFS.
.It Cd option CD9660
Includes code for the ISO 9660 + Rock Ridge file system, which is the
standard file system used on many CD-ROMs.
It also supports Joliet extensions.
See
.Xr mount_cd9660 8
for details.
.It Cd option MSDOSFS
Includes support for the
.Tn MS-DOS
FAT file system.
The kernel also implements the
.Tn Windows 95
extensions which permit the use of longer, mixed-case file names.
See
.Xr mount_msdos 8
and
.Xr fsck_msdos 8
for details.
.It Cd option FDESC
Includes code for a file system which can be mounted on
.Pa /dev/fd .
This filesystem permits access to the per-process file descriptor
space via special files in the file system.
See
.Xr mount_fdesc 8
for details.
Note that this facility is redundant, and thus unneeded on most
.Ox
systems, since the
.Xr fd 4
pseudodevice driver already provides identical functionality.
On most systems, instances of
.Xr fd 4
are mknoded under
.Pa /dev/fd/
and on
.Pa /dev/stdin ,
.Pa /dev/stdout ,
and
.Pa /dev/stderr .
.It Cd option KERNFS
Includes code which permits the mounting of a special file system
(normally mounted on
.Pa /kern )
in which files representing various kernel variables and parameters
may be found.
See
.Xr mount_kernfs 8
for details.
.It Cd option NULLFS
Includes code for a loopback file system.
This permits portions of the file hierarchy to be re-mounted in other places.
The code really exists to provide an example of a stackable file system layer.
See
.Xr mount_null 8
for details.
.It Cd option PORTAL
Includes the (experimental) portal filesystem.
This permits interesting tricks like opening TCP sockets by opening files in
the file system.
The portal file system is conventionally mounted on
.Pa /p
and is partially implemented by a special daemon.
See
.Xr mount_portal 8
for details.
.It Cd option PROCFS
Includes code for a special file system (conventionally mounted on
.Pa /proc )
in which the process space becomes visible in the file system.
Among other things, the memory spaces of processes running on the system are
visible as files, and signals may be sent to processes by writing to
.Pa ctl
files in the procfs namespace.
See
.Xr mount_procfs 8
for details.
.It Cd option UMAPFS
Includes a loopback file system in which user and group IDs may be
remapped -- this can be useful when mounting alien file systems with
different uids and gids than the local system (eg, remote NFS).
See
.Xr mount_umap 8
for details.
.It Cd option UNION
Includes code for the union file system, which permits directories to
be mounted on top of each other in such a way that both file systems
remain visible -- this permits tricks like allowing writing (and the
deleting of files) on a read-only file system like a CD-ROM by
mounting a local writable file system on top of the read-only file
system.
This filesystem is still experimental and is known to be somewhat unstable.
See
.Xr mount_union 8
for details.
.El
.Ss File System Options
.Bl -ohang
.It Cd option FFS_SOFTUPDATES
Enables a scheme that uses partial ordering of buffer cache operations
to allow metadata updates in FFS to happen asynchronously, increasing write
performance significantly.
Normally, the FFS filesystem writes metadata updates synchronously which exacts
a performance penalty in favor of filesystem integrity.
With soft updates, you gain the performance of asynchronous writes while
retaining the safety of synchronous metadata updates.
.Pp
Soft updates must be enabled on a per-filesystem basis.
See
.Xr mount 8
for details.
.Pp
Processors with a small kernel address space, such as the sun4 and sun4c, do
not have enough kernel memory to support soft updates.
Attempts to use this option with these CPUs will cause a kernel hang or panic
after a short period of use as the kernel will quickly run out of memory.
This is not related to the amount of physical memory present in the machine --
it is a limitation of the CPU architecture itself.
.It Cd option BUFCACHEPERCENT=integer
Percentage of RAM to use as a file system buffer.
It defaults to 5.
.It Cd option NFSSERVER
Include the server side of the
.Em NFS
(Network File System) remote file sharing protocol.
Although the bulk of the code implementing
.Em NFS
is kernel based, several user level daemons are needed for it to
work.
See
.Xr mountd 8
and
.Xr nfsd 8
for details.
.It Cd option QUOTA
Enables kernel support for file system quotas.
See
.Xr quotaon 8 ,
.Xr edquota 8 ,
.Xr repquota 8 ,
and
.Xr quota 1
for details.
Note that quotas only work on
.Dq ffs
file systems, although
.Xr rpc.rquotad 8
permits them to be accessed over
.Em NFS .
.It Cd option FIFO
Adds support for
.At V
style FIFOs (i.e.,
.Dq named pipes ) .
This option is recommended in almost all cases as many programs use these.
.It Cd option EXT2FS_SYSTEM_FLAGS
This option changes the behavior of the APPEND and IMMUTABLE flags
for a file on an
.Em EXT2FS
filesystem.
Without this option, the superuser or owner of the file can set and clear them.
With this option, only the superuser can set them, and they can't be cleared
if the securelevel is greater than 0.
See also
.Xr chflags 1 .
.El
.Ss Miscellaneous Options
.Bl -ohang
.It Cd option PCIVERBOSE
Makes the boot process more verbose for PCI peripherals
(vendor names and other information is printed, etc.).
.It Cd option EISAVERBOSE
Makes the boot process more verbose for EISA peripherals.
.It Cd option PCMCIAVERBOSE
Makes the boot process more verbose for PCMCIA peripherals.
.It Cd option MACOBIOVERBOSE
Makes the boot process more verbose for Mac OBIO peripherals.
.It Cd option APERTURE
Provide in-kernel support for VGA framebuffer mapping by user-processes
(such as an X windows server).
This option is supported in the i386 architecture.
.It Cd option XSERVER
Support for X windows in the console driver.
.It Cd option LKM
Enables support for loadable kernel modules.
See
.Xr lkm 4
for details.
.Em Note:
This option is not yet available on all architectures.
.It Cd option CRYPTO
Enables support for the kernel cryptographic framework.
See
.Xr crypto 9
for details.
While not IP specific, this option is usually used in conjunction with option
.Em IPSEC .
.It Cd option INSECURE
Hardwires the kernel security level at \-1.
This means that the system always runs in securelevel 0 mode, even when
running multiuser.
See
.Xr init 8
for details on the implications of this.
The kernel secure level may be manipulated by the superuser by altering the
.Em kern.securelevel
sysctl variable.
(It should be noted that the securelevel may only be lowered by a call from
process ID 1, i.e.,
.Xr init 8 . )
See also
.Xr sysctl 8
and
.Xr sysctl 3 .
.It Cd option CCDNBUF=integer
The
.Xr ccd 4
device driver uses
.Dq component buffers
to distribute I/O requests to the components of a concatenated disk.
It keeps a freelist of buffer
headers in order to reduce use of the kernel memory allocator.
.Em CCDNBUF
is the number of buffer headers allocated on the freelist for
each component buffer.
It defaults to 8.
.It Cd option KMEMSTATS
The kernel memory allocator,
.Xr malloc 9 ,
will keep statistics on its performance if this option is enabled.
Unfortunately, this option therefore essentially disables
.Fn MALLOC
and
.Fn FREE
forms of the memory allocator, which are used to enhance the
performance of certain critical sections of code in the kernel.
This option therefore can lead to a significant decrease in the performance
of certain code in the kernel if enabled.
Examples of such code include the
.Fn namei
routine, the
.Xr ccd 4
driver,
the
.Xr ncr 4
driver, and much of the networking code.
Note that this option is silently turned on by the
.Em DEBUG
option.
.It Cd option BOOT_CONFIG
Adds support for the
.Fl c
boot option (User Kernel Config).
Allows modification of kernel settings (i.e., device parameters) before
booting the system.
.It Cd option UVM_SWAP_ENCRYPT
Enables kernel support for encrypting pages that are written out to
swap storage.
Swap encryption prevents sensitive data from remaining
on the disk even after the operating system has been shut down.
This option should be turned on if cryptographic filesystems are used.
The sysctl variable
.Em vm.swapencrypt.enable
controls its behaviour.
See
.Xr sysctl 8
and
.Xr sysctl 3
for details.
.It Cd option USER_PCICONF
Enables the user level acces to the PCI bus configuration space
through ioctls on the
.Pa /dev/pci
device.
It's used by the
.Xr XFree86 1
server on some architectures.
See
.Xr pci 4
for details.
.El
.Ss Networking Options
.Bl -ohang
.It Cd option GATEWAY
Enables
.Em IPFORWARDING
and (on most ports) increases the size of
.Em NMBCLUSTERS .
In general,
.Em GATEWAY
is used to indicate that a system should act as a router, and
.Em IPFORWARDING
is not invoked directly.
(Note that
.Em GATEWAY
has no impact on protocols other than IP, such as CLNP or XNS.)
.It Cd option IPFORWARDING
Enables IP routing behavior.
With this option enabled, the machine
will forward IP datagrams between its interfaces that are destined for
other machines.
Note that even without this option, the kernel will
still forward some packets (such as source routed packets) -- removing
.Em GATEWAY
and
.Em IPFORWARDING
is insufficient to stop all routing through a bastion host on a
firewall -- source routing is controlled independently.
Note that IP
forwarding may be turned on and off independently of the setting of the
.Em IPFORWARDING
option through the use of the
.Em net.inet.ip.forwarding
sysctl variable.
If
.Em net.inet.ip.forwarding
is 1, IP forwarding is on.
See
.Xr sysctl 8
and
.Xr sysctl 3
for details.
.It Cd option MROUTING
Includes support for IP multicast routers.
.Em INET
should be set along with this.
Multicast routing is controlled by the
.Xr mrouted 8
daemon.
.It Cd option INET
Includes support for the TCP/IP protocol stack.
This option is currently required.
See
.Xr inet 4
for details.
.It Cd options INET6
Includes support for the
.Tn IPv6
protocol stack.
See
.Xr inet6 4
for details.
Unlike
.Em INET ,
.Em INET6
enables multicast routing code as well.
This option requires
.Em INET
at this moment, but it should not.
.It Cd options ND6_DEBUG
The option sets the default value of net.inet6.icmp6.nd6_debug to 1,
for debugging IPv6 neighbor discovery protocol handling.
See
.Xr sysctl 3
for details.
.It Cd option NS
Include support for the Xerox XNS protocol stack.
See
.Xr ns 4
for details.
.It Cd option ISO,TPIP
Include support for the ubiquitous OSI protocol stack.
See
.Xr iso 4
for details.
.It Cd option EON
Include support for OSI tunneling over IP.
.It Cd option CCITT,LLC,HDLC
Include support for the X.25 protocol stack.
The state of this code is currently unknown.
It probably contains bugs.
.It Cd option IPX, IPXIP
Include support for Internetwork Packet Exchange protocol commonly in
use by
.Tn Novell NetWare .
.It Cd option NETATALK
Include kernel support for the AppleTalk family of protocols.
This suite of supporting code is sometimes called
.Em netatalk
support.
.It Cd option TCP_COMPAT_42
Use of this option is
.Em extremely
discouraged, so it should not be enabled.
If any other machines on the network require enabling this, it's
recommended that
.Em they
be disconnected from the network.
.Pp
TCP bug compatibility with
.Bx 4.2 .
In
.Bx 4.2 ,
TCP sequence numbers
were 32-bit signed values.
Modern implementations of TCP use unsigned values.
This option clamps the initial sequence number to start in
the range 2^31 rather than the full unsigned range of 2^32.
Also, under
.Bx 4.2 ,
keepalive packets must contain at least one byte or else
the remote end will not respond.
.It Cd option TCP_SACK
Turns on selective acknowledgements.
Additional information about
segments already received can be transmitted back to the sender,
thus indicating segments that have been lost and allowing for
a swifter recovery.
Both communication endpoints need to support
.Em SACK .
The fallback behaviour is NewReno fast recovery phase, which allows
one lost segment to be recovered per round trip time.
When more then one segment has been dropped per window, the transmission can
continue without waiting for a retransmission timeout.
.It Cd option TCP_FACK
Turns on forward acknowledgements allowing a more precise estimate of
outstanding data during the fast recovery phase by using
.Em SACK
information.
This option can only be used together with
.Em TCP_SACK .
.It Cd option TCP_SIGNATURE
Turns on support for the TCP MD5 Signature option (RFC 2385).
This is used by
Internet backbone routers to provide per-packet authentication for the TCP
packets used to communicate BGP routing information.
You will also need a
routing daemon that supports this option in order to actually use it.
.It Cd option PPP_FILTER
This option turns on
.Xr pcap 3
based filtering for ppp connections.
This option is used by
.Xr pppd 8
which needs to be compiled with
.Em PPP_FILTER
defined (the current default).
.It Cd option PPP_BSDCOMP
Enables BSD compressor for PPP connections.
.It Cd option PPP_DEFLATE
For use in conjunction with PPP_BSDCOMP; provides an interface to zlib for PPP
for deflate compression/decompression.
.It Cd option IPSEC
This option enables IP security protocol support.
See
.Xr ipsec 4
for more details.
.It Cd option ENCDEBUG
This option enables debugging information to be conditionally logged
in case IPSEC encounters errors.
The option
.Em IPSEC
is required along with this option.
Debug logging can be turned on/off through the use of the
.Em net.inet.ip.encdebug
sysctl variable.
If
.Em net.ipsec.encap.encdebug
is 1, debug logging is on.
See
.Xr sysctl 8
and
.Xr sysctl 3
for details.
.It Cd option KEY
Enables PFKEYv2 (RFC 2367) support.
While not IP specific, this option is usually used in conjunction with option
.Em IPSEC .
.It Cd option ALTQ
Enables ALTQ (Alternate Queueing).  For simple rate-limiting, use
.Xr tbrconfig 8
to set up the interface transmission rate.  To use queueing disciplines,
their options should also be defined.  Queueing disciplines are
managed by
.Xr altqd 8 .
See
.Xr altq 9
for details on ALTQ.
.It Cd option ALTQ_CBQ
Enables ALTQ's CBQ (Class-based Queueing) module.  CBQ achieves both
partitioning and sharing of link bandwidth by hierarchically
structured classes. Each class has its own queue and is assigned its
share of bandwidth.  A child class can borrow bandwidth from its
parent class as long as excess bandwidth is available.
.It Cd option ALTQ_HFSC
Enables ALTQ's HFSC (Hierarchical Fair Service Curve) module.
HFSC supports both link-sharing and guaranteed real-time services.
H-FSC employs a service curve based QoS model, and its unique feature
is an ability to decouple delay and bandwidth allocation.
.It Cd option ALTQ_PRIQ
Enables ALTQ's PRIQ (Priority Queueing) module.
PRIQ implements a simple priority-based queueing.  A higher priority
class is always served first.
.It Cd option ALTQ_WFQ
Enables ALTQ's WFQ (Weighted Fair Queueing) module.
WFQ implements a weighted-round robin scheduler for a set of queues.
A weight can be assigned to each queue to give a different proportion
of the link capacity.  A hash function is used to map a flow to one of
a set of queues.
.It Cd option ALTQ_FIFOQ
Enables ALTQ's FIFO queue module.
FIFOQ is a simple drop-tail FIFO queue.
.It Cd option ALTQ_RED
Enables ALTQ's RED (Random Early Detection) module.
RED is an implicit congestion notification mechanism that exercises
packet dropping or packet marking stochastically according to the
average queue length.  RED can be viewed as an active buffer
management mechanism and can be integrated into other queueing
disciplines.
.It Cd option ALTQ_RIO
Enables ALTQ's RIO (RED with In/Oout) module.
The original RIO has 2 sets of RED parameters; one for in-profile
packets and the other for out-of-profile packets. At the ingress of
the network, profile meters tag packets as IN or OUT based on
contracted profiles for customers.  Inside the network, IN packets
receive preferential treatment by the RIO dropper.
ALTQ/RIO has 3 drop precedence levels defined for the Assured Forwarding
PHB of DiffServ (RFC2597).
.It Cd option ALTQ_BLUE
Enables ALTQ's Blue module.
Blue is another active buffer management mechanism.
.It Cd option ALTQ_FLOWVALVE
Enables ALTQ's Flowvalve module.  Flowvalve is a simple implementation
of a RED penalty box that identifies and punishes misbehaving flows.
.It Cd option ALTQ_CDNR
Enables ALTQ's CDNR (diffserfv traffic conditioner) module.
Traffic conditioners are components to meter, mark, or drop incoming
packets according to some rules.  As opposed to queueing disciplines,
traffic conditioners handle incoming packets at an input interface.
.It Cd option ALTQ_NOPCC
Disables use of processor cycle counter (e.g., Pentium TSC on i386 and
PCC on alpha) to measure time in ALTQ.  This option should be defined
for a non-Pentium i386 CPU which does not have TSC, SMP (per-CPU
counters are not in sync), or power management which affects processor
cycle counter.
.El
.Ss SCSI Subsystem Options
.Bl -ohang
.It Cd option SCSITERSE
Terser SCSI error messages.
This omits the table for decoding ASC/ASCQ info, saving about 8 bytes or so.
.It Cd option SCSIDEBUG
Prints extra debugging info for the SCSI subsystem to the console.
.El
.Ss System V IPC Options
.Bl -ohang
.It Cd option SYSVMSG
Includes support for
.At V
style message queues.
See
.Xr msgctl 2 ,
.Xr msgget 2 ,
.Xr msgrcv 2 ,
.Xr msgsnd 2 .
.It Cd option SYSVSEM
Includes support for
.At V
style semaphores.
See
.Xr semctl 2 ,
.Xr semget 2 ,
.Xr semop 2 .
.It Cd option SYSVSHM
Includes support for
.At V
style shared memory.
See
.Xr shmat 2 ,
.Xr shmctl 2 ,
.Xr shmdt 2 ,
.Xr shmget 2 .
.It Cd option SHMMAXPGS=value
Sets the maximum number of
.At V
style shared memory pages that are available through the
.Xr shmget 2
system call.
Default value is 1024 on most ports.
See
.Pa /usr/include/machine/vmparam.h
for the default.
.It Cd option SEMMNI=value
Number of semaphore identifiers (also called semaphore handles
and semaphore sets) available in the system. Default value is 10.
The kernel allocates memory for the control structures at startup,
so you should avoid arbitrarily large values. 
.It Cd option SEMMNS=value
Maximum number of semaphores in all sets in the system. Default
value is 60.
.It Cd option SEMMNU=value
Maximum number of semaphore undo structures in the system.
Default value is 30. 
.It Cd option SEMUME=value
Maximum number of per-process undo operation entries in the 
system. Semaphore undo operations are invoked by the kernel
when
.Xr semop 2
is called with the SEM_UNDO flag and the process holding
the semaphores terminates unexpectedly. Default value is 10.
.El
.Ss Operation Related Options
.Bl -ohang
.It Cd option NMBCLUSTERS=value
Size of kernel mbuf cluster map,
.Em mb_map ,
in CLBYTES-sized logical pages.
Default on most ports is 256 (512 with
.Dq option GATEWAY ) .
See
.Pa /usr/include/machine/param.h
for exact default information.
Increase this value if
.Dq mclpool limit reached
messages appear.
.It Cd option NKMEMCLUSTERS=value
Size of kernel malloc area in CLBYTES-sized logical pages.
This area is covered by the kernel submap
.Em kmem_map .
See
.Pa /usr/include/machine/param.h
for the default value, which is port specific.
Increase this value if
.Dq out of space in kmem_map
panics happen.
.\" , which mean the system has run out of malloc-able kernel memory.
.It Cd option NBUF=value
.It Cd option BUFPAGES=value
These options set the number of pages available for the buffer cache.
Their default value is a machine dependent value, often calculated as
between 5% and 10% of total available RAM.
.It Cd option NTP
Modify the scheduler code to add hooks necessary for running an NTP
daemon.
.Xr xntpd 8
is available as part of the port collection.
.It Cd option APM_NOPRINT
This option is supported on the i386 architecture.
When enabled kernel messages regarding the status of the automatic power
management system
.Tn ( APM )
are suppressed.
.Tn APM
status can still be obtained using
.Xr apm 8
and/or
.Xr apmd 8 .
.El
.\" The following requests should be uncommented and used where appropriate.
.\" .Sh FILES
.\" .Sh EXAMPLES
.Sh SEE ALSO
.Xr X 1 ,
.Xr gdb 1 ,
.Xr ktrace 1 ,
.Xr quota 1 ,
.Xr gettimeofday 2 ,
.Xr i386_iopl 2 ,
.Xr msgctl 2 ,
.Xr msgget 2 ,
.Xr msgrcv 2 ,
.Xr msgsnd 2 ,
.Xr semctl 2 ,
.Xr semget 2 ,
.Xr semop 2 ,
.Xr shmat 2 ,
.Xr shmctl 2 ,
.Xr shmdt 2 ,
.Xr shmget 2 ,
.Xr sysctl 3 ,
.Xr ddb 4 ,
.Xr inet 4 ,
.Xr ipsec 4 ,
.Xr iso 4 ,
.Xr lkm 4 ,
.Xr ns 4 ,
.Xr pci 4 ,
.Xr xf86 4 ,
.Xr apm 8 ,
.Xr apmd 8 ,
.Xr config 8 ,
.Xr edquota 8 ,
.Xr init 8 ,
.Xr mount_cd9660 8 ,
.Xr mount_fdesc 8 ,
.Xr mount_kernfs 8 ,
.Xr mount_mfs 8 ,
.Xr mount_msdos 8 ,
.Xr mount_nfs 8 ,
.Xr mount_null 8 ,
.Xr mount_portal 8 ,
.Xr mount_procfs 8 ,
.Xr mount_umap 8 ,
.Xr mount_union 8 ,
.Xr mrouted 8 ,
.Xr quotaon 8 ,
.Xr rpc.rquotad 8 ,
.Xr sysctl 8 ,
.Xr xntpd 8 ,
.Xr altq 9
.Sh HISTORY
The
.Nm
man page first appeared in
.Ox 2.3 .
.Sh BUGS
The
.Em INET
option should not be required.
