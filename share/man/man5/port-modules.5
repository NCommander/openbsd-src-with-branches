.\"	$OpenBSD: port-modules.5,v 1.131 2012/05/15 15:11:46 jasper Exp $
.\"
.\" Copyright (c) 2008 Marc Espie
.\"
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE DEVELOPERS ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE DEVELOPERS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: May 15 2012 $
.Dt PORT-MODULES 5
.Os
.Sh NAME
.Nm port-modules
.Nd format and conventions used in port modules
.Sh DESCRIPTION
The
.Ox
Ports framework is based on a gigantic makefile named
.Xr bsd.port.mk 5 .
.Pp
In order to curb unwieldy growth, parts of the framework
that are not always needed have been set apart in optional
files called
.Nm port modules ,
which are retrieved as needed through the
.Ev MODULES
variable of
.Xr bsd.port.mk 5 .
.Pp
Some of these modules correspond to basic mechanisms which are not
always needed, such as GNU autoconf, or perl5.
.Pp
Other modules correspond to shortcuts for using some other ports as
dependencies without needing to hardcode too much, such as libiconv or
the qt ports.
.Sh THE MODULES LOOK-UP MECHANISM
The variable
.Ev MODULES
should contain a list of module names.
Some core modules are a single word, all other modules should be
${PKGPATH}.
If the module is
.Pa some/dir/portname ,
the ports framework will look for a file named
.Pa ${PORTSDIR}/some/dir/portname/portname.port.mk
and include it.
.Pp
Most modules should conform to this syntax.
The historic practice of having a redirection file directly under
.Pa ${PORTSDIR}/infrastructure/mk
is deprecated for new modules.
.Pp
Modules may refer to each other.
The modules mechanism has specific recursion handling such that
adding
.Li MODULES += foo/bar
to a module will work as expected.
.Sh NAMING CONVENTIONS
Since there is no actual scope in makefiles, everything defined within
a module will be global to the ports framework, and thus may interfere
with other ports.
.Pp
As far as possible, all variables and targets belonging to a module named
.Pa some/dir/foo
should be named
.Ev MODFOO_*
and
.Ar modfoo_* .
.Pp
Following the same conventions as
.Xr bsd.port.mk 5 ,
internal variables and targets not intended for user consumption should be
named
.Ev _MODFOO_*
and
.Ar _modfoo_* .
.Pp
For instance, if a module wants some value to be available for the rest
of the world, it should define
.Ev MODFOO_VARNAME ,
with a name matching the basic infrastructure as far as possible.
That is, a port that defines specific dependencies will usually
define
.Ev MODFOO_WANTLIB ,
.Ev MODFOO_LIB_DEPENDS ,
and
.Ev MODFOO_RUN_DEPENDS ,
as appropriate.
.Pp
As an exception to the naming mechanism, some ports have several distinct
versions in the ports tree, say
.Pa x11/qt3
and
.Pa x11/qt4 .
Instead of using the namespace
.Ev MODQT3* ,
variables will usually drop the version suffix and be simply called
.Ev MODQT_*
so that a port using the module can be switched from version to version
without needing to change everything.
.Pp
It is highly desirable to define names in both namespaces for such ports,
for example to define both
.Ev MODQT3_LIB_DEPENDS
and
.Ev MODQT_LIB_DEPENDS .
Normal client ports will use
.Ev MODQT_LIB_DEPENDS ,
but a port may exceptionally import both modules with
.Li MODULES += x11/qt3 x11/qt4
and differentiate between qt3 and qt4 needs with
.Ev MODQT3_LIB_DEPENDS
and
.Ev MODQT4_LIB_DEPENDS .
See
.Pa print/poppler
for an example.
.Sh OVERRIDING TARGET BEHAVIOR
The main framework contains several hooks that allow ports to override
normal behavior.
This evolved as an ad-hoc framework, where only hooks that turned out
to be needed were added.
If several modules define the same hook, hook behaviors will be
invoked in sequence.
.Bl -tag -width do-configure
.It Ar patch
There is a
.Ar post-patch
hook that can be activated by defining
.Ev MODFOO_post-patch .
It will be run right after
.Ar post-patch
and before
.Ev REORDER_DEPENDENCIES
touches things.
.It Ar configure
There is a
.Ar pre-configure
hook that can be activated by defining
.Ev MODFOO_pre-configure .
It will be run right after
.Ar pre-configure .
The normal
.Ar do-configure
behavior is to invoke all
.Ev MODFOO_configure
contents that are defined in
.Ev CONFIGURE_STYLE .
By default,
.Ar configure
will do nothing.
.Pp
Some
.Ev CONFIGURE_STYLE
values, namely perl, gnu, imake, automake, autoconf, and autoupdate
will automatically import the correct module.
User-defined modules must both add to
.Ev CONFIGURE_STYLE
and import the correct module to override behavior.
.Pp
Contrary to other hooks, module behavior is not invoked in
addition to
.Ar do-configure ,
but as the normal configure process.
If
.Ar do-configure
is overridden, normal hook processing will not happen.
.It Ar fake
There is a
.Ar pre-fake
hook that can be activated by defining
.Ev MODFOO_pre-fake .
This will be invoked right after
.Xr mtree 8 ,
and before the normal
.Ar pre-fake
behavior.
.It Ar install
There is a
.Ar pre-install
hook that can be activated by defining
.Ev MODFOO_pre-install .
It will be run right before installing the package with
.Xr pkg_add 1 .
.El
.Sh OVERRIDING VARIABLE BEHAVIOR
Some variables can be overridden by modules.
Be very cautious, as this can make the module difficult to use,
or interact badly with other modules.
As a rule, always provide the override as:
.Pp
.Dl VARIABLE ?= value
.Pp
and provide a module-specific variable with the same value:
.Pp
.Dl MODFOO_VARIABLE = value .
.Pp
The following variables can be overridden in a relatively safe fashion:
.Ev ALL_TARGET ,
.Ev CONFIGURE_SCRIPT ,
.Ev DESTDIRNAME ,
.Ev DIST_SUBDIR ,
.Ev DISTNAME ,
.Ev DISTFILES ,
.Ev EXTRACT_SUFX ,
.Ev FAKE_FLAGS ,
.Ev FETCH_MANUALLY ,
.Ev HOMEPAGE ,
.Ev IGNORE ,
.Ev IS_INTERACTIVE ,
.Ev LIBTOOL_FLAGS ,
.Ev MAKE_FILE ,
.Ev MASTER_SITES ,
.Ev MULTI_PACKAGES ,
.Ev NO_BUILD ,
.Ev NO_REGRESS ,
.Ev PATCH_LIST ,
.Ev PKG_ARCH ,
.Ev PKGNAME* ,
.Ev PREFIX ,
.Ev REGRESS_TARGET ,
.Ev REGRESS_IS_INTERACTIVE ,
.Ev REORDER_DEPENDENCIES ,
.Ev SEPARATE_BUILD ,
.Ev SHARED_ONLY ,
.Ev USE_GMAKE ,
.Ev USE_LIBTOOL .
.Pp
The following variables can be added to in a relatively safe fashion:
.Ev BUILD_DEPENDS ,
.Ev CATEGORIES ,
.Ev CONFIGURE_ARGS ,
.Ev CONFIGURE_ENV ,
.Ev ERRORS ,
.Ev FAKE_FLAGS ,
.Ev FLAVOR ,
.Ev FLAVORS ,
.Ev INSTALL_TARGET ,
.Ev LIB_DEPENDS ,
.Ev MAKE_ENV ,
.Ev MAKE_FLAGS ,
.Ev PKG_ARGS ,
.Ev PSEUDO_FLAVORS ,
.Ev REGRESS_DEPENDS ,
.Ev REORDER_DEPENDENCIES ,
.Ev RUN_DEPENDS ,
.Ev SUBST_VARS ,
.Ev WANTLIB .
.Sh SPECIFIC MODULE INTERACTIONS
Some modules correspond to extra ports that will be used mostly as
.Ev BUILD_DEPENDS
or
.Ev RUN_DEPENDS .
Such modules can safely append values directly to the
.Ev BUILD_DEPENDS ,
.Ev RUN_DEPENDS ,
.Ev LIB_DEPENDS ,
and
.Ev WANTLIB
variables, as long as they also define module-specific variables for
all runtime dependencies.
.Pp
Simple client ports will use the module directly, and thus inherit extra
build and runtime dependencies.
.Pp
More sophisticated ports can use
.Ev MULTI_PACKAGES
to select specific behavior: build-time dependencies will always be
needed.
Runtime dependencies will be selected on a subpackage basis,
since runtime dependencies such as
.Ev LIB_DEPENDS-sub
do not inherit the default
.Ev LIB_DEPENDS
value.
The client port's author must only bear in mind that external modules
may add values to the default
.Ev WANTLIB ,
.Ev LIB_DEPENDS ,
and
.Ev RUN_DEPENDS ,
and thus that it is not safe to inherit from it blindly.
.Pp
Modules are imported during
.Pp
.Dl .include <bsd.port.mk>
.Pp
Thus they can be affected by user choices such as setting a variable
to Yes or No.
Modules may make decisions based on documented
.Ev MODFOO_BEHAVIOR
values.
.Pp
When modules are processed, only a few
.Xr bsd.port.mk 5
variables are already defined.
Modules may depend upon the following variables already having a sane
value:
.Ev DISTDIR ,
.Ev LOCALBASE ,
.Ev NO_DEPENDS ,
.Ev PKGPATH ,
.Ev PORTSDIR ,
.Ev X11BASE
and all arch-dependent constant from
.Xr bsd.port.arch.mk 5 ,
such as
.Ev PROPERTIES
or
.Ev NO_SHARED_ARCHS .
Note that this is only relevant for tests.
It is perfectly okay to define variables or targets that depend on the
basic ports framework without having to care whether that variable is
already defined, since
.Xr make 1
performs lazy evaluation.
.Sh CORE MODULES DOCUMENTATION
The following modules are available.
.Bl -tag -width do-configure
.It apache-module
.It converters/libiconv
.It cpan
For perl ports coming from CPAN.
Wrapper around the normal perl module that fetches the file from
the correct location depending on
.Ev DISTNAME ,
and sets a default
.Ev PKGNAME .
Also affects
.Ev REGRESS_DEPENDS ,
.Ev CONFIGURE_STYLE ,
.Ev PKG_ARCH ,
and
.Ev CATEGORIES .
.Pp
Some CPAN modules are only indexed by author, set
.Li CPAN_AUTHOR=ID
to locate the right directory.
.Pp
If no
.Ev HOMEPAGE
is defined, it will default to
.Pa http://search.cpan.org/dist/${DISTNAME:C/-[^-]*$//}/
.Pp
User settings: set
.Ev CPAN_REPORT
to Yes,
.Ev CPAN_REPORT_DB
to a valid directory,
and
.Ev CPAN_REPORT_FROM
to a valid email address to automate the reporting
of regress tests to CPAN.
.Pp
If
.Ev MODCPAN_EXAMPLES
is set, the following variables will be set.
.Ev MODCPAN_EXAMPLES_DIST
will hold the default directory in the distfile with
example scripts.
.Ev MODCPAN_EXAMPLES_DIR
will be set to the standard installation directory for
examples.
Sets the
.Ar post-install
target if none has been defined to install the examples,
otherwise
.Ev MODCPAN_POST_INSTALL
should be used as such:
.Bd -literal
post-install:
	...
	${MODCPAN_POST_INSTALL}
.Ed
.It devel/cmake
.It devel/dconf
Sets
.Ev CONFIGURE_ARGS ,
.Ev BUILD_DEPENDS
and
.Ev RUN_DEPENDS .
This module is used by ports installing gsettings schemas under
.Pa ${PREFIX}/share/glib-2.0/schemas/ .
It requires the following goo in the PLIST:
.Bd -literal -offset indent
@exec %D/bin/glib-compile-schemas %D/share/glib-2.0/schemas >/dev/null
@unexec-delete %D/bin/glib-compile-schemas %D/share/glib-2.0/schemas >/dev/null
.Ed
.It devel/gconf2
A link from
.Xr gconftool-2 1
to
.Xr true 1
will be put at the front of the path.
Sets
.Ev CONFIGURE_ARGS ,
.Ev BUILD_DEPENDS
and
.Ev RUN_DEPENDS .
According to the values of
.Ev MODGCONF2_LIBDEP ,
sets
.Ev LIB_DEPENDS .
User settings: set
.Ev MODGCONF2_SCHEMAS_DIR
to the directory name under
.Pa ${LOCALBASE}/share/schemas/
where schemas files will be installed.
.It devel/gettext
.It devel/pmk
Sets
.Ev CONFIGURE_SCRIPT ,
.Ev CONFIGURE_ARGS
and
.Ev MODPMK_configure .
It appends
.Pa devel/pmk
to
.Ev BUILD_DEPENDS .
.It devel/scons
Adds
.Pa devel/scons
to
.Ev BUILD_DEPENDS .
Sets
.Ev MODSCONS_BIN
and
.Ev MODSCONS_ENV .
Also defines an overridable
.Ev MODSCONS_FLAGS .
It provides a
.Ar do-build
and
.Ar do-install
targets that can be overridden in the port Makefile.
.It devel/waf
Adds
.Pa devel/waf
to
.Ev BUILD_DEPENDS ,
.Pa lang/python
to
.Ev MODULES ,
and provides
.Ar do-configure ,
.Ar do-build ,
.Ar do-install
and
.Ar post-install
targets.
.Ar do-build ,
.Ar do-install
and
.Ar post-install
can be overridden in the port Makefile.
.It fortran
Sets
.Ev MODFORTRAN_LIB_DEPENDS ,
.Ev MODFORTRAN_WANTLIB ,
.Ev MODFORTRAN_BUILD_DEPENDS .
Set
.Ev MODFORTRAN_COMPILER
to `g77' or `gfortran', depending on what the port requires.
The default is `g77'.
The dependencies are chosen according to
.Ev COMPILER_VERSION
and
.Ev MODFORTRAN_COMPILER .
.It gcc3
If
.Ev COMPILER_VERSION
is not gcc3 (defined by
.Pa /usr/share/mk/bsd.own.mk ) ,
and architecture is in
.Ev MODGCC3_ARCHS ,
then the gcc 3.3.6 compilers will be put at the front of the path.
By default, only C language support is included by this module.
If other languages are needed, they must be listed in
.Ev MODGCC3_LANGS
(e.g. c++, g77).
.It gcc4
If
.Ev COMPILER_VERSION
is not gcc4 (defined by
.Pa /usr/share/mk/bsd.own.mk ) ,
and architecture is in
.Ev MODGCC4_ARCHS ,
then the gcc 4.2 compilers will be put at the front of the path.
By default, only C language support is included by this module.
If other languages are needed, they must be listed in
.Ev MODGCC4_LANGS
(e.g. c++, fortran).
The
.Ev MODGCC4_VERSION
variable can be used to change the version of gcc.
By default gcc 4.2 is used.
If
.Ev MODGCC4_LANGS
contains c++, this module provides
.Ev MODGCC4_CPPLIBDEP
and
.Ev MODGCC4_CPPWANTLIB .
.It gnu
This module is documented in the main
.Xr bsd.port.mk 5
manpage.
.It imake
This module is documented in the main
.Xr bsd.port.mk 5
manpage.
.It java
Set
.Li MODJAVA_VER=x.y
to use exactly the JDK x.y,
.Li MODJAVA_VER=x.y+
to use any x.y or higher version.
Set
.Li MODJAVA_JRERUN=Yes
if the port only needs the JRE at runtime.
The module sets
.Ev JAVA_HOME ,
.Ev ONLY_FOR_ARCHS ,
.Ev MODJAVA_RUN_DEPENDS ,
.Ev MODJAVA_SHARE_DIR ,
.Ev MODJAVA_JAR_DIR ,
.Ev MODJAVA_EXAMPLE_DIR
and
.Ev MODJAVA_DOC_DIR .
It appends to
.Ev BUILD_DEPENDS ,
.Ev RUN_DEPENDS
and
.Ev CATEGORIES .
If
.Li MODJAVA_BUILD=ant
then this module provides
.Ev MODJAVA_BUILD_DIR ,
.Ev MODJAVA_BUILD_FILE
and
.Ev MODJAVA_BUILD_TARGET ,
as well as a
.Ar do-build
target (if not already defined).
It heeds
.Ev NO_BUILD .
.It lang/clang
Similar to gcc3 and gcc4 modules.
If architecture is in MODGCC3_ARCHS, the CLang compilers will be
put at the front of the path.
By default, only C language support is included by this module.
If other languages are needed, they must be listed in
.Ev MODCLANG_LANGS
(e.g. c++).
.It lang/ghc
Sets
.Ev ONLY_FOR_ARCHS ,
.Ev MODGHC_VER ,
.Ev BUILD_DEPENDS ,
and
.Ev RUN_DEPENDS .
Build and further actions are based on the list of values in
.Ev MODGHC_BUILD :
.Bl -tag -width register
.It Ar nort
no runtime dependency on
.Pa lang/ghc
and hs- prefix will not be added,
.It Ar cabal
get the typical Cabal targets defined,
.It Ar haddock
generate API documentation using
.Pa devel/haddock ,
.It Ar register
register
create and include register/unregister scripts,
.It Ar hackage
the distfiles are available on Hackage.
.El
.Pp
Also affects
.Ev CATEGORIES ,
.Ev CONFIGURE_STYLE
and
.Ev SUBST_VARS .
.Ar do-build ,
.Ar do-install
and
.Ar do-regress
targets are provided if the port itself didn't set them.
If
.Ar register
has been set, the PLIST needs to be modified in order to
add the relevant @exec/@unexec lines.
This module will run the Setup script and ensure the documentation
will be built (if
.Ar haddock
has been set), and that the package is
registered as a library usable by
.Pa lang/ghc
(if
.Ar register
has been set).
Extra arguments and environment additions for the Setup configure
command can be specified with
.Ev MODGHC_SETUP_CONF_ARGS
and
.Ev MODGHC_SETUP_CONF_ENV .
.It lang/lua
Sets
.Ev MODLUA_DATADIR ,
.Ev MODLUA_DOCDIR ,
.Ev MODLUA_EXAMPLEDIR ,
.Ev MODLUA_LIBDIR ,
.Ev MODLUA_VERSION .
Appends to
.Ev CATEGORIES .
Also appends to
.Ev BUILD_DEPENDS ,
unless
.Ev NO_BUILD
has been set to Yes.
Also appends to
.Ev RUN_DEPENDS ,
unless
.Ev MODLUA_RUNDEP
is set to No.
Also affects
.Ev PKG_ARCH
when
.Ev SHARED_ONLY
is not set or set to No.
Appends
.Ev MODLUA_VERSION
to
.Ev SUBST_VARS .
.It lang/mono
Sets
.Ev MODMONO_ONLY_FOR_ARCHS ,
.Ev CONFIGURE_ENV ,
.Ev MAKE_FLAGS ,
.Ev MODMONO_BUILD_DEPENDS
and
.Ev MODMONO_RUN_DEPENDS .
If
.Ev MODMONO_DEPS
is set to Yes,
.Pa lang/mono
is appended to
.Ev BUILD_DEPENDS
and
.Ev RUN_DEPENDS .
If
.Ev MODMONO_NANT
is set to Yes,
.Ev NANT
and
.Ev NANT_FLAGS
are set,
.Pa devel/nant
is appended to
.Ev BUILD_DEPENDS
and a
.Ar do-build
and
.Ar do-install
targets are provided to use nant for building.
If these targets are already defined, one can use
.Ev MODMONO_BUILD_TARGET
and
.Ev MODMONO_INSTAlL_TARGET
instead in the corresponding target.
.Ev DLLMAP_FILES
defines in which files the module will substitute hardcoded
shared library versions using a
.Ar post-configure
target.
.It lang/ocaml
Sets
.Ev OCAML_VERSION ,
.Ev MODOCAML_NATIVE .
Appends to
.Ev BUILD_DEPENDS
and
.Ev MAKE_ENV .
This also selects a %%native%% plist fragment depending on whether
the architecture supports native compilation or not.
.It lang/php/pecl
Used for ports for PHP PECL extensions.
Sets default
.Ev MASTER_SITES ,
.Ev HOMEPAGE ,
.Ev EXTRACT_SUFX ,
.Ev DESTDIRNAME ,
.Ev MODPHP_DO_SAMPLE ,
.Ev MODPHP_DO_PHPIZE ,
.Ev AUTOCONF_VERSION ,
.Ev AUTOMAKE_VERSION ,
.Ev USE_LIBTOOL ,
.Ev LIBTOOL_FLAGS .
Provides a default
.Ev REGRESS_TARGET
and
.Ev REGRESS_FLAGS
unless
.Ev NO_REGRESS
or a
.Ar do-regress
target is defined.
Adds common dependencies to
.Ev RUN_DEPENDS
and
.Ev BUILD_DEPENDS .
Sets a default
.Ev PKGNAME
and appends to
.Ev CATEGORIES .
.It lang/python
Sets
.Ev MODPY_VERSION ,
.Ev MODPY_BIN ,
.Ev MODPY_INCDIR ,
.Ev MODPY_LIBDIR ,
.Ev MODPY_SITEPKG ,
.Ev MODPY_SETUP ,
.Ev MODPY_WANTLIB ,
.Ev MODPY_LIB_DEPENDS ,
.Ev MODPY_RUN_DEPENDS ,
.Ev MODPY_BUILD_DEPENDS ,
.Ev MODPY_BIN_ADJ
and
.Ev MODPY_ADJ_FILES .
Appends to
.Ev RUN_DEPENDS
unless
.Ev MODPY_RUNDEP
is set to No.
Appends to
.Ev BUILD_DEPENDS
unless
.Ev MODPY_BUILDDEP
is set to No or
.Ev NO_BUILD
is set to Yes.
.Ev MODPY_VERSION
is the default version used by all python modules.
Ports which use the setuptools module should set
.Ev MODPY_SETUPTOOLS
to Yes.
All ports that generate egg-info files should set
.Ev MODPY_EGG_VERSION
to the version string used by the port's setup.py setup() function.
Extra arguments to the build and install commands can be passed via
.Ev MODPY_DISTUTILS_BUILDARGS
and
.Ev MODPY_DISTUTILS_INSTALLARGS .
.Ev MODPY_BIN_ADJ
is a command that takes filename arguments and replaces the python
shebang line with
.Ev MODPY_BIN .
.Ev MODPY_ADJ_FILES
is a list of filenames that will automatically have
.Ev MODPY_BIN_ADJ
called on them at the end of
.Ar pre-configure .
Also affects
.Ev CATEGORIES ,
.Ev MAKE_ENV ,
.Ev CONFIGURE_ENV ,
.Ev SHARED_ONLY ,
and
.Ev SUBST_VARS .
May affect the
.Ar regress
target.
.It lang/ruby
See
.Xr ruby-module 5 .
.It lang/tcl
Sets
.Ev MODTCL_VERSION ,
.Ev MODTCL_BIN ,
.Ev MODTCL_INCDIR ,
.Ev MODTCL_LIBDIR ,
.Ev MODTCL_BUILD_DEPENDS ,
.Ev MODTCL_RUN_DEPENDS ,
.Ev MODTCL_LIB ,
.Ev MODTCL_LIB_DEPENDS,
and
.Ev MODTCL_CONFIG .
.Ev MODTCL_VERSION
is the default version used by all Tcl ports and may be overridden.
Provides
.Ev MODTCL_TCLSH_ADJ
and
.Ev MODTCL_WISH_ADJ
shell fragments to patch the interpreter path in executable scripts.
Also affects
.Ev CATEGORIES
and
.Ev SUBST_VARS .
.It perl
This module is documented in the main
.Xr bsd.port.mk 5
manpage.
.It textproc/intltool
Sets
.Ev MODINTLTOOL_OVERRIDE .
.Pa textproc/intltool
is added to
.Ev BUILD_DEPENDS .
.Ev MODINTLTOOL_OVERRIDE
changes the paths of
.Ev INTLTOOL_EXTRACT ,
.Ev INTLTOOL_MERGE
and
.Ev INTLTOOL_UPDATE
to use the installed versions of intltool-extract,
intltool-merge and intltool-update, instead of the version's packages into the
distfile of the port using this module.
Also affects
.Ev CONFIGURE_ENV,
.Ev MAKE_ENV
and
.Ev MAKE_FLAGS
by appending
.Ev MODINTLTOOL_OVERRIDE
to them.
.It www/drupal6
.It www/horde
.It www/mozilla
Sets
.Ev PKGNAME ,
.Ev HOMEPAGE ,
.Ev MASTER_SITES ,
.Ev DISTNAME ,
.Ev USE_GMAKE ,
.Ev ONLY_FOR_ARCHS
and
.Ev SHARED_ONLY .
.Ev EXTRACT_SUFX
defaults to .tar.bz2.
.Pp
Adds common dependencies to
.Ev LIB_DEPENDS ,
.Ev WANTLIB ,
.Ev RUN_DEPENDS
and
.Ev BUILD_DEPENDS .
Sets common
.Ev CONFIGURE_ARGS ,
.Ev MAKE_ENV
and
.Ev CONFIGURE_ENV .
Sets
.Ev MOB
variable as source directory
and
.Ev MOZ
as target directory within
.Ar do-install .
.Pp
Individual port Makefile must set
.Ev MOZILLA_PROJECT ,
.Ev MOZILLA_CODENAME ,
.Ev MOZILLA_VERSION ,
.Ev MOZILLA_BRANCH ,
.Ev MOZILLA_LIBS
and
.Ev MOZILLA_DATADIRS
variables.
Port can also append values to
.Ev MOZILLA_SUBST_FILES
which contains the list of
files to run
.Ev SUBST_CMD
on during
.Ar pre-configure ,
and
.Ev MOZILLA_AUTOCONF_DIRS
which
contains the list of dirs where
.Ev AUTOCONF
will be run during
.Ar pre-configure .
.It www/node
Adds common dependencies to
.Ev RUN_DEPENDS
and
.Ev BUILD_DEPENDS .
Recognizes two additional types of
.Ev CONFIGURE_STYLE Ns s ,
"npm" and "npm ext".
"npm ext" should be used for npm packages that contain C++ extensions which
need to be compiled.
"npm" should be used for other npm packages.
If regression tests are included that can be run using
.Pa devel/node-expresso ,
append "expresso" to
.Ev CONFIGURE_STYLE .
.Pa devel/node-expresso
will be appened to
.Ev REGRESS_DEPENDS
and a default
.Ev MODNODE_REGRESS_TARGET
will be defined, along with a do-regress target if it has not
already been set.
If "expresso" isn't appended to
.Ev CONFIGURE_STYLE ,
.Ev REGRESS_TARGET
will be set to "test".
One of these two
.Ev CONFIGURE_STYLE Ns s
should be used or the module doesn't affect anything except
.Ev RUN_DEPENDS
and
.Ev BUILD_DEPENDS .
Requires
.Ev NPM_NAME
to be set to the name of the npm package.
Uses
.Ev NPM_NAME
and
.Ev NPM_VERSION
to set
.Ev DISTNAME ,
and
.Ev PKGNAME ,
and
.Ev MASTER_SITES .
If the npm package depends on other npm packages, the npm package names it
depends on should be listed in
.Ev MODNODE_DEPENDS .
Adds default do_build and do_install tasks, and you can reference the default
implementations via
.Ev MODNODE_BUILD_TARGET
and
.Ev MODNODE_INSTALL_TARGET .
.It www/pear
Used for PHP PEAR ports.
Sets default
.Ev MASTER_SITES ,
.Ev EXTRACT_SUFX ,
.Ev PKGNAME .
Sets
.Ev PREFIX
to
.Pa /var/www .
Sets
.Ev NO_REGRESS
unless a
.Ar do-regress
target is defined.
Adds common dependencies to
.Ev RUN_DEPENDS
and
.Ev BUILD_DEPENDS ,
sets
.Ev MAKE_FILE
and
.Ev FAKE_FLAGS
appropriately.
Makes
.Ev PEAR_LIBDIR
and
.Ev PEAR_PHPBIN
available for use in the port.
Sets a default
.Ev PKGNAME
and appends to
.Ev CATEGORIES .
.It www/plone
Sets
.Ev MODPLONE_VERSION
and
.Ev MODZOPE_VERSION .
.Ev MODPLONE_VERSION
is the default version used by all Plone ports and may be overridden.
It appends
.Pa www/plone
to
.Ev RUN_DEPENDS
and also sets
.Ev NO_REGRESS
to Yes.
.It www/zope
.It x11/gnome
If both
.Ev GNOME_PROJECT
and
.Ev GNOME_VERSION
are set, this module defines
.Ev DISTNAME ,
.Ev VERSION ,
.Ev MASTER_SITES ,
adds x11/gnome to
.Ev CATEGORIES
and
.Ev EXTRACT_SUFX
will default to .tar.xz if unset.
Also unconditionally sets
.Ev USE_GMAKE .
If
.Li MODGNOME_ICON_CACHE=Yes ,
a dependency on
.Pa x11/gtk+2,-guic
is appended to
.Ev MODGNOME_RUN_DEPENDS .
Unless
.Li NO_BUILD=Yes ,
.Ev CONFIGURE_SHARED
is appended to
.Ev CONFIGURE_ARGS ,
.Li CPPFLAGS="-I${LOCALBASE}/include"
and
.Li LDFLAGS="-L${LOCALBASE}/lib"
are appended to
.Ev CONFIGURE_ENV ,
.Ev USE_LIBTOOL
is set to Yes and
.Pa textproc/intltool
is appended to
.Ev MODULES .
Certain build/run dependencies and configure arguments and environment
can be set by appending goi, gtk-doc, vala and/or yelp to
.Ev MODGNOME_TOOLS .
They are disabled otherwise.
If
.Ev MODGNOME_TOOLS
is set to yelp,
.Pa textproc/itstool
and
.Pa x11/gnome/doc-utils
are appended to
.Ev MODGNOME_BUILD_DEPENDS .
Also,
.Pa x11/gnome/yelp
is appended to
.Ev MODGNOME_RUN_DEPENDS ,
and
.Ev MODGNOME_RUN_DEPENDS_yelp
is
set for use with multi packaged ports.
This option is to be used when any files are installed into
.Pa share/gnome/help/
or page files are installed into
.Pa share/help/ .
.Ev MODGNOME_BUILD_DEPENDS
and
.Ev MODGNOME_BUILD_DEPENDS
are appended to the
corresponding
.Ev BUILD_DEPENDS
and
.Ev RUN_DEPENDS .
.Pp
.It x11/gnustep
.It x11/kde
.It x11/qt3 and x11/qt4
Both qt modules share a common
.Ev MODQT_*
namespace for simple ports.
The qt3 module also defines the same variables under
.Ev MODQT3_*
and the qt4 module also defines the same variables under
.Ev MODQT4_* ,
to allow ports to use both modules, such as
.Pa print/poppler .
.Pp
Those modules define
.Ev MODQT*_LIBDIR
as the libraries location,
.Ev MODQT*_INCDIR
as the include files location ,
.Ev MODQT*_QTDIR
as the global qt directory location ,
.Ev MODQT*_CONFIGURE_ARGS
as standard GNU configure-style parameters to locate the include and libraries.
.Pp
The location of qt specific tools
.Nm moc
and
.Nm uic
is available through
.Ev MODQT*_MOC
and
.Ev MODQT*_UIC .
.Ev MODQT*_OVERRIDE_UIC
controls whether the default setup will force a value of
.Ev UIC
or not.
The value of
.Ev MOC
is always forced to ${MODQT*_MOC}.
qt4 includes
.Xr pkg-config 1
files under a specific location recorded in
.Ev MODQT_PKG_CONFIG_PATH .
qt3 requires the use of
.Ev MODQT3_PLUGINS
to correctly locate plugins.
.Pp
The modules add to
.Ev CONFIGURE_ENV , MAKE_ENV
and
.Ev MAKE_FLAGS .
They define appropriate
.Ev MODQT*_LIB_DEPENDS
and
.Ev MODQT*_WANTLIB .
Note that qt4 has split its code over several libraries, so the basic
.Ev WANTLIB
only refers to QtCore.
Other libraries should be added as needed.
.It x11/tk
Sets
.Ev MODTK_VERSION ,
.Ev MODTK_BIN ,
.Ev MODTK_INCDIR ,
.Ev MODTK_LIBDIR ,
.Ev MODTK_BUILD_DEPENDS ,
.Ev MODTK_RUN_DEPENDS ,
.Ev MODTK_LIB ,
.Ev MODTK_LIB_DEPENDS ,
and
.Ev MODTK_CONFIG .
.Ev MODTK_VERSION
is the default version used by all Tk ports and
may be overridden.
Automatically adds the
.Pa lang/tcl
module, provides a default
.Ev MODTCL_VERSION
to match
.Ev MODTK_VERSION ,
and affects
.Ev CATEGORIES
and
.Ev SUBST_VARS .
Note the
.Ev MODTCL_WISH_ADJ
shell fragment in the
.Pa lang/tcl
module.
.It x11/xfce4
Sets
.Ev DIST_SUBDIR ,
.Ev EXTRACT_SUFX ,
.Ev CONFIGURE_STYLE ,
.Ev CONFIGURE_ENV
and
.Ev USE_GMAKE .
If
.Ev MODXFCE_ICON_CACHE
is set to yes, it adds
.Pa x11/gtk+2,-guic
to
.Ev RUN_DEPENDS .
Unless
.Ev XFCE_NO_SRC
is set,
.Ev USE_LIBTOOL
is set to yes and
.Pa devel/gettext
and
.Pa textproc/intltool
are added to
.Ev MODULES .
Also affects
.Ev CATEGORIES .
.Pp
Xfce ports can be divided into five categories: core libraries and
applications, goodies, artwork, thunar plugins, and panel plugins.
.Ev HOMEPAGE ,
.Ev MASTER_SITES
and
.Ev DISTNAME
are built using
.Ev XFCE_VERSION
(which defaults to
.Ev XFCE_DESKTOP_VERSION
if not set) and either
.Ev XFCE_PROJECT ,
.Ev XFCE_GOODIE ,
.Ev XFCE_ARTWORK ,
.Ev THUNAR_PLUGIN
or
.Ev XFCE_PLUGIN .
One of the latter has to be provided by the port Makefile.
.El
.Sh SEE ALSO
.Xr make 1 ,
.Xr bsd.port.mk 5 ,
.Xr ports 7
