.\"	$OpenBSD: fork1.9,v 1.1 1999/09/02 17:24:35 espie Exp $
.\"	$NetBSD: fork1.9,v 1.3 1999/03/16 00:40:47 garbled Exp $
.\"
.\" Copyright (c) 1998 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Jason R. Thorpe of the Numerical Aerospace Simulation Facility,
.\" NASA Ames Research Center.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by the NetBSD
.\"        Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd January 6, 1998
.Dt FORK1 9
.Os
.Sh NAME
.Nm fork1
.Nd create a new process
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/proc.h>
.Ft int
.Fn "fork1" "struct proc *p1" "int forktype" "int rforkflags" "void *stack" "size_t stacksize" "register_t *retval" 
.Sh DESCRIPTION
.Fn fork1
creates a new process out of
.Ar p1 ,
which should be the current process.  This function is used primarily
to implement the
.Xr fork 2 ,
.Xr rfork 2 ,
.Xr vfork 2
system calls, as well as the
.Xr create_kthread 9 
function.
.Pp
The 
.Fa forktype
argument can be 
.Dv ISFORK ,
.Dv ISVFORK 
or
.Dv ISRFORK
and controls whether 
.Nm
has
.Xr fork 2 ,
.Xr vfork 2
or
.Xr rfork 2
semantics.
.Pp
The
.Ar rforkflags
argument is only used if
.Fa forktype 
equals
.Dv ISRFORK ,
and is used to implement
.Xr rfork 2 
semantics.
.Bl -tag -width RFNOWAIT
.It Dv RFPROC
Should always be set. The system currently does not support changing an
existing process characteristics.
.It Dv RFNOWAIT
See
.Xr rfork 2 .
.It Dv RFFDG
If set, the child gets a copy of the parent's file descriptor table
through 
.Xr fdcopy 9 .
Otherwise, the file descriptor table is shared through
.Xr fdshare 9 .
.It Dv RFCFDG
If set, the child starts out with a clean file descriptor table created
by
.Xr fdinit 9 .
.It Dv RFMEM
If set, the child will share the parent's address space, apart from the
stack segment, which is always copied.  Otherwise, the child will get a 
copy-on-write snapshot of the parent address space.
.El
.Pp
If
.Fa stack
is not 
.Dv NULL , 
the area starting at
.Fa stack
of extent
.Fa stacksize
will be used for the child's stack, instead of cloning the parent's
stack.
.Pp
If
.Fa retval
is not 
.Dv NULL , 
it will hold the following values after successful completion
of the fork operation:
.Bl -tag -width retval[0]
.It Fa retval[0]
This will contain the pid of the child process.
.It Fa retval[1]
In the parent process, this will contain the value 0.  In the child process,
this will contain 1.
.Sh RETURN VALUES
Upon successful completion of the fork operation,
.Fn fork1
returns 0.  Otherwise, the following error values are returned:
.Bl -tag -width [EAGAIN]
.It Bq Er EAGAIN
The limit on the total number of system processes would be exceeded.
.It Bq Er EAGAIN
The limit
.Dv RLIMIT_NPROC
on the total number of processes under execution by this
user id would be exceeded.
.El
.Sh CAVEATS
The
.Nm
function semantics are specific to 
.Ox .
Other BSD systems have different semantics.
.Pp
The system never uses
.Fn fork1 
with a non-null
.Fa stack ,
so that feature is not even tested.
.Sh SEE ALSO
.Xr execve 2 ,
.Xr fork 2 ,
.Xr rfork 2 ,
.Xr vfork 2 ,
.Xr pfind 9 ,
.Xr psignal 9 ,
.Xr create_kthread 9
