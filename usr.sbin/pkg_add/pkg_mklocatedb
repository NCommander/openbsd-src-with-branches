#! /usr/bin/perl
# Copyright (c) 2005 Marc Espie <espie@openbsd.org>
# 
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
# 
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use OpenBSD::PackageLocator;
use OpenBSD::PackageInfo;
use OpenBSD::PackingList;
use OpenBSD::Getopt;
use OpenBSD::Error;
use File::Path;

package OpenBSD::PackingElement;
sub print_name {}

package OpenBSD::PackingElement::FileObject;
sub print_name
{
	my ($self, $fh, $pkgname) = @_;
	print $fh $pkgname, ":", $self->fullname(), "\n";
}

package main;

set_usage('pkg_mklocatedb [-nPq] [-r release] [-p portstree ] [-s src] [-x X11src] [pkg-name [...]]');

our ($opt_n, $opt_q, $opt_s, $opt_x, $opt_r, $opt_p, $opt_P);

sub info
{
	my $plist = shift;
	if ($opt_P) {
		return $plist->{extrainfo}->{subdir};
	} else {
		return $plist->pkgname();
	}
}

try {
	getopts('nqs:x:r:p:P');
} catchall {
	Usage($_);
};

my $fh;
my $MKLOCATEDB="/usr/libexec/locate.mklocatedb";

if ($opt_n or -t STDOUT) {
	$fh = \*STDOUT;
} else {
	open $fh, "|-", $MKLOCATEDB, $MKLOCATEDB or die "couldn't open pipe: $!";
}
if ($opt_s || $opt_x) {
	my ($rev, $arch) = split(/ /, `uname -mr`);
	chomp $arch;
	$rev =~ s/\.//;
	if ($opt_s) {
		my $dir = "$opt_s/distrib/sets/lists";
		for my $set (qw(base comp etc game man misc)) {
			for my $f ("$dir/$set/mi", "$dir/$set/md.$arch") {
				open my $l, '<', $f or next;
				while (my $e = <$l>) {
					chomp $e;
					$e =~ s/^\.//;
					print "$set$rev:$e\n";
				}
			}
		}
	}
	if ($opt_x) {
		my $dir = "$opt_x/distrib/sets/lists";
		for my $set (qw(xbase xetc xfont xserv xshare)) {
			for my $f ("$dir/$set/mi", "$dir/$set/md.$arch") {
				open my $l, '<', $f or next;
				while (my $e = <$l>) {
					chomp $e;
					$e =~ s/^\.//;
					print "$set$rev:$e\n";
				}
			}
		}
	}
}

if ($opt_r) {
	require OpenBSD::Ustar;

	opendir(my $dir, $opt_r) or next;
	while (my $e = readdir $dir) {
		if ($e =~ m/^(\w+\d\d)\.tgz$/) {
			my $set = $1;
			open my $arc, '-|', '/usr/bin/gzip', 'gzip', '-c', '-d', "$opt_r/$e";
			my $u = OpenBSD::Ustar->new($arc, '/');
			while (my $f = $u->next()) {
				my $name = $f->{name};
				$name =~ s/^\.//;
				print "$set:$name\n";
			}
			close $arc;
		}
	}
	closedir($dir);
}

if ($opt_p) {
	my $make = $ENV{MAKE} || 'make';
	open my $in, "cd $opt_p && $make print-plist-all |";
	my $done = 0;
	while (!$done) {
		my $plist = OpenBSD::PackingList->read($in,
		    sub {
			my ($fh, $cont) = @_;
			local $_;
			while (<$fh>) {
				return if m/^\=\=\=\> /o;
				next unless m/^\@(?:cwd|name|info|man|file|lib|shell|comment\s+subdir\=)\b/o || !m/^\@/o;
				&$cont($_);
			}
			$done = 1;
		    });
		if (defined $plist && defined $plist->pkgname()) {
			$plist->visit('print_name', $fh, info($plist));
		}
	}
	close($in);
}

elsif (@ARGV==0) {
	for my $pkgname (installed_packages()) {
		print STDERR "$pkgname\n" unless $opt_q;
		my $plist = OpenBSD::PackingList->from_installation($pkgname);
		$plist->visit('print_name', $fh, info($plist));
	}
} else {
	for my $pkgname (@ARGV) {
		print STDERR "$pkgname\n" unless $opt_q;
		my $plist = OpenBSD::PackageLocator->grabPlist($pkgname);
		next unless $plist;
		$plist->visit('print_name', $fh, info($plist));
	}
}
