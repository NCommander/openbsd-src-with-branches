/* This is -*-c-*- */
/* $arla: bos.xg,v 1.8 2002/05/31 21:05:55 lha Exp $ */

/*
 * Interface to BOS server
 */

package BOZO_

%#include <fs_errors.h>

error-function conv_to_arla_errno

const BZNOTACTIVE		= 39424;
const BZNOENT			= 39425;
const BZBUSY			= 39426;
const BZEXISTS			= 39427;
const BZNOCREATE		= 39428;
const BZDOM			= 39429;
const BZACCESS			= 39430;
const BZSYNTAX			= 39431;
const BZIO			= 39432;
const BZNET			= 39433;
const BZBADTYPE			= 39434;

const BOZO_BSSIZE = 256;

/*
 *
 */

const BSTAT_SHUTDOWN		= 0;
const BSTAT_NORMAL		= 1;
const BSTAT_SHUTTINGDOWN	= 2;
const BSTAT_STARTINGUP		= 3;

const BOZO_PRUNEOLD		= 1;
const BOZO_PRUNEBAK		= 2;
const BOZO_PRUNECORE		= 4;

const BPROC_STARTED		= 1;
const BPROC_EXITED		= 2;

const BOZO_HASCORE		= 1;
const BOZO_ERRORSTOP		= 2;
const BOZO_BADDIRACCESS		= 4;

const BNODE_NEEDTIMEOUT		= 0x01;
const BNODE_ACTIVE		= 0x02;
const BNODE_WAIT		= 0x04;
const BNODE_DELETE		= 0x08;
const BNODE_ERRORSTOP		= 0x10;

const KTIME_HOUR		= 0x01;
const KTIME_MIN			= 0x02;
const KTIME_SEC			= 0x04; /* XXX check me */
const KTIME_DAY			= 0x08;
const KTIME_TIME		= 0x07;
const KTIME_NEVER		= 0x10;
const KTIME_NOW			= 0x20;

/* GetRestartTime */

const BOZO_RESTARTTIME_GENERAL	= 0x1;	/* general reboot time */
const BOZO_RESTARTTIME_NEWBIN	= 0x2;	/* new binary */

#if 0
const GETSTATUS_FSRUN  		= "file server running";
const GETSTATUS_RSRUNVOLDOWN	= "file server running; volser down";
const GETSTATUS_SALVAGE		= "salvaging file system";
const GETSTATUS_FSSTART		= "starting file server";
const GETSTATUS_FSDOWN		= "file server shutting down";
const GETSTATUS_SALVAGERDOWN	= "salvager shutting down";
const GETSTATUS_FSSTOP		= "salvager shut down";
#endif

struct bozo_status {
    long goal;
    long fileGoal;
    long porcStartTime;
    long procStarts;
    long lastAnyExit;
    long lastErrorExit;
    long errorCode;
    long errorSignal;
    long flags;
    long spare[8];
};

struct bozo_netKTime {
    long mask;
    short hour;
    short min;
    short sec;
    short day;
};

struct bozo_key {
    char data[8];
};

struct bozo_keyInfo {
    long mod_sec;
    long mod_usec;
    unsigned long keyCheckSum;
    long spare2;
};

#if 0
struct bnode_ops {
    struct bnode *(*create)();
    long (*timeout)();
    long (*getstat)();
    long (*setstat)();
    long (*delete)();
    long (*procexit)();
    long (*getstring)();
    long (*getparm)();
    long (*restartp)();
    long (*hascore)();
};
#endif


CreateBnode (IN string type<BOZO_BSSIZE>,
	     IN string instance<BOZO_BSSIZE>,
	     IN string p1<BOZO_BSSIZE>,
	     IN string p2<BOZO_BSSIZE>,
	     IN string p3<BOZO_BSSIZE>,
	     IN string p4<BOZO_BSSIZE>,
	     IN string p5<BOZO_BSSIZE>,
	     IN string p6<BOZO_BSSIZE>) = 80;

DeleteBnode (IN string instance<BOZO_BSSIZE>) = 81;

SetStatus (IN string instance<BOZO_BSSIZE>,
	    IN long status) = 82;


GetStatus (IN string instance<BOZO_BSSIZE>,
	   OUT long *inStat,
	   OUT string statdescr<BOZO_BSSIZE>,
	   IN unsigned long size) = 83;


EnumerateInstance (IN long instance,
		   OUT string iname<BOZO_BSSIZE>) = 84;

GetInstanceInfo (IN string instance<BOZO_BSSIZE>,
		 OUT string type<BOZO_BSSIZE>,
		 OUT struct bozo_status *status) = 85;
		  
GetInstanceParm (IN string instance<BOZO_BSSIZE>,
		 IN long num,
		 OUT string parm<BOZO_BSSIZE>) = 86;

AddSUser (IN string name<BOZO_BSSIZE>) = 87;

DeleteSUser (IN string name<BOZO_BSSIZE>) = 88;

ListSUsers (IN long an,
	    OUT string name<BOZO_BSSIZE>) = 89;

ListKeys (IN long an,
	  OUT long *kvno,
	  OUT struct bozo_key *key,
	  OUT struct bozo_keyInfo *keinfo) = 90;

AddKey (IN long an,
	IN struct bozo_key *key) = 91;

DeleteKey (IN long an) = 92;

SetCellName (IN string name<BOZO_BSSIZE>) = 93;

GetCellName (OUT string name<BOZO_BSSIZE>) = 94;

GetCellHost (IN long awhich,
	     OUT string name<BOZO_BSSIZE>) = 95;

AddCellHost (IN string name<BOZO_BSSIZE>) = 96;

DeleteCellHost (IN string name<BOZO_BSSIZE>) = 97;

SetTStatus (IN string instance<BOZO_BSSIZE>,
	    IN long status) = 98;

ShutdownAll () = 99;

RestartAll () = 100;

StartupAll () = 101;

SetNoAuthFlag (IN long flag) = 102;

ReBozo () = 103;

Restart (IN string instance<BOZO_BSSIZE>) = 104;

Install (IN string path<BOZO_BSSIZE>,
	 IN long size,
	 IN long flags,
	 IN long date) split = 105;

UnInstall (IN string path<BOZO_BSSIZE>) = 106;

GetDates (IN string path<BOZO_BSSIZE>,
	  OUT long *newtime,
	  OUT long *baktime,
	  OUT long *oldtime) = 107;


Exec (IN string cmd<BOZO_BSSIZE>) = 108;

Prune (IN long flags) = 109;

SetRestartTime (IN long type,
		IN struct bozo_netKTime *restartTime) = 110;



GetRestartTime (IN long type,
		OUT struct bozo_netKTime *restartTime) = 111;

GetLog(IN string name<BOZO_BSSIZE>) split = 112;

WaitAll () =  113;

GetInstanceStrings (IN string instance<BOZO_BSSIZE>,
		    OUT string errorname<BOZO_BSSIZE>,
		    OUT string spare1<BOZO_BSSIZE>,
		    OUT string spare2<BOZO_BSSIZE>,
		    OUT string spare3<BOZO_BSSIZE>) = 114;

