OpenBSDInstallPrelude

dnl XXX uncomment and alter once there is floppy, cdrom or miniroot
dnl XXX available.
dnl There are several ways to install OpenBSD onto a disk. The easiest way
dnl in terms of preliminary setup is to use the OpenBSD miniroot that can
dnl be booted off your local disk's swap partition.   The normal way is to
dnl use the OpenBSD installation floppy.
dnl
dnl If your Sparc is hooked up in a network and you can find a server to
dnl arrange for a diskless setup, which is a convenient way to install on a
dnl machine whose disk does not currently hold a usable operating system.
dnl This is difficult to get set up correctly the first time, but easy to
dnl use afterwards.  (see ``Installing using a diskless setup'' below).
Currently, the only way to install OpenBSD/MACHINE is to use a diskless
setup, which is a convenient way to install on a machine whose disk does
not currently hold a usable operating system.
This is difficult to get set up correctly the first time, but easy to
use afterwards.  (see ``Installing using a diskless setup'' below).



Booting from the Installation Media:

Prior to attempting an installation, you should make sure that everything
of value on the target system has been backed up.  While installing OpenBSD
does not necessarily wipe out all the partitions on the hard disk, errors
during the install process can have unforeseen consequences and you will
probably render the system unbootable if you start, but do not complete
the installation.  Having the installation media for the prior installation,
be it a Solaris or OpenBSD CD-ROM or OpenBSD install diskettes is good
insurance if you want to be able to "go back" for some reason.

After taking care of all that, bring your system down gracefully using
the shutdown(8) and/or halt(8) commands.  This will get you to the monitor
prompt.

dnl XXX no floppy available yet
dnl Booting from Floppy Disk installation media:
dnl
dnl        ok boot floppy bsd
dnl
dnl This will cause the kernel contained in the floppy to be booted.
dnl
dnl After the initial device probe messages you'll asked to start the
dnl install or upgrade procedure. Proceed to the section ``Running the
dnl installation scripts'' below.
dnl 
dnl
dnl
dnl XXX no cdrom release yet
dnl Booting From CD-ROM installation media:
dnl 
dnl	ok boot cdrom OSREV/MACHINE/bsd.rd
dnl
dnl If the boot is successful, you will get a loader version message,
dnl executable sizes and then the Kernel copyright and device probe
dnl messages.  Boot failure modes are typically a lot of CD-ROM drive
dnl activity, but no messages or complaints about magic numbers,
dnl checksums or formats.
dnl
dnl After the initial device probe messages you'll asked to start the
dnl install or upgrade procedure. Proceed to the section ``Running the
dnl installation scripts'' below.
dnl
dnl
dnl
dnl XXX no miniroot filesystem yet
dnl Booting from disk (miniroot or floppy image):
dnl
dnl Boot the miniroot by typing the appropriate command at the PROM:
dnl
dnl	ok boot disk:b bsd
dnl
dnl If you've loaded the miniroot onto some other disk than the default
dnl drive 0, modify the boot specifier accordingly, keeping in mind the
dnl drive vs. scsi-id shuffling and partition a=0, b=1... 
dnl
dnl	ok boot disk1:b bsd     # example - scsi target 1 or
dnl				# second ide drive
dnl
dnl This will cause the kernel contained in the miniroot to be booted.
dnl After the initial device probe messages you'll asked to start the
dnl install or upgrade procedure. Proceed to the section ``Running the
dnl installation scripts'' below.
dnl

Installing using a diskless setup:

First, you must setup a diskless client configuration on a server. If
you are using a OpenBSD system as the boot-server, have a look at the
diskless(8) manual page for guidelines on how to proceed with this.
If the server runs another operating system, you'll have to consult
documentation that came with it (on SunOS systems, add_client(8) and
the Sun System/Networks administrators guide constitute a good start).


Boot your workstation from the server by entering the appropriate `boot'
command at the monitor prompt:

	ok boot net bsd.rd

This will cause the kernel provided by the diskless setup to be booted.
After the initial probe messages you'll asked to start the install
or upgrade procedure. Proceed to the section ``Running the installation
scripts'' below.


dnl XXX Update title when installation media becomes available.
dnl Installing using the Floppy, CD-ROM, miniroot or netboot procedure:
Installing using the netboot procedure:

OpenBSDInstallPart2

	Boot your machine from the installation media as described above.

	It will take a while to load the kernel especially from a floppy
	or slow network connection, most likely more than a minute.  If
	some action doesn't eventually happen, or the spinning cursor has
	stopped and nothing further has happened, either your boot media
	is bad, your diskless setup isn't correct, or you may have
	a hardware or configuration problem.

OpenBSDBootMsgs

dnl XXX Uncomment when floppy boot available
dnl	While booting, you will probably see several warnings.  You
dnl	may be warned that the kernel can't figure out what device
dnl	it booted from.  Do not be alarmed, this is completely normal.
dnl	This warning occurs because while OpenBSD/MACHINE can boot from
dnl	the floppy drive, the kernel itself lacks a floppy driver for some
dnl	MACHINE models.

	You will next be asked for your terminal type.  If you are
	installing from a keyboard/monitor console, the default of
	"sun" if correct.  If you are installing from a serial console
	you should choose the terminal type from amongst those listed.
	(If your terminal type is xterm, just use vt100).

	After entering the terminal type you will be asked whether you
	wish to do an "(I)nstall" or an "(U)pgrade".  Enter 'I' for a
	fresh install or 'U' to upgrade an existing installation.

	You will be presented with a welcome message and asked if
	you really want to continue. Assuming you answered yes, the
	install program will then tell you which disks of that type
	it can install on, and ask you which it should use.  The name
	of the disk is typically "sd0" for SCSI drives and "wd0" for
	IDE drives. Reply with the name of your disk.

	Next you will have to edit or create a disklabel for the disk
	OpenBSD is being installed on.  The installation script will
	invoke the text editor allowing you to do this.  Note that
	partition 'c' inside this disk label should ALWAYS reflect the
	entire disk, including any non-OpenBSD portions.  The root file
	system should be in partition 'a', and swap is usually in partition
	'b'.  It is recommended that you create separate partitions for
	root and /usr, you may also want to specify /var and /home
	partitions.

	The swap partition (usually 'b') should have a type of "swap", all
	other native OpenBSD partitions should have a type of "4.2BSD".
	Block and fragment sizes are usually 8192 and 1024 bytes, but can
	also be 16384 and 2048 bytes.

	The install program will now label your disk and ask which file
	systems should be created on which partitions.  It will auto-
	matically select the 'a' partition to be the root file system.
	Next it will ask for which disk and partition you want a file
	system created on.  This will be the same as the disk name (e.g.
	"sd0") with the letter identifying the partition (e.g. "d")
	appended (e.g. "sd0d").  Then it will ask where this partition is
	to be mounted, e.g. /usr.  This process will be repeated until
	you type "done".

	At this point you will be asked to confirm that the file system
	information you have entered is correct, and given an opportunity
	to change the file system table.  Next it will create the new file
	systems as specified, OVERWRITING ANY EXISTING DATA.  This is the
	point of no return.

	After all your file systems have been created, the install program
	will give you an opportunity to configure the network.  The network
	configuration you enter (if any) can then be used to do the install
	from another system using NFS, HTTP or FTP, and will also be the
	configuration used by the system after the installation is complete.

	If you select to configure the network, the install program will
	ask you for a name of your system and the DNS domain name to use.
	Note that the host name should be without the domain part, and that
	the domain name should NOT {:-include-:} the host name part.

	Next the system will give you a list of network interfaces you can
	configure.  For each network interface you select to configure, it
	will ask for the IP address to use, the symbolic host name to use,
	the netmask to use and any media flags to set. It is usually safe
	to keep the default settings.

	After all network interfaces have been configured the install pro-
	gram will ask for a default route and IP address of the primary
	name server to use.  You will also be presented with an opportunity
	to edit the host table.

	At this point you will be allowed to edit the file system table
	that will be used for the remainder of the installation and that
	will be used by the finished system, following which the new file
	systems will be mounted to complete the installation.

	After these preparatory steps has been completed, you will be
	able to extract the distribution sets onto your system.  There
	are several install methods supported; FTP, HTTP, CD-ROM, NFS
	or a local disk partition.  To install from a tape, the distrib-
	ution sets must have been written to tape prior to running the
	installation program, either as tar images or as gzipped tar
	images.  Note that installation sets on multiple floppies is not
	currently supported.

OpenBSDFTPInstall

OpenBSDHTTPInstall

OpenBSDTAPEInstall

OpenBSDCDROMInstall
		
OpenBSDNFSInstall

OpenBSDDISKInstall({:-"wdN" or -:},{:-only -:})

OpenBSDCommonFS
		
OpenBSDCommonURL

After completing an installation:

Now try a reboot.  (If needed, swap your scsi id's first).  Initially
I'd suggest you "boot sd()bsd -bs", then try multiuser after that.
if you boot single-user the OpenBSD incantation to make the root
filesystem writable is

    OpenBSD# mount -u /dev/sd0a /

The Sun monitor normally tries to load a file called "vmunix".   
On OpenBOOT ROM systems you can change it to load OpenBSD instead using
the following commands:

    ok setenv boot-file bsd


OpenBSDCongratulations

If you will be running your OpenBSD system from a serial console, you may
need to edit /etc/ttys and change the terminal type, and getty method from
"sun" and "suncons" to "vt100" and "std.9600" or something similar.  Also
when running from a serial console, you may wish to adjust the eeprom
settings for input-device, output-device, screen-#columns, and screen-#rows
as appropriate.  

In order to use 'tip' on OpenBSD/MACHINE, you'll need to edit /etc/ttys
and add "local" to the end of the tty configuration line, and run 
'ttyflags -a' to put your changes into effect.

If you are unfamiliar with UN*X-like system administration, 
it's recommended that you buy a book that discusses it.



Net Boot or Diskless Setup Information:

The set up is similar to the diskless setup, but not identical, because
the Sun setup assumes that the bootblocks load a kernel image, which then
uses NFS to access the exported root partition, while the OpenBSD bootblocks
use internal NFS routines to load the kernel image directly from the
exported root partition.

Please understand that no one gets this right the first try, since
there is a lot of setup and all the host daemons must be running and
configured correctly.  If you have problems, extract the diskless(8)
manpage, find someone who's been through it before and use the host
syslog and tcpdump(8) to get visibility of what's happening (or not).

Your UltraSPARC expects to be able to download a second stage bootstrap
program via TFTP after having acquired its IP address through RevARP when
instructed to boot "over the net". It will look for a filename composed of
the machine's IP address. For example, a machine which has been assigned IP
address 130.115.144.11, will make an TFTP request for `8273900B'.
Normally, this file is a symbolic link to an appropriate second-stage
boot program, which should be located in a place where the TFTP daemon
can find it (remember, many TFTP daemons run in a chroot'ed environment).

You can find the boot program in `/usr/mdec/boot' in the OpenBSD/MACHINE
distribution.

After the boot program has been loaded into memory and given control by
the PROM, it starts locating the machine's remote root directory through
the BOOTPARAM protocol. First a BOOTPARAM WHOAMI request is broadcast
on the local net. The answer to this request (if it comes in) contains
the client's name. This name is used in next step, a BOOTPARAM GETFILE
request -- sent to the server that responded to the WHOAMI request --
requesting the name and address of the machine that will serve the client's
root directory, as well as the path of the client's root on that server.

Finally, this information (if it comes in) is used to issue a REMOTE MOUNT
request to the client's root filesystem server, asking for an NFS file
handle corresponding to the root filesystem. If successful, the boot
program starts reading from the remote root filesystem in search of the
kernel which is then read into memory.

You will want export the miniroot{:--:}OSrev.fs filesystem to the client.  You
can dd this filesystem image to some spare partition, mount and export
that partition or use tar to copy the contents to a more convenient spot.

Alternatively you can build a bootable partition from the distribution sets
as follows:

Unpack `base{:--:}OSrev.tgz' and `etc{:--:}OSrev.tgz' on the server in the root directory
for your target machine. If you elect to use a separately NFS-mounted
filesystem for `/usr' with your diskless setup, make sure the "./usr" base
files in base{:--:}OSrev.tgz end up in the correct location. One way to do this is
to temporarily use a loopback mount on the server, re-routing <root>/usr to
your server's exported OpenBSD "/usr" directory. Also put the kernel and
the install/upgrade scripts into the root directory.

A few configuration files need to be edited:

	<root>/etc/hosts
		Add the IP addresses of both server and client.

	<root>/etc/myname
		This files contains the client's hostname; use the same
		name as in <root>/etc/hosts.

	<root>/etc/fstab
		Enter the entries for the remotely mounted filesystems.
		For example:
			server:/export/root/client       /     nfs  rw 0 0
			server:/export/exec/MACHINE.OpenBSD /usr  nfs  rw 0 0

Now you must populate the the `/dev' directory for your client. If you server
runs SunOS 4.x, you can simply change your working directory to `<root>/dev'
and run the MAKEDEV script: `sh MAKEDEV all'.

On Solaris (SunOS 5.x) systems, MAKEDEV can also be used, but there'll be
error messages about unknown user and groups. These errors are
inconsequential for the purpose of installing OpenBSD. However, you may
want to correct them if you plan to the diskless setup regularly. In that
case, you may re-run MAKEDEV on your OpenBSD machine once it has booted.

