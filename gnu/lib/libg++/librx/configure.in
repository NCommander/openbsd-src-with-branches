dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.5)
AC_INIT(rx.c)

AC_ARG_ENABLE(shared,
[  --enable-shared         build shared BFD library],
[case "${enableval}" in
  yes) shared=yes ;;
  no)  shared=no ;;
  *librx*) shared=yes ;;
  *) shared=no ;;
esac])dnl

if test "${srcdir}" = "." ; then
  if test "${with_target_subdir}" != "." ; then
    librx_topdir="${srcdir}/${with_multisrctop}../.."
  else
    librx_topdir="${srcdir}/${with_multisrctop}.."
  fi
else
  librx_topdir="${srcdir}/.."
fi
AC_CONFIG_AUX_DIR($librx_topdir)

AC_PROG_CC
AC_PROG_CPP
AC_PROG_RANLIB
AC_PROG_INSTALL

dnl Check for gcc explicitly in case the linker does not work when
dnl using a cross compiler.
if test "${GCC}" = "yes"; then
  AC_DEFINE(HAVE_ALLOCA)
else
  AC_FUNC_ALLOCA
fi
AC_STDC_HEADERS
AC_HAVE_HEADERS(string.h)

AC_CANONICAL_SYSTEM
AC_MSG_CHECKING([for target makefile fragment])
target_frag=
if test "${shared}" = "yes" ; then
  case "${target}" in
    hppa*-*-*)		target_frag=../config/mh-papic ;;
    i[3456]86-*-*)	target_frag=../config/mh-x86pic ;;
    *-*-*) 		target_frag=../config/mh-${target_cpu}pic ;;
  esac
  target_frag=${srcdir}/${target_frag}
fi
if test ! -f "${target_frag}"; then
  target_frag=/dev/null
  AC_MSG_RESULT(none)
else
  AC_MSG_RESULT(${target_frag})
fi
AC_SUBST_FILE(target_frag)

AC_OUTPUT(Makefile,
. ${librx_topdir}/config-ml.in,
srcdir=${srcdir}
target=${target}
ac_configure_args="${ac_configure_args}"
CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}
librx_topdir=${librx_topdir}
)
