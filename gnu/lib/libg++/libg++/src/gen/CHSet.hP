// This may look like C code, but it is really -*- C++ -*-
/* 
Copyright (C) 1988 Free Software Foundation
    written by Doug Lea (dl@rocky.oswego.edu)

This file is part of the GNU C++ Library.  This library is free
software; you can redistribute it and/or modify it under the terms of
the GNU Library General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your
option) any later version.  This library is distributed in the hope
that it will be useful, but WITHOUT ANY WARRANTY; without even the
implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.  See the GNU Library General Public License for more details.
You should have received a copy of the GNU Library General Public
License along with this library; if not, write to the Free Software
Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
*/


#ifndef _<T>CHSet_h
#ifdef __GNUG__
#pragma interface
#endif
#define _<T>CHSet_h 1

#include "<T>.Set.h"
#include "<T>.CHNode.h"

class <T>CHSet : public <T>Set
{
protected:
  <T>CHNode**   tab;
  unsigned int  size;

public:
                <T>CHSet(unsigned int sz = DEFAULT_INITIAL_CAPACITY);
                <T>CHSet(<T>CHSet& a);
  inline               ~<T>CHSet();

  Pix           add(<T&> item);
  void          del(<T&> item);
  inline int           contains(<T&> item);

  void          clear();

  Pix           first();
  void          next(Pix& i);
  inline <T>&          operator () (Pix i);
  Pix           seek(<T&> item);

  void          operator |= (<T>CHSet& b);
  void          operator -= (<T>CHSet& b);
  void          operator &= (<T>CHSet& b);

  int           operator == (<T>CHSet& b);
  int           operator != (<T>CHSet& b);
  int           operator <= (<T>CHSet& b); 

  int           OK();
};

inline <T>CHSet::~<T>CHSet()
{
  clear();
  delete tab;
}

inline int <T>CHSet::contains(<T&> key)
{
  return seek(key) != 0;
}

inline <T>& <T>CHSet::operator () (Pix i)
{
  if (i == 0) error("null Pix");
  return ((<T>CHNode*)i)->hd;
}

inline int <T>CHSet::operator != (<T>CHSet& b)
{
  return ! ((*this) == b);
}

#endif
