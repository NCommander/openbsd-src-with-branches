// This may look like C code, but it is really -*- C++ -*-
/* 
Copyright (C) 1988 Free Software Foundation
    written by Doug Lea (dl@rocky.oswego.edu)

This file is part of the GNU C++ Library.  This library is free
software; you can redistribute it and/or modify it under the terms of
the GNU Library General Public License as published by the Free
Software Foundation; either version 2 of the License, or (at your
option) any later version.  This library is distributed in the hope
that it will be useful, but WITHOUT ANY WARRANTY; without even the
implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
PURPOSE.  See the GNU Library General Public License for more details.
You should have received a copy of the GNU Library General Public
License along with this library; if not, write to the Free Software
Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
*/


#ifndef _<T>VHBag_h
#ifdef __GNUG__
#pragma interface
#endif
#define _<T>VHBag_h 1

#include "<T>.Bag.h"


class <T>VHBag : public <T>Bag
{
protected:
  <T>*          tab;
  char*         status;
  unsigned int  size;

public:
                <T>VHBag(unsigned int sz = DEFAULT_INITIAL_CAPACITY);
                <T>VHBag(<T>VHBag& a);
  inline               ~<T>VHBag();

  Pix           add(<T&> item);
  void          del(<T&> item);
  void          remove(<T&>item);
  int           nof(<T&> item);
  inline int           contains(<T&> item);

  void          clear();

  Pix           first();
  void          next(Pix& i);
  inline <T>&          operator () (Pix i);
  Pix           seek(<T&> item, Pix from = 0);

  int           capacity();
  void          resize(unsigned int newsize = 0);

  int           OK();
};


inline <T>VHBag::~<T>VHBag()
{
  delete [] tab;
  delete status;
}


inline int <T>VHBag::capacity()
{
  return size;
}

inline int <T>VHBag::contains(<T&> key)
{
  return seek(key) != 0;
}

inline <T>& <T>VHBag::operator () (Pix i)
{
  if (i == 0) error("null Pix");
  return *((<T>*)i);
}

#endif
