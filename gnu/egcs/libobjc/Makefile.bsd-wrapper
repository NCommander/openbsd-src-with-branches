#	$OpenBSD: Makefile.bsd-wrapper,v 1.9 1998/09/20 03:27:18 millert Exp $

LIB=		objc

#CXXFLAGS+=	-fno-implicit-templates
#CPPFLAGS+=	-I$(.CURDIR) -I$(.CURDIR)/stl -I$(.CURDIR)/../libio -I$(IO_OBJDIR)
#LDADD+=		-lm

EGCS_DIR= $(.CURDIR)/..
.if defined(OBJMACHINE)
OBJDIR=	obj.${MACHINE}
.else
OBJDIR=	obj
.endif
EGCS_OBJDIR!=	if [ -d $(EGCS_DIR)/$(OBJDIR) ]; then \
			echo $(EGCS_DIR)/$(OBJDIR); \
		else \
			echo $(EGCS_DIR); \
		fi

CPPFLAGS+= -I. -I$(.CURDIR) -I$(.CURDIR)/objc  -I$(.CURDIR)/../gcc \
-I$(.CURDIR)/../gcc/config  -I$(EGCS_OBJDIR)/gcc -I$(.CURDIR)/../include \
-DIN_GCC

SRCS=archive.c class.c encoding.c gc.c hash.c init.c linking.m misc.c \
nil_method.c NXConstStr.m Object.m objects.c Protocol.m sarray.c  \
selector.c sendmsg.c thr.c thr-single.c

CLEANFILES= config.cache config.status config.log Makefile runtime-info.h
#CFLAGS+=-save-temps


includes:
	install -d -m 755 -o $(BINOWN) -g $(BINGRP) \
		$(DESTDIR)/usr/include/objc
	@-cd $(.CURDIR)/objc; for i in *.h; do \
		[ $$i = "runtime.h" ] || install -C -o $(BINOWN) -g $(BINGRP) -m $(NONBINMODE) \
				$$i $(DESTDIR)/usr/include/objc/$$i; \
	done
	

all: config.status

depend: 
	cd ${.CURDIR}/../gcc && make -f Makefile.bsd-wrapper config.status target_path

sendmsg.o sengmsg.po sendmsg.so: runtime-info.h

runtime-info.h:
		echo "" > tmp-runtime
		echo "/* This file is automatically generated */" > $@
		`cat $(EGCS_OBJDIR)/gcc/target_path`/cc1obj -print-objc-runtime-info tmp-runtime >> $@
		rm -f tmp-runtime

config.status: Makefile.in configure 
	cd $(EGCS_OBJDIR)/gcc && touch cc1obj
	PATH="/bin:/usr/bin:/sbin:/usr/sbin" \
	INSTALL_PROGRAM="${INSTALL} ${INSTALL_COPY} ${INSTALL_STRIP}" \
	r=$(EGCS_OBJDIR) \
	/bin/sh ${.CURDIR}/configure \
		--prefix=/usr --with-local-prefix=/usr ${CF} \
		&& touch config.status

.include <bsd.lib.mk>
.SUFFIXES: .m
COMPILE.m=${COMPILE.c} -fgnu-runtime

gc.o: gc.c
	@echo "${COMPILE.m} ${.IMPSRC} -o ${.TARGET}"
	@${COMPILE.m} ${.IMPSRC}  -o ${.TARGET}.o
	@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
	@rm -f ${.TARGET}.o
	
gc.po: gc.c
	@echo "${COMPILE.m} -p ${.IMPSRC} -o ${.TARGET}"
	@${COMPILE.m} -p ${.IMPSRC} -o ${.TARGET}.o
	@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	@rm -f ${.TARGET}.o

gc.so: gc.c
	@echo "${COMPILE.m} ${PICFLAG} -DPIC ${.IMPSRC} -o ${.TARGET}"
	@${COMPILE.m} ${PICFLAG} -DPIC ${.IMPSRC} -o ${.TARGET}.o
	@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
	@rm -f ${.TARGET}.o

.m.o:
	@echo "${COMPILE.m} ${.IMPSRC} -o ${.TARGET}"
	@${COMPILE.m} ${.IMPSRC}  -o ${.TARGET}.o
	@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
	@rm -f ${.TARGET}.o

.m.po:
	@echo "${COMPILE.m} -p ${.IMPSRC} -o ${.TARGET}"
	@${COMPILE.m} -p ${.IMPSRC} -o ${.TARGET}.o
	@${LD} -X -r ${.TARGET}.o -o ${.TARGET}
	@rm -f ${.TARGET}.o

.m.so:
	@echo "${COMPILE.m} ${PICFLAG} -DPIC ${.IMPSRC} -o ${.TARGET}"
	@${COMPILE.m} ${PICFLAG} -DPIC ${.IMPSRC} -o ${.TARGET}.o
	@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
	@rm -f ${.TARGET}.o

