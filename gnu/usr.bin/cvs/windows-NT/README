	           Concurrent Versions System (CVS)
		    ported to Microsoft Windows NT
			   Cyclic Software

Check the ../INSTALL file for information on the most recent version
of CVS which has been known to be tested with NT.

The port implements the full set of CVS commands, but is client only,
not server or local ("local" meaning accessing repositories on a
filesystem mounted on the local machine).  The repository must live on
another machine (a Unix box, say) which runs a complete port of CVS.

We don't distribute a .ZIP source distribution partly because, as far
as I can tell, PKZIP insists on munging long file names, which would
confuse the makefile for Visual C++.

To compile, use Microsoft Visual C++ on the file cvsnt.mak in the
distribution's top directory.  At least with the tar port I'm using,
the sources get extracted without carriage returns and you must add
carriage returns to the end of every line in cvsnt.mak.  It doesn't
seem to be necessary to add them to any other file.  This has been
tested with Visual C++ 2.1.  Visual C++ 4.0 apparently requires one to
remove some quotation marks from cvsnt.mak (around save-cwd.c,
save-cwd.sbr, and save-cwd.obj).

Send bug reports to bug-cvs@prep.ai.mit.edu.

As of August 20, 1995, this port passed the test in src/sanity.sh.
(We ran the checks by hand, since we couldn't find a port of the
Bourne shell good enough to execute the script).  Sanity.sh provides
pretty minimal feature coverage, but still gives me some confidence it
isn't totally broken.

You will also need GNU patch installed on your system.  GZIP is useful
but not required.  The Congruent ports of these packages to Windows
NT, binary and source, are available in:

	ftp://microlib.cc.utexas.edu/microlib/nt/gnu

If you'd like to finish off the port of local CVS, Morten Hindsholm's
port of CVS 1.4A2 to Windows NT might be helpful; it is available as

	ftp://ftp.digex.net/pub/access/schueman/cvs/cvsnt14b.zip


The following harmless warnings are known:

- regex.c: These are signed/unsigned comparison conflicts.  I am not
  going to *touch* this code. :-) I got my fill of it when I was
  hacking GNU Emacs.
.\lib\getdate.c(760) : warning C4013: 'getdate_yyparse' undefined; assuming extern returning int
.\lib\getdate.c(1612) : warning C4102: 'yyerrlab' : unreferenced label
.\lib\getdate.c(1612) : warning C4102: 'yynewstate' : unreferenced label
