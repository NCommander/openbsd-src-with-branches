# Copyright (c) 1995-1996 Sun Microsystems, Inc.
# SCCS: @(#) makefile.vc 1.39 96/03/26 12:55:24
#
# Visual C++ 2.x and 4.0 makefile
#

#
# Project directories
#
# ROOT    = top of source tree
# TMPDIR  = location where .obj files should be stored during build
# TOOLS32 = location of VC++ 32-bit development tools, note that the
#	    VC++ 2.0 header files are broken, so you need to use the
#	    ones that come with the developer network CD's, or later
#	    versions of VC++.
# TOOLS16 = location of VC++ 1.5 16-bit tools, needed to build thunking
#	    library
#

ROOT	= ..
TMPDIR	= .
TOOLS32	= c:\msdev
TOOLS16 = c:\msvc

# Comment the following line to compile with symbols
NODEBUG=1

# uncomment the following two lines to compile with TCL_MEM_DEBUG
#DEBUGDEFINES	=-DTCL_MEM_DEBUG

# Make sure the VC++ tools are at the head of the path
PATH=$(TOOLS32)\bin;$(PATH)

WINDIR          = $(ROOT)\win
GENERICDIR	= $(ROOT)\generic
XLIBDIR		= $(ROOT)\xlib

cc32 = $(TOOLS32)\bin\cl -I$(TOOLS32)\include
rc32 = $(TOOLS32)\bin\rc

cc16 = $(TOOLS16)\bin\cl -I$(TOOLS16)\include
link16 = $(TOOLS16)\bin\link
rc16 = $(TOOLS16)\bin\rc

TCL_INCLUDES = -I$(TOOLS32)\include -I$(ROOT)\win -I$(ROOT)\generic

TCL_DEFINES = \
    -nologo $(DEBUGDEFINES)
  
TCLSHOBJS = \
	$(TMPDIR)\tclAppInit.obj

TCLTESTOBJS = \
	$(TMPDIR)\tclTest.obj \
	$(TMPDIR)\tclWinTest.obj \
	$(TMPDIR)\testMain.obj

TCLOBJS = \
	$(TMPDIR)\panic.obj \
	$(TMPDIR)\regexp.obj \
	$(TMPDIR)\tclAsync.obj \
	$(TMPDIR)\tclBasic.obj \
	$(TMPDIR)\tclCkalloc.obj \
	$(TMPDIR)\tclClock.obj \
	$(TMPDIR)\tclCmdAH.obj \
	$(TMPDIR)\tclCmdIL.obj \
	$(TMPDIR)\tclCmdMZ.obj \
	$(TMPDIR)\tclDate.obj \
	$(TMPDIR)\tclEnv.obj \
	$(TMPDIR)\tclEvent.obj \
	$(TMPDIR)\tclExpr.obj \
	$(TMPDIR)\tclFHandle.obj \
	$(TMPDIR)\tclFileName.obj \
	$(TMPDIR)\tclGet.obj \
	$(TMPDIR)\tclHash.obj \
	$(TMPDIR)\tclHistory.obj \
	$(TMPDIR)\tclIO.obj \
	$(TMPDIR)\tclIOCmd.obj \
	$(TMPDIR)\tclIOSock.obj \
	$(TMPDIR)\tclIOUtil.obj \
	$(TMPDIR)\tclInterp.obj \
	$(TMPDIR)\tclLink.obj \
	$(TMPDIR)\tclLoad.obj \
	$(TMPDIR)\tclMain.obj \
	$(TMPDIR)\tclNotify.obj \
	$(TMPDIR)\tclParse.obj \
	$(TMPDIR)\tclPkg.obj \
	$(TMPDIR)\tclPosixStr.obj \
	$(TMPDIR)\tclPreserve.obj \
	$(TMPDIR)\tclProc.obj \
	$(TMPDIR)\tclUtil.obj \
	$(TMPDIR)\tclVar.obj \
	$(TMPDIR)\tclWin32Dll.obj \
	$(TMPDIR)\tclWinChan.obj \
	$(TMPDIR)\tclWinError.obj \
	$(TMPDIR)\tclWinFile.obj \
	$(TMPDIR)\tclWinInit.obj \
	$(TMPDIR)\tclWinLoad.obj \
	$(TMPDIR)\tclWinMtherr.obj \
	$(TMPDIR)\tclWinNotify.obj \
	$(TMPDIR)\tclWinPipe.obj \
	$(TMPDIR)\tclWinSock.obj \
	$(TMPDIR)\tclWinTime.obj \
	$(TMPDIR)\tclWinUtil.obj \

TCL16OBJS = $(TMPDIR)\tclWin16.obj

DUMPEXTSOBJS = $(TMPDIR)\winDumpExts.obj

TCLLIB = tcl75.lib
TCLDLL = tcl75.dll
TCL16DLL = tcl1675.dll
TCLSH = tclsh75.exe
TCLTEST = tcltest.exe
DUMPEXTS = dumpexts.exe

CPU=i386
CP=copy

!include    <ntwin32.mak>

#
# Targets
#

all:  $(DUMPEXTS) $(TCLDLL) $(TCLSH) 
release: $(DUMPEXTS) $(TCLDLL) $(TCL16DLL) $(TCLSH) 
test:  $(DUMPEXTS) $(TCLDLL) $(TCLTEST) 

tclvc.def: dumpexts.exe $(TCLOBJS)
	dumpexts.exe -o $@ $(TCLDLL) @<<
	$(TCLOBJS)
<<

dumpexts.exe: $(DUMPEXTSOBJS)
	$(link) $(conlflags) -out:dumpexts.exe $(DUMPEXTSOBJS) \
		$(guilibs) $(libc)

$(TCLDLL): $(TCLOBJS) tclvc.def $(TMPDIR)\tcl.res
        $(link) $(linkdebug) $(dlllflags) -def:tclvc.def \
		$(TMPDIR)\tcl.res $(guilibsdll) -out:$(TCLDLL) @<<
		$(TCLOBJS)
<<

$(TCL16DLL): $(TCL16OBJS) tcl16.rc
	$(link16) @<<,$@,,$(TOOLS16)\lib\ sdllcew oldnames libw toolhelp,<<
		$(TCL16OBJS)
<<
LIBRARY $(@B);dll
EXETYPE WINDOWS
CODE PRELOAD MOVEABLE DISCARDABLE
DATA PRELOAD MOVEABLE SINGLE
HEAPSIZE 1024
<<
	$(rc16) -i $(ROOT)\generic tcl16.rc $@


$(TCLSH): $(TCLSHOBJS) $(TCLLIB) $(TMPDIR)\tclsh.res
	$(link) $(linkdebug) $(conlflags) \
		$(TCLSHOBJS) $(TMPDIR)\tclsh.res $(TCLLIB) $(conlibsdll) \
		-out:$(TCLSH)

$(TCLTEST): $(TCLTESTOBJS) $(TCLLIB)
	$(link) $(linkdebug) $(conlflags) \
		$(TCLTESTOBJS) $(TCLLIB) $(conlibsdll) \
		-out:$(TCLTEST)

$(ROOT)\generic\patchlvl.h: $(ROOT)\generic\patchlevel.h
	$(CP) $(ROOT)\generic\patchlevel.h $(ROOT)\generic\patchlvl.h

#
# Special case object file targets
#

$(TMPDIR)\testMain.obj: $(ROOT)\win\tclAppInit.c
	$(cc32) $(cdebug) $(cflags) $(cvarsdll) $(TCL_INCLUDES) \
        	$(TCL_DEFINES) -DTCL_TEST -Fo$(TMPDIR)\testMain.obj $?

$(TMPDIR)\winDumpExts.obj: $(ROOT)\win\winDumpExts.c
	$(cc32) $(cdebug) $(cflags) $(cvars) $(TCL_INCLUDES) \
        	$(TCL_DEFINES) -Fo$(TMPDIR)\ $?

$(TMPDIR)\tclWin16.obj: $(ROOT)\win\tclWin16.c
	$(cc16) -c -Fo$(TMPDIR)\ $?

#
# Implicit rules
#

{$(ROOT)\generic}.c{$(TMPDIR)}.obj:
    $(cc32) $(cdebug) $(cflags) $(cvarsdll) $(TCL_INCLUDES) \
          $(TCL_DEFINES) -Fo$(TMPDIR)\ $<

{$(ROOT)\win}.c{$(TMPDIR)}.obj:
    $(cc32) $(cdebug) $(cflags) $(cvarsdll) $(TCL_INCLUDES) \
          $(TCL_DEFINES) -Fo$(TMPDIR)\ $<

{$(ROOT)\win}.rc{$(TMPDIR)}.res:
	$(rc32) -fo $@ -r -i $(ROOT)\generic -i $(ROOT)\win $<

clean:
        -del *.exp *.lib *.dll *.exe
        -del $(TMPDIR)\*.obj
