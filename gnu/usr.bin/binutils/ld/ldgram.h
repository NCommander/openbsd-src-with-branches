typedef union {
  bfd_vma integer;
  char *name;
  int token;
  union etree_union *etree;
} YYSTYPE;
#define	INT	258
#define	NAME	259
#define	LNAME	260
#define	PLUSEQ	261
#define	MINUSEQ	262
#define	MULTEQ	263
#define	DIVEQ	264
#define	LSHIFTEQ	265
#define	RSHIFTEQ	266
#define	ANDEQ	267
#define	OREQ	268
#define	OROR	269
#define	ANDAND	270
#define	EQ	271
#define	NE	272
#define	LE	273
#define	GE	274
#define	LSHIFT	275
#define	RSHIFT	276
#define	UNARY	277
#define	END	278
#define	ALIGN_K	279
#define	BLOCK	280
#define	QUAD	281
#define	LONG	282
#define	SHORT	283
#define	BYTE	284
#define	SECTIONS	285
#define	SIZEOF_HEADERS	286
#define	OUTPUT_FORMAT	287
#define	FORCE_COMMON_ALLOCATION	288
#define	OUTPUT_ARCH	289
#define	INCLUDE	290
#define	MEMORY	291
#define	DEFSYMEND	292
#define	NOLOAD	293
#define	DSECT	294
#define	COPY	295
#define	INFO	296
#define	OVERLAY	297
#define	DEFINED	298
#define	TARGET_K	299
#define	SEARCH_DIR	300
#define	MAP	301
#define	ENTRY	302
#define	SIZEOF	303
#define	NEXT	304
#define	ADDR	305
#define	STARTUP	306
#define	HLL	307
#define	SYSLIB	308
#define	FLOAT	309
#define	NOFLOAT	310
#define	ORIGIN	311
#define	FILL	312
#define	LENGTH	313
#define	CREATE_OBJECT_SYMBOLS	314
#define	INPUT	315
#define	GROUP	316
#define	OUTPUT	317
#define	CONSTRUCTORS	318
#define	ALIGNMOD	319
#define	AT	320
#define	PROVIDE	321
#define	CHIP	322
#define	LIST	323
#define	SECT	324
#define	ABSOLUTE	325
#define	LOAD	326
#define	NEWLINE	327
#define	ENDWORD	328
#define	ORDER	329
#define	NAMEWORD	330
#define	FORMAT	331
#define	PUBLIC	332
#define	BASE	333
#define	ALIAS	334
#define	TRUNCATE	335
#define	REL	336
#define	INPUT_SCRIPT	337
#define	INPUT_MRI_SCRIPT	338
#define	INPUT_DEFSYM	339
#define	CASE	340
#define	EXTERN	341
#define	START	342


extern YYSTYPE yylval;
