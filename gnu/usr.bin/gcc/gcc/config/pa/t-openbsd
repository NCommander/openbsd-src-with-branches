#Plug millicode routines into libgcc.a  We want these on both native and
#cross compiles.  We use the "64-bit" routines because the "32-bit" code
#is broken for certain corner cases.

LIB1ASMFUNCS = _divI _divU _remI _remU _div_const _mulI _dyncall
LIB1ASMSRC = pa/milli64.S

# Compile libgcc2.a as PIC.
TARGET_LIBGCC2_CFLAGS = -DELF=1 -DLINUX

# Don't build a shared libgcc_s.so.  Our libgcc contains millicode, and
# the ABI (linker and dynamic linker really) does not allow millicode
# to be exported from shared libraries.  Consequently, to successfully
# link against libgcc_s.so it is necessary to link against _both_
# libgcc_s.so and libgcc.a.  This is a pain.  It's easier just to disable
# the shared libgcc.
SHLIB_LINK =
