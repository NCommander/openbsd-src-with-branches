.\" Copyright (c) 1993 John Brezak
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. The name of the author may be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	$Id: insque.3,v 1.4 1995/01/13 01:16:12 jtc Exp $
.\"
.Dd August 12, 1993
.Dt INSQUE 3
.Sh NAME
.Nm insque ,
.Nm remque
.Nd insert/remove element from a queue
.Sh SYNOPSIS
.Fd #include <search.h>
.Ft struct qelem {
.br
.Ft 	struct qelem *q_forw;
.br
.Ft 	struct qelem *q_back;
.br
.Ft 	char q_data[];
.br
.Ft };
.br
.br
.Ft void 
.Fn insque "struct qelem *elem" "struct qelem *pred"
.Ft void
.Fn remque "struct qelem *elem"
.Sh DESCRIPTION
.Bf -symbolic
These interfaces are available from the compatibility library, libcompat.
.Ef
.Pp
.Fn insque
and
.Fn remque
manipulate queues built from doubly linked lists. Each element in the queue
must begin with a "struct qelem".
.Sh DIAGNOSTICS
These functions are not atomic unless that machine architecture allows it.
.Sh HISTORY
These are derived from the insque and remque instructions on a VAX.

