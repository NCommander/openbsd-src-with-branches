.TH curs_insstr 3X ""
.SH NAME
\fBinsstr\fR, \fBinsnstr\fR, \fBwinsstr\fR, \fBwinsnstr\fR,
\fBmvinsstr\fR, \fBmvinsnstr\fR, \fBmvwinsstr\fR, \fBmvwinsnstr\fR - insert
string before cursor in a \fBcurses\fR window
.SH SYNOPSIS
\fB#include <curses.h>\fR
.br
\fBint insstr(const char *str);\fR
.br
\fBint insnstr(const char *str, int n);\fR
.br
\fBint winsstr(WINDOW *win, const char *str);\fR
.br
\fBint winsnstr(WINDOW *win, const char *str, int n);\fR
.br
\fBint mvinsstr(int y, int x, const char *str);\fR
.br
\fBint mvinsnstr(int y, int x, const char *str, int n);\fR
.br
\fBint mvwinsstr(WINDOW *win, int y, int x, const char *str);\fR
.br
\fBint mvwinsnstr(WINDOW *win, int y, int x, const char *str, int n);\fR
.br
.SH DESCRIPTION
These routines insert a character string (as many characters as will fit on the
line) before the character under the cursor.  All characters to the right of
the cursor are shifted right, with the possibility of the rightmost characters
on the line being lost.  The cursor position does not change (after moving to
\fIy\fR, \fIx\fR, if specified). The four routines with \fIn\fR as the last
argument insert a leading substring of at most \fIn\fR characters.  If
\fIn\fR<=0, then the entire string is inserted.

If a character in \fIstr\fR is a tab, newline, carriage return or
backspace, the cursor is moved appropriately within the window.  A
newline also does a \fBclrtoeol\fR before moving.  Tabs are considered
to be at every eighth column.  If a character in \fIstr\fR is another
control character, it is drawn in the \fB^\fR\fIX\fR notation.
Calling \fBwinch\fR after adding a control character (and moving to
it, if necessary) does not return the control character, but instead
returns a character in the the ^-representation of the control character.
.SH RETURN VALUE
All routines that return an integer return \fBERR\fR upon failure and OK (SVr4
specifies only "an integer value other than \fBERR\fR") upon successful
completion, unless otherwise noted in the preceding routine descriptions.
.SH NOTES
Note that all but \fBwinsnstr\fR may be macros.
.SH PORTABILITY
These functions are described in the XSI Curses standard, Issue 4, which adds
const qualifiers to the arguments.  The XSI Curses error conditions
\fBEILSEQ\fR and \fBEILOVERFLOW\fR associated with extended-level conformance
are not yet detected (this implementation does not yet support XPG4 multibyte
characters).
.SH SEE ALSO
\fBcurses\fR(3X), \fBcurs_clear\fR(3X), \fBcurs_inch\fR(3X).
.\"#
.\"# The following sets edit modes for GNU EMACS
.\"# Local Variables:
.\"# mode:nroff
.\"# fill-column:79
.\"# End:
