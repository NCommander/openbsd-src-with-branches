.TH curs_scanw 3X ""
.SH NAME
\fBscanw\fR, \fBwscanw\fR, \fBmvscanw\fR,
\fBmvwscanw\fR, \fBvwscanw\fR - convert formatted input from a
\fBcurses\fR widow
.SH SYNOPSIS
\fB#include <curses.h>\fR

\fBint scanw(char *fmt\fR [\fB, arg\fR] \fB...);\fR
.br
\fBint wscanw(WINDOW *win, char *fmt\fR [\fB, arg\fR] \fB...);\fR
.br
\fBint mvscanw(int y, int x, char *fmt\fR [\fB, arg\fR] \fB...);\fR
.br
\fBint mvwscanw(WINDOW *win, int y, int x,
      char *fmt\fR [\fB, arg]\fR \fB...);\fR
.br
\fBint vwscanw(WINDOW *win, char *fmt, va_list varglist);\fR
.SH DESCRIPTION
The \fBscanw\fR, \fBwscanw\fR and \fBmvscanw\fR routines are analogous to
\fBscanf\fR [see \fBscanf\fR(3S)].  The effect of these routines is as though
\fBwgetstr\fR were called on the window, and the resulting line used as input
for \fBsscanf\fR(3).  Fields which do not map to a variable in the \fIfmt\fR
field are lost.

The \fBvwscanw\fR routine is similar to \fBvwprintw\fR in that it performs a
\fBwscanw\fR using a variable argument list.  The third argument is a
\fIva\fR_\fIlist\fR, a pointer to a list of arguments, as defined in
\fB<varargs.h>\fR.
.SH RETURN VALUE
\fBvwscanw\fR returns \fBERR\fR on failure and an integer equal to the
number of fields scanned on success.

Applications may use the return value from the \fBscanw\fR, \fBwscanw\fR,
\fBmvscanw\fR and \fBmvwscanw\fR routines to determine the number of fields
which were mapped in the call.
.SH PORTABILITY
The XSI Curses standard, Issue 4 describes these functions.  The function
\fBvwscanw\fR is marked TO BE WITHDRAWN, and is to be replaced by a function
\fBvw_scanw\fR using the \fB<stdarg.h>\fR interface.
.SH SEE ALSO
\fBcurses\fR(3X), \fBcurs_getstr\fR, \fBcurs_printw\fR, \fBscanf\fR(3S)
.\"#
.\"# The following sets edit modes for GNU EMACS
.\"# Local Variables:
.\"# mode:nroff
.\"# fill-column:79
.\"# End:
