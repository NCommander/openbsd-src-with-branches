.TH curs_addstr 3X ""
.SH NAME
\fBaddstr\fR, \fBaddnstr\fR, \fBwaddstr\fR, \fBwaddnstr\fR,
\fBmvaddstr\fR, \fBmvaddnstr\fR, \fBmvwaddstr\fR, \fBmvwaddnstr\fR - add a
string of characters to a \fBcurses\fR window and advance cursor
.SH SYNOPSIS
\fB#include <curses.h>\fR

\fBint addstr(const char *str);\fR
.br
\fBint addnstr(const char *str, int n);\fR
.br
\fBint waddstr(WINDOW *win, const char *str);\fR
.br
\fBint waddnstr(WINDOW *win, const char *str, int n);\fR
.br
\fBint mvaddstr(int y, int x, const char *str);\fR
.br
\fBint mvaddnstr(int y, int x, const char *str, int n);\fR
.br
\fBint mvwaddstr(WINDOW *win, int y, int x, const char *str);\fR
.br
\fBint mvwaddnstr(WINDOW *win, int y, int x, const char *str, int n);\fR
.SH DESCRIPTION
These routines write the characters of the (null-terminated) character string
\fIstr\fR on the given window.  It is similar to calling \fBwaddch\fR once for
each character in the string.  The four routines with \fIn\fR as the last
argument write at most \fIn\fR characters.  If \fIn\fR is -1, then the
entire string will be added.
.SH RETURN VALUE
All routines return the integer \fBERR\fR upon failure and \fBOK\fR on success
(the SVr4 manuals specify only "an integer value other than \fBERR\fR") upon
successful completion.
.SH NOTES
Note that all of these routines except \fBwaddstr\fR and \fBwaddnstr\fR may be
macros.
.SH PORTABILITY
All these entry points are described in the XSI Curses standard, Issue 4.  The
XSI errors EILSEQ and EOVERFLOW, associated with extended-level conformance,
are not yet detected.
.SH SEE ALSO
\fBcurses\fR(3X), \fBcurs_addch\fR(3X).
.\"#
.\"# The following sets edit modes for GNU EMACS
.\"# Local Variables:
.\"# mode:nroff
.\"# fill-column:79
.\"# End:
