.\"	$OpenBSD: sysctl.3,v 1.24 1999/07/02 18:18:24 aaron Exp $
.\"
.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd June 4, 1993
.Dt SYSCTL 3
.Os
.Sh NAME
.Nm sysctl
.Nd get or set system information
.Sh SYNOPSIS
.Fd #include <sys/param.h>
.Fd #include <sys/sysctl.h>
.Ft int
.Fn sysctl "int *name" "u_int namelen" "void *oldp" "size_t *oldlenp" "void *newp" "size_t newlen"
.Sh DESCRIPTION
The
.Fn sysctl
function retrieves system information and allows processes with
appropriate privileges to set system information.
The information available from
.Fn sysctl
consists of integers, strings, and tables.
Information may be retrieved and set from the command interface
using the 
.Xr sysctl 8
utility.
.Pp
Unless explicitly noted below,
.Fn sysctl
returns a consistent snapshot of the data requested.
Consistency is obtained by locking the destination
buffer into memory so that the data may be copied out without blocking.
Calls to
.Fn sysctl
are serialized to avoid deadlock.
.Pp
The state is described using a
.Dq Management Information Base (MIB)
style name, listed in
.Fa name ,
which is a
.Fa namelen
length array of integers.
.Pp
The information is copied into the buffer specified by
.Fa oldp .
The size of the buffer is given by the location specified by
.Fa oldlenp
before the call,
and that location gives the amount of data copied after a successful call.
If the amount of data available is greater
than the size of the buffer supplied,
the call supplies as much data as fits in the buffer provided
and returns with the error code
.Er ENOMEM .
If the old value is not desired,
.Fa oldp
and
.Fa oldlenp
should be set to
.Dv NULL .
.Pp
The size of the available data can be determined by calling 
.Fn sysctl
with a
.Dv NULL
parameter for
.Fa oldp .
The size of the available data will be returned in the location pointed to by
.Fa oldlenp .
For some operations, the amount of space may change often.
For these operations,
the system attempts to round up so that the returned size is
large enough for a call to return the data shortly thereafter.
.Pp
To set a new value,
.Fa newp
is set to point to a buffer of length
.Fa newlen
from which the requested value is to be taken.
If a new value is not to be set,
.Fa newp
should be set to
.Dv NULL
and
.Fa newlen
set to 0.
.Pp
The top level names are defined with a
.Dv CTL_
prefix in
.Pa <sys/sysctl.h> ,
and are as follows.
The next and subsequent levels down are found in the include files
listed here, and described in separate sections below.
.Pp
.Bl -column CTLXMACHDEPXXX "Next level namesXXXXXX" -offset indent
.It Sy Name	Next level names	Description
.It Dv CTL_DEBUG No "	sys/sysctl.h	Debugging"
.It Dv CTL_FS No "	sys/sysctl.h	File system"
.It Dv CTL_HW No "	sys/sysctl.h	Generic CPU, I/O"
.It Dv CTL_KERN No "	sys/sysctl.h	High kernel limits"
.It Dv CTL_MACHDEP No "	sys/sysctl.h	Machine dependent"
.It Dv CTL_NET No "	sys/socket.h	Networking"
.It Dv CTL_USER No "	sys/sysctl.h	User-level"
.It Dv CTL_VM No "	vm/vm_param.h	Virtual memory"
.El
.Pp
For example, the following retrieves the maximum number of processes allowed
in the system:
.Pp
.Bd -literal -offset indent -compact
int mib[2], maxproc;
size_t len;
.sp
mib[0] = CTL_KERN;
mib[1] = KERN_MAXPROC;
len = sizeof(maxproc);
sysctl(mib, 2, &maxproc, &len, NULL, 0);
.Ed
.sp
To retrieve the standard search path for the system utilities:
.Pp
.Bd -literal -offset indent -compact
int mib[2];
size_t len;
char *p;
.sp
mib[0] = CTL_USER;
mib[1] = USER_CS_PATH;
sysctl(mib, 2, NULL, &len, NULL, 0);
p = malloc(len);
sysctl(mib, 2, p, &len, NULL, 0);
.Ed
.Ss CTL_DEBUG
The debugging variables vary from system to system.
A debugging variable may be added or deleted without need to recompile
.Fn sysctl
to know about it.
Each time it runs,
.Fn sysctl
gets the list of debugging variables from the kernel and
displays their current values.
The system defines twenty 
.Li struct ctldebug
variables named 
.Va debug0
through
.Va debug19 .
They are declared as separate variables so that they can be
individually initialized at the location of their associated variable.
The loader prevents multiple use of the same variable by issuing errors
if a variable is initialized in more than one place.
For example, to export the variable
.Va dospecialcheck
as a debugging variable, the following declaration would be used:
.Pp
.Bd -literal -offset indent -compact
int dospecialcheck = 1;
struct ctldebug debug5 = { "dospecialcheck", &dospecialcheck };
.Ed
.Ss CTL_FS
There are currently no second level names for the file system.
.Ss CTL_HW
The string and integer information available for the
.Dv CTL_HW
level is detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
.Bl -column "Second level nameXXXXXX" integerXXX -offset indent
.It Sy  Second level name	Type	Changeable
.It Dv HW_MACHINE No "	string	no"
.It Dv HW_MODEL No "	string	no"
.It Dv HW_NCPU No "	integer	no"
.It Dv HW_BYTEORDER No "	integer	no"
.It Dv HW_PHYSMEM No "	integer	no"
.It Dv HW_USERMEM No "	integer	no"
.It Dv HW_PAGESIZE No "	integer	no"
.\".It Dv HW_DISKNAMES No "	integer	no"
.\".It Dv HW_DISKSTATS No "	integer	no"
.El
.Pp
.Bl -tag -width "123456"
.It Dv HW_MACHINE
The machine class.
.It Dv HW_MODEL
The machine model
.It Dv HW_NCPU
The number of CPUs.
.It Dv HW_BYTEORDER
The byteorder (4,321 or 1,234).
.It Dv HW_PHYSMEM
The bytes of physical memory.
.It Dv HW_USERMEM
The bytes of non-kernel memory.
.It Dv HW_PAGESIZE
The software page size.
.\".It Dv HW_DISKNAMES
.\".It Dv HW_DISKSTATS
.El
.Ss CTL_KERN
The string and integer information available for the
.Dv CTL_KERN
level is detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
The types of data currently available are process information,
system vnodes, the open file entries, routing table entries,
virtual memory statistics, load average history, and clock rate
information.
.Bl -column "KERNXCHOWNXRESTRICTEDXXX" "struct clockrateXXX" -offset indent
.It Sy Second level name	Type	Changeable
.It Dv KERN_ARGMAX No "	integer	no"
.It Dv KERN_ARND No "	integer	no"
.It Dv KERN_BOOTTIME No "	struct timeval	no"
.It Dv KERN_CHOWN_RESTRICTED No "	integer	no"
.It Dv KERN_CLOCKRATE No "	struct clockinfo	no"
.It Dv KERN_DOMAINNAME No "	string	yes"
.It Dv KERN_FILE No "	struct file	no"
.It Dv KERN_FSYNC No "	integer	no"
.It Dv KERN_HOSTID No "	integer	yes"
.It Dv KERN_HOSTNAME No "	string	yes"
.It Dv KERN_JOB_CONTROL No "	integer	no"
.It Dv KERN_LINK_MAX No "	integer	no"
.It Dv KERN_MAXFILES No "	integer	yes"
.It Dv KERN_MAXPARTITIONS No "	integer	no"
.It Dv KERN_MAXPROC No "	integer	yes"
.It Dv KERN_MAXVNODES No "	integer	yes"
.It Dv KERN_MAX_CANON No "	integer	no"
.It Dv KERN_MAX_INPUT No "	integer	no"
.It Dv KERN_NAME_MAX No "	integer	no"
.It Dv KERN_NGROUPS No "	integer	no"
.It Dv KERN_NO_TRUNC No "	integer	no"
.It Dv KERN_OSRELEASE No "	string	no"
.It Dv KERN_OSREV No "	integer	no"
.It Dv KERN_OSTYPE No "	string	no"
.It Dv KERN_PATH_MAX No "	integer	no"
.It Dv KERN_PIPE_BUF No "	integer	no"
.It Dv KERN_POSIX1 No "	integer	no"
.It Dv KERN_PROC No "	struct proc	no"
.It Dv KERN_PROF No "	node	not applicable"
.It Dv KERN_RAWPARTITION No "	integer	no"
.It Dv KERN_RND No "	struct rndstats	no"
.It Dv KERN_SAVED_IDS No "	integer	no"
.It Dv KERN_SECURELVL No "	integer	raise only"
.It Dv KERN_SYSVMSG No "	integer	no"
.It Dv KERN_SYSVSEM No "	integer	no"
.It Dv KERN_SYSVSHM No "	integer	no"
.It Dv KERN_VDISABLE No "	integer	no"
.It Dv KERN_VERSION No "	string	no"
.It Dv KERN_VNODE No "	struct vnode	no"
.El
.Pp
.Bl -tag -width "123456"
.It Dv KERN_ARGMAX
The maximum bytes of argument to
.Xr exec 2 .
.It Dv KERN_ARND
Returns a random integer from the kernel
.Fn arc4random
function.
This can be useful if
.Pa /dev/arandom
is not available (see
.Xr random 4 ) .
.It Dv KERN_BOOTTIME
A
.Li struct timeval
structure is returned.
This structure contains the time that the system was booted.
.It Dv KERN_CHOWN_RESTRICTED
Return 1 if appropriate privileges are required for the
.Xr chown 2
system call, otherwise 0.
.It Dv KERN_CLOCKRATE
A
.Li struct clockinfo
structure is returned.
This structure contains the clock, statistics clock and profiling clock
frequencies, the number of micro-seconds per hz tick, and the clock
skew rate.
.It Dv KERN_DOMAINNAME
Get or set the YP domain name.
.It Dv KERN_FILE
Return the entire file table.
The returned data consists of a single
.Li struct filehead
followed by an array of
.Li struct file ,
whose size depends on the current number of such objects in the system.
.It Dv KERN_FSYNC
Return 1 if the File Synchronisation Option is available on this system,
otherwise 0.
.It Dv KERN_HOSTID
Get or set the host ID.
.It Dv KERN_HOSTNAME
Get or set the hostname.
.It Dv KERN_JOB_CONTROL
Return 1 if job control is available on this system, otherwise 0.
.It Dv KERN_LINK_MAX
The maximum file link count.
.It Dv KERN_MAXFILES
The maximum number of open files that may be open in the system.
.It Dv KERN_MAXPARTITIONS
The maximum number of partitions allowed per disk.
.It Dv KERN_MAXPROC
The maximum number of simultaneous processes the system will allow.
.It Dv KERN_MAXVNODES
The maximum number of vnodes available on the system.
.It Dv KERN_MAX_CANON
The maximum number of bytes in terminal canonical input line.
.It Dv KERN_MAX_INPUT
The minimum maximum number of bytes for which space is available in
a terminal input queue.
.It Dv KERN_NAME_MAX
The maximum number of bytes in a file name.
.It Dv KERN_NGROUPS
The maximum number of supplemental groups.
.It Dv KERN_NO_TRUNC
Return 1 if file names longer than
.Dv KERN_NAME_MAX
are truncated.
.It Dv KERN_OSRELEASE
The system release string.
.It Dv KERN_OSREV
The system revision number.
.It Dv KERN_OSTYPE
The system type string.
.It Dv KERN_PATH_MAX
The maximum number of bytes in a pathname.
.It Dv KERN_PIPE_BUF
The maximum number of bytes which will be written atomically to a pipe.
.It Dv KERN_POSIX1
The version of ISO/IEC 9945 (POSIX 1003.1) with which the system
attempts to comply.
.It Dv KERN_PROC
Return the entire process table, or a subset of it.
An array of
.Li struct kinfo_proc
structures is returned,
whose size depends on the current number of such objects in the system.
The third and fourth level names are as follows:
.Bl -column "Third level nameXXXXXX" "Fourth level is:XXXXXX" -offset indent
.It Sy Third level name	Fourth level is:
.It Dv KERN_PROC_ALL No "	None"
.It Dv KERN_PROC_PID No "	A process ID"
.It Dv KERN_PROC_PGRP No "	A process group"
.It Dv KERN_PROC_TTY No "	A tty device"
.It Dv KERN_PROC_UID No "	A user ID"
.It Dv KERN_PROC_RUID No "	A real user ID"
.El
.It Dv KERN_PROF
Return profiling information about the kernel.
If the kernel is not compiled for profiling,
attempts to retrieve any of the
.Dv KERN_PROF
values will fail with
.Er EOPNOTSUPP .
The third level names for the string and integer profiling information 
is detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
.Bl -column "GPROFXGMONPARAMXXX" "struct gmonparamXXX" -offset indent
.It Sy Third level name	Type	Changeable
.It Dv GPROF_STATE No "	integer	yes"
.It Dv GPROF_COUNT No "	u_short[\|]	yes"
.It Dv GPROF_FROMS No "	u_short[\|]	yes"
.It Dv GPROF_TOS No "	struct tostruct	yes"
.It Dv GPROF_GMONPARAM No "	struct gmonparam	no"
.El
.Pp
The variables are as follows:
.Bl -tag -width "123456"
.It Dv GPROF_STATE
Returns
.Dv GMON_PROF_ON
or
.Dv GMON_PROF_OFF
to show that profiling is running or stopped.
.It Dv GPROF_COUNT
Array of statistical program counter counts.
.It Dv GPROF_FROMS
Array indexed by program counter of call-from points.
.It Dv GPROF_TOS
Array of
.Li struct tostruct
describing destination of calls and their counts.
.It Dv GPROF_GMONPARAM
Structure giving the sizes of the above arrays.
.El
.It Dv KERN_RAWPARTITION
The raw partition of a disk (a == 0).
.It Dv KERN_RND
Returns statistics about the
.Pa /dev/random
device in a
.Li struct rndstats
structure.
.It Dv KERN_SAVED_IDS
Returns 1 if saved set-group-ID and saved set-user-ID are available.
.It Dv KERN_SECURELVL
The system security level.
This level may be raised by processes with appropriate privileges.
It may only be lowered by process 1.
.It Dv KERN_SYSVMSG
Returns 1 if System V style message queue functionality is available on this
system, otherwise 0.
.It Dv KERN_SYSVSEM
Returns 1 if System V style semaphore functionality is available on this
system, otherwise 0.
.It Dv KERN_SYSVSHM
Returns 1 if System V style share memory functionality is available on this
system, otherwise 0.
.It Dv KERN_VDISABLE
Returns the terminal character disabling value.
.It Dv KERN_VERSION
The system version string.
.It Dv KERN_VNODE
Return the entire vnode table.
Note, the vnode table is not necessarily a consistent snapshot of
the system.
The returned data consists of an array whose size depends on the
current number of such objects in the system.
Each element of the array contains the kernel address of a vnode
.Li struct vnode *
followed by the vnode itself
.Li struct vnode .
.El
.Ss CTL_MACHDEP
The set of variables defined is architecture dependent.
Most architectures define at least the following variables.
.Bl -column "CONSOLE_DEVICEXXX" "integerXXX" -offset indent
.It Sy Second level name	Type	Changeable
.It Dv CPU_CONSDEV No "	dev_t	no"
.El
.Ss CTL_NET
The string and integer information available for the
.Dv CTL_NET
level is detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
.Bl -column "Second level nameXXXXXX" "routing messagesXXX" -offset indent
.It Sy Second level name	Type	Changeable
.It Dv PF_ROUTE No "	routing messages	no"
.It Dv PF_INET No "	internet values	yes"
.It Dv PF_ENCAP No "	IPsec values	yes"
.El
.Pp
.Bl -tag -width "123456"
.It Dv PF_ENCAP
Get or set various global information about the
.Tn IP
security protocols.
The third level name is the protocol.   
The fourth level name is the variable name.
The currently defined protocols and names are:
.Bl -column "Protocol name" "Variable name" "integer" -offset indent
.It Sy Protocol name	Variable name	Type	Changeable
.It encap	encdebug	integer	yes
.El
.Pp
The variables are as follows:
.Bl -tag -width "123456"
.It Li encap.encdebug
Returns 1 when error message reporting is enabled for the host.
If the kernel has been compiled with the
.Dv ENCDEBUG
option,
then debugging information will also be reported when this variable is set.
.El
.It Dv PF_ROUTE
Return the entire routing table or a subset of it.
The data is returned as a sequence of routing messages (see
.Xr route 4
for the header file, format, and meaning).
The length of each message is contained in the message header.
.Pp
The third level name is a protocol number, which is currently always 0.
The fourth level name is an address family, which may be set to 0 to
select all address families.
The fifth and sixth level names are as follows:
.Bl -column "Fifth level nameXXXXXX" "Sixth level is:XXX" -offset indent
.It Sy Fifth level name	Sixth level is:
.It Dv NET_RT_FLAGS No "	rtflags"
.It Dv NET_RT_DUMP No "	None"
.It Dv NET_RT_IFLIST No "	None"
.El
.It Dv PF_INET
Get or set various global information about the internet protocols.
The third level name is the protocol.
The fourth level name is the variable name.
The currently defined protocols and names are:
.Bl -column "Protocol name" "Variable name" "integer" -offset indent
.It Sy Protocol name	Variable name	Type	Changeable
.It ip	forwarding	integer	yes
.It ip	redirect	integer	yes
.It ip	ttl	integer	yes
.It icmp	maskrepl	integer	yes
.It tcp	rfc1323	integer	yes
.It tcp	baddynamic	array	yes
.It tcp	ident	structure	no
.It tcp	sack	integer	yes
.It tcp	mssdflt	integer	yes
.It udp	checksum	integer	yes
.It udp	baddynamic	array	yes
.El
.Pp
The variables are as follows:
.Bl -tag -width "123456"
.It Li ip.forwarding
Returns 1 when
.Tn IP
forwarding is enabled for the host,
indicating the host is acting as a router.
.It Li ip.redirect
Returns 1 when
.Tn ICMP
redirects may be sent by the host.
This option is ignored unless the host is routing
.Tn IP
packets,
and should normally be enabled on all systems.
.It Li ip.ttl
The maximum time-to-live (hop count) value for an
.Tn IP
packet sourced by
the system.
This value applies to normal transport protocols, not to
.Tn ICMP .
.It Li icmp.maskrepl
Returns 1 if
.Tn ICMP
network mask requests are to be answered.
.It Li tcp.rfc1323
Returns 1 if RFC1323 extensions to
.Tn TCP
are enabled.
.It Li tcp.baddynamic
An array of
.Li in_port_t
is returned specifying the bitmask of
.Tn TCP
ports between 512
and 1023 inclusive that should not be allocated dynamically
by the kernel (i.e., they must be bound specifically by port number).
.It Li tcp.ident
A structure
.Li struct tcp_ident_mapping
specifying a local and foreign endpoint of a
.Tn TCP
socket is filled in with the euid and ruid of the process that owns the socket.
If no such socket exists then the euid and ruid values are both
set to \-1.
.It Li tcp.sack
Returns 1 if RFC2018 Selective Acknowledgements are enabled.
.It Li tcp.mssdflt
The maximum segment size that is used as default for non local
connections. The default value is 512.
.It Li udp.checksum
Returns 1 when
.Tn UDP
checksums are being computed and checked.
Disabling
.Tn UDP
checksums is strongly discouraged.
.It Li udp.baddynamic
Analogous to
.Li tcp.baddynamic
but for
.Tn UDP
sockets.
.El
.El
.Ss CTL_USER
The string and integer information available for the
.Dv CTL_USER
level is detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
.Bl -column "USER_COLL_WEIGHTS_MAXXXX" "integerXXX" -offset indent
.It Sy Second level name	Type	Changeable
.It Dv USER_BC_BASE_MAX No "	integer	no"
.It Dv USER_BC_DIM_MAX No "	integer	no"
.It Dv USER_BC_SCALE_MAX No "	integer	no"
.It Dv USER_BC_STRING_MAX No "	integer	no"
.It Dv USER_COLL_WEIGHTS_MAX No "	integer	no"
.It Dv USER_CS_PATH No "	string	no"
.It Dv USER_EXPR_NEST_MAX No "	integer	no"
.It Dv USER_LINE_MAX No "	integer	no"
.It Dv USER_POSIX2_CHAR_TERM No "	integer	no"
.It Dv USER_POSIX2_C_BIND No "	integer	no"
.It Dv USER_POSIX2_C_DEV No "	integer	no"
.It Dv USER_POSIX2_FORT_DEV No "	integer	no"
.It Dv USER_POSIX2_FORT_RUN No "	integer	no"
.It Dv USER_POSIX2_LOCALEDEF No "	integer	no"
.It Dv USER_POSIX2_SW_DEV No "	integer	no"
.It Dv USER_POSIX2_UPE No "	integer	no"
.It Dv USER_POSIX2_VERSION No "	integer	no"
.It Dv USER_RE_DUP_MAX No "	integer	no"
.It Dv USER_STREAM_MAX No "	integer	no"
.It Dv USER_TZNAME_MAX No "	integer	no"
.El
.Bl -tag -width "123456"
.Pp
.It Dv USER_BC_BASE_MAX
The maximum ibase/obase values in the
.Xr bc 1
utility.
.It Dv USER_BC_DIM_MAX
The maximum array size in the
.Xr bc 1
utility.
.It Dv USER_BC_SCALE_MAX
The maximum scale value in the
.Xr bc 1
utility.
.It Dv USER_BC_STRING_MAX
The maximum string length in the
.Xr bc 1
utility.
.It Dv USER_COLL_WEIGHTS_MAX
The maximum number of weights that can be assigned to any entry of
the
.Dv LC_COLLATE
order keyword in the locale definition file.
.It Dv USER_CS_PATH
Return a value for the
.Ev PATH
environment variable that finds all the standard utilities.
.It Dv USER_EXPR_NEST_MAX
The maximum number of expressions that can be nested within
parenthesis by the
.Xr expr 1
utility.
.It Dv USER_LINE_MAX
The maximum length in bytes of a text-processing utility's input
line.
.It Dv USER_POSIX2_CHAR_TERM
Return 1 if the system supports at least one terminal type capable of
all operations described in POSIX 1003.2, otherwise 0.
.It Dv USER_POSIX2_C_BIND
Return 1 if the system's C-language development facilities support the
C-Language Bindings Option, otherwise 0.
.It Dv USER_POSIX2_C_DEV
Return 1 if the system supports the C-Language Development Utilities Option,
otherwise 0.
.It Dv USER_POSIX2_FORT_DEV
Return 1 if the system supports the FORTRAN Development Utilities Option,
otherwise 0.
.It Dv USER_POSIX2_FORT_RUN
Return 1 if the system supports the FORTRAN Runtime Utilities Option,
otherwise 0.
.It Dv USER_POSIX2_LOCALEDEF
Return 1 if the system supports the creation of locales, otherwise 0.
.It Dv USER_POSIX2_SW_DEV
Return 1 if the system supports the Software Development Utilities Option,
otherwise 0.
.It Dv USER_POSIX2_UPE
Return 1 if the system supports the User Portability Utilities Option,
otherwise 0.
.It Dv USER_POSIX2_VERSION
The version of POSIX 1003.2 with which the system attempts to comply.
.It Dv USER_RE_DUP_MAX
The maximum number of repeated occurrences of a regular expression
permitted when using interval notation.
.It Dv USER_STREAM_MAX
The maximum number of streams that a process may have open
at any one time.
.It Dv USER_TZNAME_MAX
The minimum maximum number of types supported for the name of a
timezone.
.El
.Ss CTL_VM
The string and integer information available for the
.Dv CTL_VM
level is detailed below.
The changeable column shows whether a process with appropriate
privileges may change the value.
.Bl -column "Second level nameXXXXXX" "struct loadavgXXX" -offset indent
.It Sy Second level name	Type	Changeable
.It Dv VM_LOADAVG No "	struct loadavg	no"
.It Dv VM_METER No "	struct vmtotal	no"
.El
.Pp
.Bl -tag -width "123456"
.It Dv VM_LOADAVG
Return the load average history.
The returned data consists of a
.Li struct loadavg .
.It Dv VM_METER
Return the system wide virtual memory statistics.
The returned data consists of a
.Li struct vmtotal .
.El
.Sh RETURN VALUES
If the call to
.Fn sysctl
is unsuccessful, \-1 is returned and
.Va errno
is set appropriately.
.Sh ERRORS
The following errors may be reported:
.Bl -tag -width Er
.It Bq Er EFAULT
The buffer
.Fa name ,
.Fa oldp ,
.Fa newp ,
or length pointer
.Fa oldlenp
contains an invalid address.
.It Bq Er EINVAL
The
.Fa name
array is less than two or greater than
.Dv CTL_MAXNAME .
.It Bq Er EINVAL
A non-null
.Fa newp
pointer is given and its specified length in
.Fa newlen
is too large or too small.
.It Bq Er ENOMEM
The length pointed to by
.Fa oldlenp
is too short to hold the requested value.
.It Bq Er ENOTDIR
The
.Fa name
array specifies an intermediate rather than terminal name.
.It Bq Er EOPNOTSUPP
The
.Fa name
array specifies a value that is unknown.
.It Bq Er EPERM
An attempt is made to set a read-only value.
.It Bq Er EPERM
A process without appropriate privileges attempts to set a value.
.It Bq Er EPERM
An attempt to change a value protected by the current kernel security
level is made.
.El
.Sh FILES
.Bl -tag -width <netinet/icmpXvar.h> -compact
.It Pa <sys/sysctl.h>
definitions for top level identifiers, second level kernel and hardware
identifiers, and user level identifiers
.It Pa <sys/socket.h>
definitions for second level network identifiers
.It Pa <sys/gmon.h>
definitions for third level profiling identifiers
.It Pa <vm/vm_param.h>
definitions for second level virtual memory identifiers
.It Pa <netinet/in.h>
definitions for third level Internet identifiers and
fourth level
.Tn IP
identifiers
.It Pa <netinet/icmp_var.h>
definitions for fourth level
.Tn ICMP
identifiers
.It Pa <netinet/tcp_var.h>
definitions for fourth level
.Tn TCP
identifiers
.It Pa <netinet/udp_var.h>
definitions for fourth level
.Tn UDP
identifiers
.El
.Sh SEE ALSO
.Xr sysctl 8
.Sh HISTORY
The
.Fn sysctl
function first appeared in
.Bx 4.4 .
