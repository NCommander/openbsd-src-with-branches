'\" t
.TH form_field 3X ""
.SH NAME
\fBform_field\fR - make and break connections between fields and forms
.SH SYNOPSIS
\fB#include <form.h>\fR
.br
int set_form_fields(FORM *form, FIELD **fields);
.br
FIELD **form_fields(const FORM *form);
.br
int field_count(const FORM *form);
.br
int move_field(FIELD *field, int frow, int fcol);
.br
.SH DESCRIPTION
The function \fBset_form_fields\fR changes the field pointer array of
the given \fIform\fR.  The array must be terminated by a \fBNULL\fR.

The function \fBform_fields\fR returns the field array of the given form.

The function \fBfield_count\fR returns the count of fields in \fIform\fR.

The function \fBmove_field\fR move the given field (which must be disconnected)
to a specified location on the screen.
.SH RETURN VALUES
The function \fBform_fields\fR returns \fBNULL\fR on error.

The function \fBfield_count\fR returns \fBERR\fR (the general
\fBcurses\fR error return value) on error.

The functions \fBset_form_fields\fR and \fBmove_field\fR return one of
the following codes on error:
.TP 5
\fBE_OK\fR
The routine succeeded.
.TP 5
\fBE_SYSTEM_ERROR\fR
System error occurred (see \fBerrno\fR).
.TP 5
\fBE_BAD_ARGUMENT\fR
Routine detected an incorrect or out-of-range argument.
.TP 5
\fBE_POSTED\fR
The form is already posted.
.TP 5
\fBE_CONNECTED\fR
The field is already connected to a form.
.SH SEE ALSO
\fBcurses\fR(3X), \fBform\fR(3X).
.SH NOTES
The header file \fB<form.h>\fR automatically includes the header file
\fB<curses.h>\fR.
.SH PORTABILITY
These routines emulate the System V forms library.  They were not supported on
Version 7 or BSD versions.

The SVr4 forms library documentation specifies the \fBfield_count\fR error value
as -1 (which is the value of \fBERR\fR).
.SH AUTHORS
Juergen Pfeifer.  Manual pages and adaptation for new curses by Eric
S. Raymond.
.\"#
.\"# The following sets edit modes for GNU EMACS
.\"# Local Variables:
.\"# mode:nroff
.\"# fill-column:79
.\"# End:
